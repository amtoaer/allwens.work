{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/sagiri/source/fonts/sigmarone1.woff2","path":"fonts/sigmarone1.woff2","modified":0,"renderable":1},{"_id":"themes/sagiri/source/fonts/sigmarone3.woff2","path":"fonts/sigmarone3.woff2","modified":0,"renderable":1},{"_id":"themes/sagiri/source/fonts/sigmarone2.woff2","path":"fonts/sigmarone2.woff2","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/cc-by-nc-nd.png","path":"images/cc-by-nc-nd.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/cc-by-nc-sa.png","path":"images/cc-by-nc-sa.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/cc-by-nc.png","path":"images/cc-by-nc.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/cc-by-nd.png","path":"images/cc-by-nd.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/cc-by.png","path":"images/cc-by.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/cc-zero.png","path":"images/cc-zero.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/cc-by-sa.png","path":"images/cc-by-sa.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/cursor.ico","path":"images/cursor.ico","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/failure.ico","path":"images/failure.ico","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/footer.png","path":"images/footer.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/scroll.png","path":"images/scroll.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/js/cheat.js","path":"js/cheat.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/js/pisces.js","path":"js/pisces.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/js/evan-you.js","path":"js/evan-you.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/js/top.js","path":"js/top.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/js/fireworks.js","path":"js/fireworks.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/link/qiyue.jpg","path":"images/link/qiyue.jpg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/link/fluctlight.jpg","path":"images/link/fluctlight.jpg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/velocity-animate/README.md","path":"lib/velocity-animate/README.md","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/velocity-animate/package.json","path":"lib/velocity-animate/package.json","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/sw-toolbox/sw-toolbox.js","path":"lib/sw-toolbox/sw-toolbox.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/velocity-animate/LICENSE.md","path":"lib/velocity-animate/LICENSE.md","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/velocity-animate/velocity.ui.js","path":"lib/velocity-animate/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/velocity-animate/velocity.min.js","path":"lib/velocity-animate/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/link/wenwen.jpg","path":"images/link/wenwen.jpg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/velocity-animate/velocity.ui.min.js","path":"lib/velocity-animate/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/link/laina.jpg","path":"images/link/laina.jpg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/live2d/22/22.model.json","path":"images/live2d/22/22.model.json","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/live2d/33/33.model.json","path":"images/live2d/33/33.model.json","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/social-share.js/css/share.min.css","path":"lib/social-share.js/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/social-share.js/fonts/iconfont.ttf","path":"lib/social-share.js/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/social-share.js/fonts/iconfont.svg","path":"lib/social-share.js/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/social-share.js/fonts/iconfont.eot","path":"lib/social-share.js/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/social-share.js/fonts/iconfont.woff","path":"lib/social-share.js/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/social-share.js/js/social-share.min.js","path":"lib/social-share.js/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/social-share.js/js/jquery.share.min.js","path":"lib/social-share.js/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/header-darlings.jpg","path":"images/header-darlings.jpg","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/velocity-animate/velocity.js","path":"lib/velocity-animate/velocity.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/live2d/22/22.moc","path":"images/live2d/22/22.moc","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/live2d/33/33.moc","path":"images/live2d/33/33.moc","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/live2d/22/22.2048/texture_00.png","path":"images/live2d/22/22.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/live2d/33/33.2048/texture_00.png","path":"images/live2d/33/33.2048/texture_00.png","modified":0,"renderable":1},{"_id":"themes/sagiri/source/images/card.png","path":"images/card.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"53db07a77fd84c72ce5dd0ae75c21271ca248493","modified":1580019855539},{"_id":"themes/sagiri/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1580002196000},{"_id":"themes/sagiri/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1580002196000},{"_id":"themes/sagiri/.gitignore","hash":"1a24cffb713c184861bf805cb674ebfc70125517","modified":1580002196000},{"_id":"themes/sagiri/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1580002196000},{"_id":"themes/sagiri/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1580002196000},{"_id":"themes/sagiri/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1580002196000},{"_id":"themes/sagiri/LICENSE","hash":"62b5465275003c2adf97276fb06fd80662e01a8e","modified":1580002196000},{"_id":"themes/sagiri/README.md","hash":"08fb29b413f3fbcb318bef061cb67dd34216a0f6","modified":1580002196000},{"_id":"themes/sagiri/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1580002196000},{"_id":"themes/sagiri/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1580002196000},{"_id":"themes/sagiri/_config.yml","hash":"82c15fa2715618f86a98803f73a6fc970753d88f","modified":1590928499174},{"_id":"themes/sagiri/package.json","hash":"b825e19e968c4bae977cefa3b0aac9e6de2da432","modified":1580050017169},{"_id":"themes/sagiri/说明.md","hash":"52dd969f7ba03dfd6464c9e101a739d4000b9494","modified":1582980758743},{"_id":"source/_posts/configOnedrive.md","hash":"db530ef741fa4b850cb54df619666da3cac97d76","modified":1591022561576},{"_id":"source/_posts/changeTheme.md","hash":"88434d61c0e6a32333d313d59a175734bb3368cd","modified":1582862716933},{"_id":"source/_posts/disableKeyboard.md","hash":"c056c9f15d0495ba7140346bf7424aa9c8ea460d","modified":1580053292349},{"_id":"source/_posts/formSubmit.md","hash":"3d7f7b11a9dc8a18cf05f5dc9694b7ebdb6b1587","modified":1580823914592},{"_id":"source/_posts/cleanUpFiles.md","hash":"c50d5b55233aa0e58348ea1ca80909b2d4c9b2ce","modified":1580053413410},{"_id":"source/_posts/medum.md","hash":"e3fd7c6f2e92fa88de84b673907e25163af10620","modified":1590252097189},{"_id":"source/_posts/questionTest.md","hash":"1c542f529f334921f239d2fcfb81b7e221236b66","modified":1580823868361},{"_id":"source/_posts/typora.md","hash":"20304a5c823221399f61728f8903e7c58339472b","modified":1588129913568},{"_id":"source/_posts/stringCenter.md","hash":"86df011ea9f1c96ed866023f9c272e4b5432e96a","modified":1580053400100},{"_id":"source/_posts/newTerm.md","hash":"b2b72844c73e3ef2d481b701980bb6da7fb85746","modified":1583146728218},{"_id":"source/_posts/uploadImage.md","hash":"d3d14d952978bd2e70e47b15e8e7f65aae71a988","modified":1582969757164},{"_id":"source/_posts/zshToFish.md","hash":"be0fd552b7bdf7cdcb5bfb4d371841a7fac0afc8","modified":1582987759624},{"_id":"source/_posts/yourRssBot.md","hash":"8791df2a78d3b3f04f34a85e0eef2a31b9f3abb2","modified":1582475836510},{"_id":"source/categories/index.md","hash":"2ffec19271a38eee25838c8eef8e0a0fe42beb35","modified":1562125920000},{"_id":"source/_posts/wpsChangeLanguage.md","hash":"44177d3cdc418ff7e634aab5f78fb005c1411a6f","modified":1580824013643},{"_id":"source/donate/index.md","hash":"30922fcd55b2bc3430daf957abcb5eb285393cc8","modified":1580052355347},{"_id":"themes/sagiri/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1580002196000},{"_id":"themes/sagiri/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1580002196000},{"_id":"source/message/index.md","hash":"39ee7928e50528d52892d398b56c51940b2f4e2d","modified":1580052407088},{"_id":"source/friends/index.md","hash":"173d259f228493173124770f97c4289c4747b7ec","modified":1590253154173},{"_id":"source/tags/index.md","hash":"87a5af383a03628916191e1b2ba20ac59836d347","modified":1562125961000},{"_id":"themes/sagiri/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1580002196000},{"_id":"themes/sagiri/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1580002196000},{"_id":"themes/sagiri/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1580002196000},{"_id":"themes/sagiri/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1580002196000},{"_id":"themes/sagiri/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1580002196000},{"_id":"themes/sagiri/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1580002196000},{"_id":"themes/sagiri/languages/zh-Hans.yml","hash":"9f1356ebd0e883ab870a6524ea0bf7ec0f6d73fa","modified":1580002196000},{"_id":"themes/sagiri/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1580002196000},{"_id":"themes/sagiri/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1580002196000},{"_id":"themes/sagiri/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1580002196000},{"_id":"themes/sagiri/layout/_layout.swig","hash":"a131a64abdd1b47a506fe400f151192bfb537506","modified":1583426224136},{"_id":"themes/sagiri/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1580002196000},{"_id":"themes/sagiri/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1580002196000},{"_id":"themes/sagiri/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1580002196000},{"_id":"themes/sagiri/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1580002196000},{"_id":"themes/sagiri/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1580002196000},{"_id":"themes/sagiri/layout/category.swig","hash":"da739ffd35ffbdd8e63b33d728e763b8e4d498a5","modified":1580002196000},{"_id":"themes/sagiri/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1580002196000},{"_id":"themes/sagiri/layout/archive.swig","hash":"600aa9eb0eb29e830e28ef5e160e35c1e9198460","modified":1580002196000},{"_id":"themes/sagiri/layout/page.swig","hash":"9e40fa4d47530df9eafee5ac3dd4901a138c6c44","modified":1580002196000},{"_id":"themes/sagiri/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1580002196000},{"_id":"themes/sagiri/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1580002196000},{"_id":"themes/sagiri/layout/tag.swig","hash":"7d245d5b96637bcd36dfcdc949eda9602298e080","modified":1580002196000},{"_id":"themes/sagiri/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1580002196000},{"_id":"themes/sagiri/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1580002196000},{"_id":"themes/sagiri/source/fonts/sigmarone1.woff2","hash":"35d4f8be95cbf9ced2c3eae1bfe63d5ce8ee7214","modified":1580002196000},{"_id":"themes/sagiri/source/fonts/sigmarone3.woff2","hash":"5f62e2560d08e71274fac25c49825113a09776c7","modified":1580002196000},{"_id":"themes/sagiri/source/fonts/sigmarone2.woff2","hash":"feaa47ccbf19dfb2812fa8306f421b88e90af723","modified":1580002196000},{"_id":"themes/sagiri/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1580002196000},{"_id":"themes/sagiri/source/images/alipay.png","hash":"af83cf08f0a99c3a3d1d9a6b91971a3ad5e3af20","modified":1566354766067},{"_id":"themes/sagiri/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1580002196000},{"_id":"themes/sagiri/source/images/cc-by-nc-nd.png","hash":"f7839bdd799c452a4e807a2365849acc0748b3fd","modified":1580002196000},{"_id":"themes/sagiri/source/images/cc-by-nc-sa.png","hash":"cb36e36c3e3959a54ac289e309a4a89a016107bc","modified":1580002196000},{"_id":"themes/sagiri/source/images/cc-by-nc.png","hash":"eaf656bdd1ff61c345a7d42b94ac6f25435f5c42","modified":1580002196000},{"_id":"themes/sagiri/source/images/cc-by-nd.png","hash":"6420f0e99cb3e90d3c37e0e8513d16ada14fed37","modified":1580002196000},{"_id":"themes/sagiri/source/images/cc-by.png","hash":"63f01c43cb5d03cb83d3c867c5ecb768cd89d9df","modified":1580002196000},{"_id":"themes/sagiri/source/images/cc-zero.png","hash":"fd4ce5a5851ef47c3b525652cc3ae8128d405c8f","modified":1580002196000},{"_id":"themes/sagiri/source/images/cc-by-sa.png","hash":"d62ae0fd7204bf889b3f2cbe89eae5865a71c056","modified":1580002196000},{"_id":"themes/sagiri/source/images/cursor.ico","hash":"cd8349fb9cef6c217fc364cf35eae6819cebf5d6","modified":1580002196000},{"_id":"themes/sagiri/source/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1580090606000},{"_id":"themes/sagiri/source/images/favicon.ico","hash":"51cfa2cab8ae30b79cd7360dba747e705ad93bb4","modified":1580090606000},{"_id":"themes/sagiri/source/images/header-darling.jpg","hash":"428d430fd9086c207a4a18d6c55308a74441bfe5","modified":1580002196000},{"_id":"themes/sagiri/source/images/footer.png","hash":"5f27807ccb8beeed9a909571783797901c52c3b7","modified":1580002196000},{"_id":"themes/sagiri/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1580002196000},{"_id":"themes/sagiri/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1580002196000},{"_id":"themes/sagiri/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1580002196000},{"_id":"themes/sagiri/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1580002196000},{"_id":"themes/sagiri/source/images/scroll.png","hash":"443930af0ee54778babad7724291bfed9b431dd5","modified":1580002196000},{"_id":"themes/sagiri/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1580002196000},{"_id":"themes/sagiri/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1580002196000},{"_id":"themes/sagiri/source/images/wechatpay.png","hash":"72f1d0aebb20eef75f3ba2140ce37d8601baf10d","modified":1566354782997},{"_id":"themes/sagiri/source/js/cheat.js","hash":"c19e02d2e306994ab4117991466709c245c150a2","modified":1582980310688},{"_id":"themes/sagiri/source/js/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1580277494000},{"_id":"themes/sagiri/source/js/pisces.js","hash":"0ac6d88ffa9c63f9868e8d63f0d17ef5801e976e","modified":1580306879441},{"_id":"themes/sagiri/source/js/evan-you.js","hash":"6c96bbc6b2f667fef833492a5c4aca14aed9c721","modified":1580215426403},{"_id":"themes/sagiri/source/js/pjax.js","hash":"8b63987741cb1d2a362ea8c1f1b704a08544eeab","modified":1583499858504},{"_id":"themes/sagiri/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1580002196000},{"_id":"themes/sagiri/yarn.lock","hash":"f0807c3a2d307a76105d4d45a8f07db15dc17eaa","modified":1580050017149},{"_id":"themes/sagiri/source/js/top.js","hash":"0505e7ffe3d57e4c2d508e09ef332b8098aa83fb","modified":1580303073621},{"_id":"themes/sagiri/source/js/fireworks.js","hash":"53981959bc6def4a85bbbb41b07e4b1474a2124d","modified":1580106867393},{"_id":"themes/sagiri/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/comment.swig","hash":"083d3f8c91e17610bf08125e46f9d4a64967c7ab","modified":1580550282092},{"_id":"themes/sagiri/layout/_partials/footer.swig","hash":"d07fcab459ac1b7731d01500f96edc70e7af5685","modified":1580105004762},{"_id":"themes/sagiri/layout/_partials/head.swig","hash":"3d95186d6f1531c8ab1159d687d9878d2dcb7752","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/header.swig","hash":"dabf619593923dd69f8fe783dd629277a58fb0ac","modified":1580288139436},{"_id":"themes/sagiri/layout/_partials/pagination.swig","hash":"371101b45c8acf9112d92ed7779195968999ea43","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1580002196000},{"_id":"themes/sagiri/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1580002196000},{"_id":"themes/sagiri/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1580002196000},{"_id":"themes/sagiri/layout/_scripts/vendors.swig","hash":"2e80fffb559eb253596bef181ead9dd547790ca4","modified":1580002196000},{"_id":"themes/sagiri/source/css/main.styl","hash":"36b2836b48bcc98b4261b4c2a982205a9ad794b4","modified":1580002196000},{"_id":"themes/sagiri/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1580002196000},{"_id":"themes/sagiri/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1580002196000},{"_id":"themes/sagiri/layout/_macro/post.swig","hash":"e6ca221bdf994531fde79de03d8bee6831fe577b","modified":1580376147702},{"_id":"themes/sagiri/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1580002196000},{"_id":"themes/sagiri/layout/_macro/sidebar.swig","hash":"790fb189027e6598b6f366fb727f4fceb28e1f54","modified":1583426178276},{"_id":"themes/sagiri/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1580002196000},{"_id":"themes/sagiri/source/images/avatar.jpeg","hash":"e055d5026e24477dba6da6e0fc9ce300213c73b1","modified":1580015137697},{"_id":"themes/sagiri/source/images/header.jpg","hash":"abe0402f182eb0580a284924cb0b738ab644a0d3","modified":1580002196000},{"_id":"themes/sagiri/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580002196000},{"_id":"themes/sagiri/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580002196000},{"_id":"themes/sagiri/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580002196000},{"_id":"themes/sagiri/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580002196000},{"_id":"themes/sagiri/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580002196000},{"_id":"themes/sagiri/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580002196000},{"_id":"themes/sagiri/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580002196000},{"_id":"themes/sagiri/source/images/link/qiyue.jpg","hash":"da568a2a4996db8c10040618a7c9eb3bba775dcd","modified":1580055426315},{"_id":"themes/sagiri/source/images/link/fluctlight.jpg","hash":"c814375f9543650428fcd8b6f998c7bd9ce6b9f4","modified":1583385869360},{"_id":"themes/sagiri/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1580002196000},{"_id":"themes/sagiri/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1580002196000},{"_id":"themes/sagiri/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1580002196000},{"_id":"themes/sagiri/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1580002196000},{"_id":"themes/sagiri/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1580002196000},{"_id":"themes/sagiri/source/lib/velocity-animate/README.md","hash":"dad58a21332a3177b229fa97af6f35309def2bca","modified":1580002196000},{"_id":"themes/sagiri/source/lib/velocity-animate/package.json","hash":"56fecfbc58b207b3592320a5d0e74b9814275bea","modified":1580002196000},{"_id":"themes/sagiri/source/lib/sw-toolbox/sw-toolbox.js","hash":"7e2fd42a8ddb17450970c30a9bc5274f720e602c","modified":1580002196000},{"_id":"themes/sagiri/source/lib/velocity-animate/LICENSE.md","hash":"69b8b84e79ff16de8972798eb6a783a2379b6f13","modified":1580002196000},{"_id":"themes/sagiri/source/lib/velocity-animate/velocity.ui.js","hash":"7731c1bc444855b9b18bfb265cd1c4a169e6be37","modified":1580002196000},{"_id":"themes/sagiri/source/lib/velocity-animate/velocity.min.js","hash":"69c85b9d6a931a7d3a5b0657e60112c31fb3b286","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/head/external-fonts.swig","hash":"60b7136d9986823ccccee236fbae3c4f36e5f884","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1580002196000},{"_id":"themes/sagiri/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/comments/backup","hash":"7fe77750c9f86130adaedb3a9f00b3671ff44cc6","modified":1580043932874},{"_id":"themes/sagiri/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/comments/disqus.swig","hash":"54b1a1427af9d862a59da1d4db28ccbefc582e6d","modified":1580399551887},{"_id":"themes/sagiri/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/comments/valine.swig","hash":"933dc4aaf394332a3c73b4d9e2e6ce53ba40fe44","modified":1580371027118},{"_id":"themes/sagiri/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/lean-analytics.swig","hash":"11c9ad412c04252b156a28a8a4a03b5b0e91a2fc","modified":1580375445703},{"_id":"themes/sagiri/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1580002196000},{"_id":"themes/sagiri/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1580002196000},{"_id":"themes/sagiri/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/search/localsearch.swig","hash":"02212e352100539be39eb21aa68f7573dae91ba9","modified":1580098810191},{"_id":"themes/sagiri/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1580002196000},{"_id":"themes/sagiri/layout/_scripts/pages/post-details.swig","hash":"c49a805eb1aaf4c8a092403d75c3b76e92be0cb2","modified":1583387243354},{"_id":"themes/sagiri/source/css/_custom/custom.styl","hash":"f98da691e6d475cf4ecee9cb1e6498cbf495f475","modified":1582866044708},{"_id":"themes/sagiri/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1580002196000},{"_id":"themes/sagiri/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1580002196000},{"_id":"themes/sagiri/source/css/_mixins/base.styl","hash":"460b65f0f72fe8accbeb20eca773fc20bc4c2cfa","modified":1580002196000},{"_id":"themes/sagiri/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1580002196000},{"_id":"themes/sagiri/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1580002196000},{"_id":"themes/sagiri/source/css/_variables/Pisces.styl","hash":"07ec3b5dbe639762983cc88be5630aba2f08e186","modified":1580002196000},{"_id":"themes/sagiri/source/css/_variables/base.styl","hash":"ad21c4fbffee6930e775db8d74f39e9ef6bb2dc3","modified":1580002196000},{"_id":"themes/sagiri/source/images/header-darling2.jpg","hash":"e2ae6c5df17411838955d231e9a76321b2001c5c","modified":1580002196000},{"_id":"themes/sagiri/source/images/header-mai.jpg","hash":"b9890a3d76f62437462475a2c51c6b8442898379","modified":1580002196000},{"_id":"themes/sagiri/source/images/link/wenwen.jpg","hash":"d7183e8438f39cd0da8a61f7078743eedd3352dd","modified":1580014982695},{"_id":"themes/sagiri/source/lib/velocity-animate/velocity.ui.min.js","hash":"d8124c091d19fa4072616a44a8897fabc6599fce","modified":1580002196000},{"_id":"themes/sagiri/source/images/link/laina.jpg","hash":"4a1de6b9af8737b5a91366cffc9f9bcd876561a0","modified":1582976416121},{"_id":"themes/sagiri/source/images/live2d/22/22.model.json","hash":"d543e88cfa6d7bdf5edb57f022e35b3c8461cafa","modified":1580002196000},{"_id":"themes/sagiri/source/images/live2d/33/33.model.json","hash":"2dd3adc334c6e1684731e06fe6d943b800470fee","modified":1580002196000},{"_id":"themes/sagiri/source/lib/social-share.js/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1580002196000},{"_id":"themes/sagiri/source/lib/social-share.js/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1580002196000},{"_id":"themes/sagiri/source/lib/social-share.js/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1580002196000},{"_id":"themes/sagiri/source/lib/social-share.js/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1580002196000},{"_id":"themes/sagiri/source/lib/social-share.js/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1580002196000},{"_id":"themes/sagiri/source/lib/social-share.js/js/social-share.min.js","hash":"4798c0fe6c75506eebbbb3cab8cf01dcb7f59908","modified":1580002196000},{"_id":"themes/sagiri/source/lib/social-share.js/js/jquery.share.min.js","hash":"7d3a7135cee30a5ccc38e2818a5bf8c03f7028a0","modified":1580002196000},{"_id":"themes/sagiri/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1580002196000},{"_id":"themes/sagiri/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1580002196000},{"_id":"themes/sagiri/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_archive.styl","hash":"9878caf6ffb3b2278b19cf01edd8c65621c4fe01","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_brand.styl","hash":"ee1aa295059e315a4fc1e653b4cabeec44dc09c3","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_footer.styl","hash":"ed8737f85bb3b97c1abc0162523b04b5b8ed65b3","modified":1583482677928},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_layout.styl","hash":"9c61e0bfeceefb2b84f7455633ab190bd51c62db","modified":1582980109976},{"_id":"themes/sagiri/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_links.styl","hash":"fbadd7d35c1ae1fb328ae9e9e988e78cb5378783","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_menu.styl","hash":"0e786fafc75d38f9f441a49720bea4bc1a79bf68","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_posts.styl","hash":"e9add4b4ea33e1e2498d9901b52902b0fdbd0ba4","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/index.styl","hash":"f6612396af48c5035e858dda44f88c3c92321a16","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_darling.styl","hash":"d07cb2c95a38cc69451df2d53d506623a4f55d58","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_mai.styl","hash":"68696712685c803cee0629159cb8108f189142ad","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Pisces/_sidebar.styl","hash":"b5a95bea624c1da03a1ceda4e0448dacc75fe55d","modified":1582980752022},{"_id":"themes/sagiri/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/pagination.styl","hash":"2dbe80c75271cbe0913c13f3b1a6adbbca5fb503","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/scaffolding/base.styl","hash":"60d95578513d72ad00cdda75f3ef85d4b75fdc82","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1580002196000},{"_id":"themes/sagiri/source/images/header-darlings.jpg","hash":"20156313f1e9b02f28da3f5ca7b7ac607c6ea4f0","modified":1580002196000},{"_id":"themes/sagiri/source/lib/velocity-animate/velocity.js","hash":"44ae2520aa8ad47cf56b67bdba64e18d542c8618","modified":1580002196000},{"_id":"themes/sagiri/source/images/live2d/22/22.moc","hash":"63a7992de8c4658ee432822b5710565481610f0e","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1580002196000},{"_id":"themes/sagiri/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/header/site-meta.styl","hash":"e6f1b0389230df11fb8ece5a49b77a1f3f28f1c0","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/header/site-nav.styl","hash":"bf6a69b90c3530e6b528660c065a002225018333","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-collapse.styl","hash":"94d7c7f8670a029dd029638ed98035b54f769712","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-expand.styl","hash":"5d4d3222267e53168c209ac550b4837301516dcc","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-nav.styl","hash":"fa84a9673288c6b0e3bea4415f9092089ba171dc","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"131f871a9a8a043df2209aef153aa7d1b6ba99b6","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"3ea98e5f67435d9ebec4ddd78036a0428dac189e","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/group-pictures.styl","hash":"3f7e609546e342dc8307b8c054cdcfc39a52b0bb","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/balloon.styl","hash":"8224eee9b5fa3cb5549855c1bec369a7540e78b4","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/headroom.styl","hash":"fb2a58ddd46401718682297b72d6e584cf484676","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/third-party.styl","hash":"bf4b08934b490d8629811c02823f22b04ca9a15b","modified":1580002196000},{"_id":"themes/sagiri/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1580002196000},{"_id":"themes/sagiri/source/images/live2d/33/33.moc","hash":"80a030342ac1b6a7cd8acb441bcb207d8803b76b","modified":1580002196000},{"_id":"themes/sagiri/source/images/header-darling3.jpg","hash":"da8965efff676a86af6ed61451c3c13fe8a30bf3","modified":1580002196000},{"_id":"themes/sagiri/source/images/live2d/22/22.2048/texture_00.png","hash":"b002297b31421137a64fad594f7593133cea3cbf","modified":1580002196000},{"_id":"themes/sagiri/source/images/header-leg.jpg","hash":"426445281820258e0859b78e3b5e8279546dc3f5","modified":1580002196000},{"_id":"themes/sagiri/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1580002196000},{"_id":"themes/sagiri/source/images/header-darling4.jpg","hash":"e64b1131d266f98e81d68ca36dcf5324cb901e50","modified":1580002196000},{"_id":"themes/sagiri/source/images/live2d/33/33.2048/texture_00.png","hash":"6d710da6056de69bfe0c33ac1b9e837b327b2f7b","modified":1580002196000},{"_id":"themes/sagiri/source/images/card.png","hash":"e87e395dc55413e8e4d32cc91fc8f3d1d0856ef0","modified":1580224198485},{"_id":"themes/sagiri/source/images/card1.png","hash":"3bc6fb9ec7f09a6ca454fb1599ea6a9df42c42b9","modified":1580224199255},{"_id":"themes/sagiri/source/images/card2.png","hash":"65eecdd0b114058c12db9a8b1debfbfc6c86c1ec","modified":1580224199695},{"_id":"public/atom.xml","hash":"a5ea57b6e23520e2842aa60c1919d8badd4d8072","modified":1591022584951},{"_id":"public/content.json","hash":"99a2013198220c672ad00d7723d1c88272290f2a","modified":1591022584951},{"_id":"public/search.xml","hash":"4661c31ad7f8db6a73542f1c26f974f5febaf5c3","modified":1591022584951},{"_id":"public/sitemap.xml","hash":"c2d9d2ff10a015a4700b3ce6bfc47d811c9e8e55","modified":1591022584951},{"_id":"public/categories/index.html","hash":"de225334ef6ab87ed7e8b52002fc5cb456cc753a","modified":1591022584951},{"_id":"public/message/index.html","hash":"6c7edcf419892f2ca378858766629d243c4a3c4f","modified":1591022584951},{"_id":"public/donate/index.html","hash":"7c8a457d105e9218281058f0fd1ae0bdf1d9e560","modified":1591022584951},{"_id":"public/friends/index.html","hash":"4e98d79192a30c193154fdcb6904f6d524609b7e","modified":1591022584951},{"_id":"public/tags/index.html","hash":"b1b17bb62916d09c65e0ac667ab73e30be992cff","modified":1591022584951},{"_id":"public/medum/index.html","hash":"9f6762be8821ddc6b0fe5867875af3d718c37d7a","modified":1591022584951},{"_id":"public/typora/index.html","hash":"f9b98795bb1c07e030d7a4b3dd9a69475eececd8","modified":1591022584951},{"_id":"public/configOnedrive/index.html","hash":"ea577ffab67301a04eae307ab8dc431de2b4a8c6","modified":1591022584951},{"_id":"public/zshToFish/index.html","hash":"37ce9ef0ad097103e5d02a4c7c7359541db247b2","modified":1591022584951},{"_id":"public/newTerm/index.html","hash":"815a8ebc33d3a96f20e1363ec73e980e4d152c10","modified":1591022584951},{"_id":"public/uploadImage/index.html","hash":"3a87119dbf2c11c10b20744119f956eeb0275512","modified":1591022584951},{"_id":"public/yourRssBot/index.html","hash":"5fd58819aba35d9222e038ed37b5d1d43a54c51d","modified":1591022584951},{"_id":"public/questionTest/index.html","hash":"f1357bdb685b31ec803e3c3b5ef7aa446fb4af7c","modified":1591022584951},{"_id":"public/changeTheme/index.html","hash":"4a422a5a9797e7bb12c8e6569c177c5306c60c30","modified":1591022584951},{"_id":"public/wpsChangeLanguage/index.html","hash":"bc79f433f2dcfbb2dd8cd297512847e68b87655c","modified":1591022584951},{"_id":"public/stringCenter/index.html","hash":"ec9577b8a322e55f1c05750bc3485d87474f8742","modified":1591022584951},{"_id":"public/formSubmit/index.html","hash":"7932e4d1fd454686416c22c1790e2a1cdb58f4cc","modified":1591022584951},{"_id":"public/cleanUpFiles/index.html","hash":"12ce5f209d5ae0dfb95c7f1c02867f62878e38e1","modified":1591022584951},{"_id":"public/disableKeyboard/index.html","hash":"b3960fe47f641ea50bc2e545c9880425c0ed0c58","modified":1591022584951},{"_id":"public/archives/index.html","hash":"002c1e419e882bbd021b7f4dea4e4c40279e0560","modified":1591022584951},{"_id":"public/archives/page/2/index.html","hash":"c9208d4f3ce8fe3855bb06cedd100d4a995a1d43","modified":1591022584951},{"_id":"public/archives/2019/index.html","hash":"2a53108c0479c6b8c68b8b3ce3f05d289afcdbb5","modified":1591022584951},{"_id":"public/archives/2019/07/index.html","hash":"1229449440012607684c0a942de27a0a8eec2228","modified":1591022584951},{"_id":"public/archives/2019/08/index.html","hash":"c9f07a0f851bfb3c288a96423343056c38d033bf","modified":1591022584951},{"_id":"public/archives/2019/10/index.html","hash":"d533c1f2da5a453a71f82ed142979511938cec9e","modified":1591022584951},{"_id":"public/archives/2019/12/index.html","hash":"292bdeeb13d3a74d458c4574a9f60ef4c9f70941","modified":1591022584951},{"_id":"public/archives/2020/index.html","hash":"265a2651b9c47347f72c170fa2b519d6c14b4d65","modified":1591022584951},{"_id":"public/archives/2020/01/index.html","hash":"28332b6ff1cdd8f0d6bd96d81069bea91305de00","modified":1591022584951},{"_id":"public/archives/2020/02/index.html","hash":"010a578294d6c0126d37a6a37099342d0395a2de","modified":1591022584951},{"_id":"public/archives/2020/03/index.html","hash":"59fda82b33860fdd1b25342aefa4747ce44edabf","modified":1591022584951},{"_id":"public/archives/2020/04/index.html","hash":"d9c673ec09e90ae9ffd76d37f24beea9d9085101","modified":1591022584951},{"_id":"public/archives/2020/05/index.html","hash":"7a958ceb1dc642a5149f20003bc176a153cc7860","modified":1591022584951},{"_id":"public/categories/系统优化/index.html","hash":"13400fb33b927ddc02bb59a458d5d502fa293a4c","modified":1591022584951},{"_id":"public/categories/开发记录/index.html","hash":"628604a6823c4e897b256a26f3333564efa06755","modified":1591022584951},{"_id":"public/categories/便捷使用/index.html","hash":"d762659883f70358b4b6ab6b970c2a4b7d05dcf1","modified":1591022584951},{"_id":"public/categories/问题解决/index.html","hash":"e21c1caab7c4538327ccdc8201984fd29c672015","modified":1591022584951},{"_id":"public/categories/生活点滴/index.html","hash":"9a004a485246436c1cb6617d22dcdd37756724c3","modified":1591022584951},{"_id":"public/categories/网站建设/index.html","hash":"7cfdf74dd22e94e03c47c3e2f0e8dc2ac2c6dcae","modified":1591022584951},{"_id":"public/index.html","hash":"01ea348a8b74f5aa802955ec8ce6c5a8a59e466f","modified":1591022584951},{"_id":"public/page/2/index.html","hash":"449f058244dd6f194da2eb3c76127d1fc16f3b60","modified":1591022584951},{"_id":"public/tags/windows/index.html","hash":"ccf719cc51c7932f458bed775c4e7508f0ebeef6","modified":1591022584951},{"_id":"public/tags/linux/index.html","hash":"6fcc09431e29fa1f41dd034797ca09647946f168","modified":1591022584951},{"_id":"public/tags/manjaro/index.html","hash":"991850a30d6e9b0f898566678d0e2b2a6584b45a","modified":1591022584951},{"_id":"public/tags/website/index.html","hash":"20bec10c68c81de7c6e4c49f79b02b484ecacf6b","modified":1591022584951},{"_id":"public/tags/go/index.html","hash":"209b6235bd96e4f97d579135ffe0c4e0d0e5105d","modified":1591022584951},{"_id":"public/tags/Vue-js/index.html","hash":"f82389ca8a4990f36b789b50602ebcd7312bc95b","modified":1591022584951},{"_id":"public/tags/image/index.html","hash":"990ec079eff73d802a0f08fa3e9d70f946061d1e","modified":1591022584951},{"_id":"public/tags/python/index.html","hash":"360efb76f348504f53bbb6e561b0592712ba417e","modified":1591022584951},{"_id":"public/tags/study/index.html","hash":"64e610feb666e1c19cda33ff904e8813b7174d08","modified":1591022584951},{"_id":"public/tags/rss/index.html","hash":"f3c8ab669e5d9d269f526e5e7405e79bbd5b042d","modified":1591022584951},{"_id":"public/tags/onedrive/index.html","hash":"d4b81496f69e9965b37b61757b9f2209525281fa","modified":1591022584951},{"_id":"public/tags/php/index.html","hash":"4b49d31381259b3af6564a39f8ae3f33cb9299f8","modified":1591022584951},{"_id":"public/CNAME","hash":"53db07a77fd84c72ce5dd0ae75c21271ca248493","modified":1591022584951},{"_id":"public/fonts/sigmarone1.woff2","hash":"35d4f8be95cbf9ced2c3eae1bfe63d5ce8ee7214","modified":1591022584951},{"_id":"public/fonts/sigmarone3.woff2","hash":"5f62e2560d08e71274fac25c49825113a09776c7","modified":1591022584951},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1591022584951},{"_id":"public/images/alipay.png","hash":"af83cf08f0a99c3a3d1d9a6b91971a3ad5e3af20","modified":1591022584951},{"_id":"public/fonts/sigmarone2.woff2","hash":"feaa47ccbf19dfb2812fa8306f421b88e90af723","modified":1591022584951},{"_id":"public/images/cc-by-nc-nd.png","hash":"f7839bdd799c452a4e807a2365849acc0748b3fd","modified":1591022584951},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1591022584951},{"_id":"public/images/cc-by-nc-sa.png","hash":"cb36e36c3e3959a54ac289e309a4a89a016107bc","modified":1591022584951},{"_id":"public/images/cc-by-nd.png","hash":"6420f0e99cb3e90d3c37e0e8513d16ada14fed37","modified":1591022584951},{"_id":"public/images/cc-by-nc.png","hash":"eaf656bdd1ff61c345a7d42b94ac6f25435f5c42","modified":1591022584951},{"_id":"public/images/cc-by.png","hash":"63f01c43cb5d03cb83d3c867c5ecb768cd89d9df","modified":1591022584951},{"_id":"public/images/cc-zero.png","hash":"fd4ce5a5851ef47c3b525652cc3ae8128d405c8f","modified":1591022584951},{"_id":"public/images/cc-by-sa.png","hash":"d62ae0fd7204bf889b3f2cbe89eae5865a71c056","modified":1591022584951},{"_id":"public/images/cursor.ico","hash":"cd8349fb9cef6c217fc364cf35eae6819cebf5d6","modified":1591022584951},{"_id":"public/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1591022584951},{"_id":"public/images/favicon.ico","hash":"51cfa2cab8ae30b79cd7360dba747e705ad93bb4","modified":1591022584951},{"_id":"public/images/header-darling.jpg","hash":"428d430fd9086c207a4a18d6c55308a74441bfe5","modified":1591022584951},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1591022584951},{"_id":"public/images/footer.png","hash":"5f27807ccb8beeed9a909571783797901c52c3b7","modified":1591022584951},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1591022584951},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1591022584951},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1591022584951},{"_id":"public/images/scroll.png","hash":"443930af0ee54778babad7724291bfed9b431dd5","modified":1591022584951},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1591022584951},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1591022584951},{"_id":"public/images/wechatpay.png","hash":"72f1d0aebb20eef75f3ba2140ce37d8601baf10d","modified":1591022584951},{"_id":"public/images/link/qiyue.jpg","hash":"da568a2a4996db8c10040618a7c9eb3bba775dcd","modified":1591022584951},{"_id":"public/images/link/fluctlight.jpg","hash":"c814375f9543650428fcd8b6f998c7bd9ce6b9f4","modified":1591022584951},{"_id":"public/lib/social-share.js/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1591022584951},{"_id":"public/lib/social-share.js/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1591022584951},{"_id":"public/lib/social-share.js/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1591022584951},{"_id":"public/lib/social-share.js/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1591022584951},{"_id":"public/assets/css/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1591022584951},{"_id":"public/assets/js/Meting.min.js","hash":"a0585220b918d78649a7893279e1ec4fb5abe835","modified":1591022584951},{"_id":"public/assets/js/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1591022584951},{"_id":"public/images/avatar.jpeg","hash":"e055d5026e24477dba6da6e0fc9ce300213c73b1","modified":1591022584951},{"_id":"public/images/header.jpg","hash":"abe0402f182eb0580a284924cb0b738ab644a0d3","modified":1591022584951},{"_id":"public/images/link/wenwen.jpg","hash":"d7183e8438f39cd0da8a61f7078743eedd3352dd","modified":1591022584951},{"_id":"public/images/link/laina.jpg","hash":"4a1de6b9af8737b5a91366cffc9f9bcd876561a0","modified":1591022584951},{"_id":"public/js/cheat.js","hash":"c19e02d2e306994ab4117991466709c245c150a2","modified":1591022584951},{"_id":"public/js/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1591022584951},{"_id":"public/js/pisces.js","hash":"0ac6d88ffa9c63f9868e8d63f0d17ef5801e976e","modified":1591022584951},{"_id":"public/js/evan-you.js","hash":"81ab1c799306576b8781c919e11a99e99b8aa1d6","modified":1591022584951},{"_id":"public/js/pjax.js","hash":"8b63987741cb1d2a362ea8c1f1b704a08544eeab","modified":1591022584951},{"_id":"public/js/fireworks.js","hash":"53981959bc6def4a85bbbb41b07e4b1474a2124d","modified":1591022584951},{"_id":"public/js/top.js","hash":"0505e7ffe3d57e4c2d508e09ef332b8098aa83fb","modified":1591022584951},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1591022584951},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1591022584951},{"_id":"public/lib/velocity-animate/package.json","hash":"9bc53f857417d3e025f784f408a6472065c4d139","modified":1591022584951},{"_id":"public/images/live2d/22/22.model.json","hash":"c16b957438809a40df4c187ac285aaee0671e816","modified":1591022584951},{"_id":"public/images/live2d/33/33.model.json","hash":"1927910d9b88eff5d6ab1c6a604374efe8aed88e","modified":1591022584951},{"_id":"public/lib/social-share.js/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1591022584951},{"_id":"public/lib/velocity-animate/README.html","hash":"8201ee70f0a56b7493d48e5deceaf4edb9cc7d66","modified":1591022584951},{"_id":"public/lib/velocity-animate/LICENSE.html","hash":"516383f7a076681d4d3a0e8e67e09c76059a75b8","modified":1591022584951},{"_id":"public/css/main.css","hash":"d970b4fa8ceb8ccb021ae3bc4a3fe80203ce1aa0","modified":1591022584951},{"_id":"public/images/header-darling2.jpg","hash":"e2ae6c5df17411838955d231e9a76321b2001c5c","modified":1591022584951},{"_id":"public/images/live2d/22/22.moc","hash":"63a7992de8c4658ee432822b5710565481610f0e","modified":1591022584951},{"_id":"public/images/live2d/33/33.moc","hash":"80a030342ac1b6a7cd8acb441bcb207d8803b76b","modified":1591022584951},{"_id":"public/images/live2d/22/22.2048/texture_00.png","hash":"b002297b31421137a64fad594f7593133cea3cbf","modified":1591022584951},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1591022584951},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1591022584951},{"_id":"public/lib/sw-toolbox/sw-toolbox.js","hash":"7e2fd42a8ddb17450970c30a9bc5274f720e602c","modified":1591022584951},{"_id":"public/lib/velocity-animate/velocity.ui.min.js","hash":"d8124c091d19fa4072616a44a8897fabc6599fce","modified":1591022584951},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1591022584951},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1591022584951},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1591022584951},{"_id":"public/lib/velocity-animate/velocity.ui.js","hash":"7731c1bc444855b9b18bfb265cd1c4a169e6be37","modified":1591022584951},{"_id":"public/lib/social-share.js/js/social-share.min.js","hash":"4798c0fe6c75506eebbbb3cab8cf01dcb7f59908","modified":1591022584951},{"_id":"public/lib/social-share.js/js/jquery.share.min.js","hash":"7d3a7135cee30a5ccc38e2818a5bf8c03f7028a0","modified":1591022584951},{"_id":"public/images/header-mai.jpg","hash":"b9890a3d76f62437462475a2c51c6b8442898379","modified":1591022584951},{"_id":"public/images/header-darlings.jpg","hash":"20156313f1e9b02f28da3f5ca7b7ac607c6ea4f0","modified":1591022584951},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1591022584951},{"_id":"public/lib/velocity-animate/velocity.min.js","hash":"69c85b9d6a931a7d3a5b0657e60112c31fb3b286","modified":1591022584951},{"_id":"public/images/live2d/33/33.2048/texture_00.png","hash":"6d710da6056de69bfe0c33ac1b9e837b327b2f7b","modified":1591022584951},{"_id":"public/images/header-leg.jpg","hash":"426445281820258e0859b78e3b5e8279546dc3f5","modified":1591022584951},{"_id":"public/images/header-darling3.jpg","hash":"da8965efff676a86af6ed61451c3c13fe8a30bf3","modified":1591022584951},{"_id":"public/images/header-darling4.jpg","hash":"e64b1131d266f98e81d68ca36dcf5324cb901e50","modified":1591022584951},{"_id":"public/images/card.png","hash":"e87e395dc55413e8e4d32cc91fc8f3d1d0856ef0","modified":1591022584951},{"_id":"public/lib/velocity-animate/velocity.js","hash":"44ae2520aa8ad47cf56b67bdba64e18d542c8618","modified":1591022584951},{"_id":"public/images/card1.png","hash":"3bc6fb9ec7f09a6ca454fb1599ea6a9df42c42b9","modified":1591022584951},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1591022584951},{"_id":"public/images/card2.png","hash":"65eecdd0b114058c12db9a8b1debfbfc6c86c1ec","modified":1591022584951}],"Category":[{"name":"系统优化","_id":"ckawlrozr0004hpz6chsl5jef"},{"name":"开发记录","_id":"ckawlrp0k000ghpz614l6arsh"},{"name":"便捷使用","_id":"ckawlrp0v000ohpz6bkhe23m9"},{"name":"问题解决","_id":"ckawlrp11000thpz654tg19nf"},{"name":"生活点滴","_id":"ckawlrp180012hpz6e4d9ckc8"},{"name":"网站建设","_id":"ckawlrp6q001zhpz6b5pw6tnb"}],"Data":[],"Page":[{"title":"categories","date":"2019-07-03T03:49:06.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-07-03 11:49:06\ntype: \"categories\"\ncomments: false\n---","updated":"2019-07-03T03:52:00.000Z","path":"categories/index.html","layout":"page","_id":"ckawlrozf0001hpz6cb1ldd14","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"留言板","date":"2019-07-03T03:49:06.000Z","type":"","comments":1,"_content":"\n> 这是一个莫得感情的充数留言板（并不觉得有人会给我留言啊喂！ (๑•̀ㅂ•́)و✧\n\n**大家有什么话想对我说可以在此留言哦，我如果看到一定会回复的！**","source":"message/index.md","raw":"---\ntitle: 留言板\ndate: 2019-07-03 11:49:06\ntype: \"\"\ncomments: true\n---\n\n> 这是一个莫得感情的充数留言板（并不觉得有人会给我留言啊喂！ (๑•̀ㅂ•́)و✧\n\n**大家有什么话想对我说可以在此留言哦，我如果看到一定会回复的！**","updated":"2020-01-26T15:26:47.088Z","path":"message/index.html","layout":"page","_id":"ckawlrozm0003hpz68gzm3nt0","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><blockquote>\n<p>这是一个莫得感情的充数留言板（并不觉得有人会给我留言啊喂！ (๑•̀ㅂ•́)و✧</p>\n</blockquote>\n<p><strong>大家有什么话想对我说可以在此留言哦，我如果看到一定会回复的！</strong></p>\n","site":{"data":{}},"length":69,"excerpt":"","more":"<blockquote>\n<p>这是一个莫得感情的充数留言板（并不觉得有人会给我留言啊喂！ (๑•̀ㅂ•́)و✧</p>\n</blockquote>\n<p><strong>大家有什么话想对我说可以在此留言哦，我如果看到一定会回复的！</strong></p>\n"},{"title":"投喂通道","date":"2019-07-03T03:49:06.000Z","type":"","comments":1,"_content":"\n> 预感到这又是一个没有人会看的界面  XD\n\n想要投喂的看官们，可以在任意一篇文章下点击`赞赏`按钮，就可以看到`alipay/wechatpay`的收款码啦！\n\n","source":"donate/index.md","raw":"---\ntitle: 投喂通道\ndate: 2019-07-03 11:49:06\ntype: \"\"\ncomments: true\n---\n\n> 预感到这又是一个没有人会看的界面  XD\n\n想要投喂的看官们，可以在任意一篇文章下点击`赞赏`按钮，就可以看到`alipay/wechatpay`的收款码啦！\n\n","updated":"2020-01-26T15:25:55.347Z","path":"donate/index.html","layout":"page","_id":"ckawlrozz0007hpz6ct39gdux","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><blockquote>\n<p>预感到这又是一个没有人会看的界面  XD</p>\n</blockquote>\n<p>想要投喂的看官们，可以在任意一篇文章下点击<code>赞赏</code>按钮，就可以看到<code>alipay/wechatpay</code>的收款码啦！</p>\n","site":{"data":{}},"length":71,"excerpt":"","more":"<blockquote>\n<p>预感到这又是一个没有人会看的界面  XD</p>\n</blockquote>\n<p>想要投喂的看官们，可以在任意一篇文章下点击<code>赞赏</code>按钮，就可以看到<code>alipay/wechatpay</code>的收款码啦！</p>\n"},{"title":"友情链接","date":"2019-07-03T03:49:06.000Z","type":"links","comments":1,"_content":"","source":"friends/index.md","raw":"---\ntitle: 友情链接\ndate: 2019-07-03 11:49:06\ntype: \"links\"\ncomments: true\n---","updated":"2020-05-23T16:59:14.173Z","path":"friends/index.html","layout":"page","_id":"ckawlrp040009hpz66hjc4fsu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"tags","date":"2019-07-03T03:49:23.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-07-03 11:49:23\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-07-03T03:52:41.000Z","path":"tags/index.html","layout":"page","_id":"ckawlrp09000dhpz6ek1e22js","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"禁用笔记本自带键盘的方法","date":"2019-07-03T04:13:55.000Z","_content":"\n## Windows\n\n### 禁用\n\n**用管理员权限运行cmd，在其中输入：**   \n\n```cmd\nsc config i8042prt start= disabled\n```\n\n**之后重启即可。**\n\n<!--more-->\n\n### 恢复\n\n**与禁用的步骤相同，把输入的命令改为：**\n\n```cmd\nsc config i8042prt start= demand\n```\n\n## Linux\n\n***注意：manjaro需要使用***\n\n```sh\nsudo pacman -S xorg-xinput\n```\n***进行安装以使用xinput命令。***\n\n**打开终端，输入`xinput --list `获取设备列表：**\n\n```sh\n❯ xinput --list \n⎡ Virtual core pointer                    \tid=2\t[master pointer  (3)]\n⎜   ↳ Virtual core XTEST pointer              \tid=4\t[slave  pointer  (2)]\n⎜   ↳ USB Optical Mouse Mouse                 \tid=14\t[slave  pointer  (2)]\n⎜   ↳ Synaptics TM3253-001                    \tid=11\t[slave  pointer  (2)]\n⎣ Virtual core keyboard                   \tid=3\t[master keyboard (2)]\n    ↳ Virtual core XTEST keyboard             \tid=5\t[slave  keyboard (3)]\n    ↳ Power Button                            \tid=6\t[slave  keyboard (3)]\n    ↳ Video Bus                               \tid=7\t[slave  keyboard (3)]\n    ↳ Power Button                            \tid=8\t[slave  keyboard (3)]\n    ↳ Sleep Button                            \tid=9\t[slave  keyboard (3)]\n    ↳ Integrated_Webcam_HD: Integrate         \tid=10\t[slave  keyboard (3)]\n    ↳ Dell WMI hotkeys                        \tid=12\t[slave  keyboard (3)]\n    ↳ AT Translated Set 2 keyboard            \tid=13\t[slave  keyboard (3)]\n    ↳ DELL Wireless hotkeys                   \tid=15\t[slave  keyboard (3)]\n    ↳ USB Keyboard Consumer Control           \tid=16\t[slave  keyboard (3)]\n    ↳ USB Keyboard System Control             \tid=17\t[slave  keyboard (3)]\n    ↳ USB Keyboard                            \tid=18\t[slave  keyboard (3)]\n```\n\n**找到`AT Translated Set 2 keyboard`对应的id（本机为13）。**\n\n### 禁用\n\n**在终端中输入**\n\n```bash\nxinput set-prop 13 \"Device Enabled\" 0 \n```\n\n### 恢复\n\n**在终端中输入**\n\n```bash\nxinput set-prop 13 \"Device Enabled\" 1\n```","source":"_posts/disableKeyboard.md","raw":"---\ntitle: 禁用笔记本自带键盘的方法\ndate: 2019-07-03 12:13:55\ntags: [windows,linux]\ncategories: 系统优化\n---\n\n## Windows\n\n### 禁用\n\n**用管理员权限运行cmd，在其中输入：**   \n\n```cmd\nsc config i8042prt start= disabled\n```\n\n**之后重启即可。**\n\n<!--more-->\n\n### 恢复\n\n**与禁用的步骤相同，把输入的命令改为：**\n\n```cmd\nsc config i8042prt start= demand\n```\n\n## Linux\n\n***注意：manjaro需要使用***\n\n```sh\nsudo pacman -S xorg-xinput\n```\n***进行安装以使用xinput命令。***\n\n**打开终端，输入`xinput --list `获取设备列表：**\n\n```sh\n❯ xinput --list \n⎡ Virtual core pointer                    \tid=2\t[master pointer  (3)]\n⎜   ↳ Virtual core XTEST pointer              \tid=4\t[slave  pointer  (2)]\n⎜   ↳ USB Optical Mouse Mouse                 \tid=14\t[slave  pointer  (2)]\n⎜   ↳ Synaptics TM3253-001                    \tid=11\t[slave  pointer  (2)]\n⎣ Virtual core keyboard                   \tid=3\t[master keyboard (2)]\n    ↳ Virtual core XTEST keyboard             \tid=5\t[slave  keyboard (3)]\n    ↳ Power Button                            \tid=6\t[slave  keyboard (3)]\n    ↳ Video Bus                               \tid=7\t[slave  keyboard (3)]\n    ↳ Power Button                            \tid=8\t[slave  keyboard (3)]\n    ↳ Sleep Button                            \tid=9\t[slave  keyboard (3)]\n    ↳ Integrated_Webcam_HD: Integrate         \tid=10\t[slave  keyboard (3)]\n    ↳ Dell WMI hotkeys                        \tid=12\t[slave  keyboard (3)]\n    ↳ AT Translated Set 2 keyboard            \tid=13\t[slave  keyboard (3)]\n    ↳ DELL Wireless hotkeys                   \tid=15\t[slave  keyboard (3)]\n    ↳ USB Keyboard Consumer Control           \tid=16\t[slave  keyboard (3)]\n    ↳ USB Keyboard System Control             \tid=17\t[slave  keyboard (3)]\n    ↳ USB Keyboard                            \tid=18\t[slave  keyboard (3)]\n```\n\n**找到`AT Translated Set 2 keyboard`对应的id（本机为13）。**\n\n### 禁用\n\n**在终端中输入**\n\n```bash\nxinput set-prop 13 \"Device Enabled\" 0 \n```\n\n### 恢复\n\n**在终端中输入**\n\n```bash\nxinput set-prop 13 \"Device Enabled\" 1\n```","slug":"disableKeyboard","published":1,"updated":"2020-01-26T15:41:32.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlroyu0000hpz6dd9f1gk3","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><h3 id=\"禁用\"><a href=\"#禁用\" class=\"headerlink\" title=\"禁用\"></a>禁用</h3><p><strong>用管理员权限运行cmd，在其中输入：</strong>   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sc config i8042prt <span class=\"built_in\">start</span>= disabled</span><br></pre></td></tr></table></figure>\n\n<p><strong>之后重启即可。</strong></p>\n<a id=\"more\"></a>\n\n<h3 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><p><strong>与禁用的步骤相同，把输入的命令改为：</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sc config i8042prt <span class=\"built_in\">start</span>= demand</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><p><strong><em>注意：manjaro需要使用</em></strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -S xorg-xinput</span><br></pre></td></tr></table></figure>\n<p><strong><em>进行安装以使用xinput命令。</em></strong></p>\n<p><strong>打开终端，输入<code>xinput --list</code>获取设备列表：</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ xinput --list </span><br><span class=\"line\">⎡ Virtual core pointer                    \tid=2\t[master pointer  (3)]</span><br><span class=\"line\">⎜   ↳ Virtual core XTEST pointer              \tid=4\t[slave  pointer  (2)]</span><br><span class=\"line\">⎜   ↳ USB Optical Mouse Mouse                 \tid=14\t[slave  pointer  (2)]</span><br><span class=\"line\">⎜   ↳ Synaptics TM3253-001                    \tid=11\t[slave  pointer  (2)]</span><br><span class=\"line\">⎣ Virtual core keyboard                   \tid=3\t[master keyboard (2)]</span><br><span class=\"line\">    ↳ Virtual core XTEST keyboard             \tid=5\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Power Button                            \tid=6\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Video Bus                               \tid=7\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Power Button                            \tid=8\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Sleep Button                            \tid=9\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Integrated_Webcam_HD: Integrate         \tid=10\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Dell WMI hotkeys                        \tid=12\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ AT Translated Set 2 keyboard            \tid=13\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ DELL Wireless hotkeys                   \tid=15\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ USB Keyboard Consumer Control           \tid=16\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ USB Keyboard System Control             \tid=17\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ USB Keyboard                            \tid=18\t[slave  keyboard (3)]</span><br></pre></td></tr></table></figure>\n\n<p><strong>找到<code>AT Translated Set 2 keyboard</code>对应的id（本机为13）。</strong></p>\n<h3 id=\"禁用-1\"><a href=\"#禁用-1\" class=\"headerlink\" title=\"禁用\"></a>禁用</h3><p><strong>在终端中输入</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xinput <span class=\"built_in\">set</span>-prop 13 <span class=\"string\">\"Device Enabled\"</span> 0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"恢复-1\"><a href=\"#恢复-1\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><p><strong>在终端中输入</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xinput <span class=\"built_in\">set</span>-prop 13 <span class=\"string\">\"Device Enabled\"</span> 1</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":1073,"excerpt":"<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><h3 id=\"禁用\"><a href=\"#禁用\" class=\"headerlink\" title=\"禁用\"></a>禁用</h3><p><strong>用管理员权限运行cmd，在其中输入：</strong>   </p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sc config i8042prt <span class=\"built_in\">start</span>= disabled</span><br></pre></td></tr></table></figure>\n\n<p><strong>之后重启即可。</strong></p>","more":"<h3 id=\"恢复\"><a href=\"#恢复\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><p><strong>与禁用的步骤相同，把输入的命令改为：</strong></p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sc config i8042prt <span class=\"built_in\">start</span>= demand</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><p><strong><em>注意：manjaro需要使用</em></strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -S xorg-xinput</span><br></pre></td></tr></table></figure>\n<p><strong><em>进行安装以使用xinput命令。</em></strong></p>\n<p><strong>打开终端，输入<code>xinput --list</code>获取设备列表：</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ xinput --list </span><br><span class=\"line\">⎡ Virtual core pointer                    \tid=2\t[master pointer  (3)]</span><br><span class=\"line\">⎜   ↳ Virtual core XTEST pointer              \tid=4\t[slave  pointer  (2)]</span><br><span class=\"line\">⎜   ↳ USB Optical Mouse Mouse                 \tid=14\t[slave  pointer  (2)]</span><br><span class=\"line\">⎜   ↳ Synaptics TM3253-001                    \tid=11\t[slave  pointer  (2)]</span><br><span class=\"line\">⎣ Virtual core keyboard                   \tid=3\t[master keyboard (2)]</span><br><span class=\"line\">    ↳ Virtual core XTEST keyboard             \tid=5\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Power Button                            \tid=6\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Video Bus                               \tid=7\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Power Button                            \tid=8\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Sleep Button                            \tid=9\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Integrated_Webcam_HD: Integrate         \tid=10\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ Dell WMI hotkeys                        \tid=12\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ AT Translated Set 2 keyboard            \tid=13\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ DELL Wireless hotkeys                   \tid=15\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ USB Keyboard Consumer Control           \tid=16\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ USB Keyboard System Control             \tid=17\t[slave  keyboard (3)]</span><br><span class=\"line\">    ↳ USB Keyboard                            \tid=18\t[slave  keyboard (3)]</span><br></pre></td></tr></table></figure>\n\n<p><strong>找到<code>AT Translated Set 2 keyboard</code>对应的id（本机为13）。</strong></p>\n<h3 id=\"禁用-1\"><a href=\"#禁用-1\" class=\"headerlink\" title=\"禁用\"></a>禁用</h3><p><strong>在终端中输入</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xinput <span class=\"built_in\">set</span>-prop 13 <span class=\"string\">\"Device Enabled\"</span> 0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"恢复-1\"><a href=\"#恢复-1\" class=\"headerlink\" title=\"恢复\"></a>恢复</h3><p><strong>在终端中输入</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xinput <span class=\"built_in\">set</span>-prop 13 <span class=\"string\">\"Device Enabled\"</span> 1</span><br></pre></td></tr></table></figure>"},{"title":"manjaro常用的垃圾清理命令","date":"2019-08-12T07:17:25.000Z","_content":"\n+ 清除系统中无用的包\n\n  ```\n  sudo pacman -R $(pacman -Qdtq)\n  ```\n\n+ 清除已下载的安装包\n\n  <!--more-->\n\n  ```\n  sudo pacman -Scc\n  ```\n\n+ 日志垃圾\n\n  + 查看日志文件\n\n    ```\n    du -t 100M /var\n    or\n    journalctl --disk-usage\n    ```\n\n  + 删除指定大小日志文件\n\n    ```\n    sudo journalctl --vacuum-size=50M\n    ```\n\n    ","source":"_posts/cleanUpFiles.md","raw":"---\ntitle: manjaro常用的垃圾清理命令\ndate: 2019-08-12 15:17:25\ntags: [linux,manjaro]\ncategories: 系统优化\n---\n\n+ 清除系统中无用的包\n\n  ```\n  sudo pacman -R $(pacman -Qdtq)\n  ```\n\n+ 清除已下载的安装包\n\n  <!--more-->\n\n  ```\n  sudo pacman -Scc\n  ```\n\n+ 日志垃圾\n\n  + 查看日志文件\n\n    ```\n    du -t 100M /var\n    or\n    journalctl --disk-usage\n    ```\n\n  + 删除指定大小日志文件\n\n    ```\n    sudo journalctl --vacuum-size=50M\n    ```\n\n    ","slug":"cleanUpFiles","published":1,"updated":"2020-01-26T15:43:33.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrozi0002hpz61vwt6a2b","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><ul>\n<li><p>清除系统中无用的包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -R $(pacman -Qdtq)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清除已下载的安装包</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -Scc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>日志垃圾</p>\n<ul>\n<li><p>查看日志文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -t 100M &#x2F;var</span><br><span class=\"line\">or</span><br><span class=\"line\">journalctl --disk-usage</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除指定大小日志文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo journalctl --vacuum-size&#x3D;50M</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":161,"excerpt":"<ul>\n<li><p>清除系统中无用的包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -R $(pacman -Qdtq)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>清除已下载的安装包</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -Scc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>日志垃圾</p>\n<ul>\n<li><p>查看日志文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -t 100M &#x2F;var</span><br><span class=\"line\">or</span><br><span class=\"line\">journalctl --disk-usage</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除指定大小日志文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo journalctl --vacuum-size&#x3D;50M</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ul>"},{"title":"马原毛概刷题工具(WEB VERSION)","date":"2020-01-30T01:44:08.000Z","_content":"\n考试之前临时赶工做了个马原刷题工具，考试后有了时间顺便把它拓展成了[马原毛概刷题工具](https://github.com/jeasonlau/Question-test)，添加了随机刷题，考试模拟，错题本等功能，但平心而论，`python`的命令行程序还是不太易于使用，于是考虑将其改为网页版本，目前[该项目](https://github.com/jeasonlau/Question-test-web)已经开源在了github（在此前并没有接触过前端，所以可能会有很多不足之处）。\n\n<!--more-->\n\n## 后端\n\n后端使用`go`的轻量web框架`gin`，[代码在这儿](https://github.com/jeasonlau/Question-test-web/blob/master/back-end/main.go)！\n\n其通过读取当前目录的`mayuan.json/maogai.json`，根据不同的路由返回不同的结果：\n\n|         访问地址          |           返回结果            |\n| :-----------------------: | :---------------------------: |\n|  /:subject/position/:num  | 返回该subject位置为num的题目  |\n|     /:subject/random/     |   返回该subject随机一道题目   |\n|  /:subject/random/radio   | 返回该subject随机一道单选题目 |\n| /:subject/random/checkbox | 返回该subject随机一道多选题目 |\n\n## 前端\n\n前端使用`vue.js`，准备学习的时候，在官方文档中发现了这句话：\n\n> 官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。\n\n而我对前端知识一无所知，于是先去`freecodecamp`学习了`HTML`基础和前几节`CSS`（因为`CSS`内容实在是太多了！），然后去`廖雪峰教程`把`JavaScript`学到了函数部分，之后一边参考官方文档学习一边上手开发。\n\n------\n\n首先使用`webpack`脚手架创建`vue`项目，接着安装并引入`muse-ui`组件库。\n\n1. 路由\n\n   ```javascript\n   import Vue from 'vue'\n   import Router from 'vue-router'\n   import index from '../components/index'\n   import temp from '../components/temp'\n   import exam from '../components/exam'\n   import order from '../components/order'\n   import about from '../components/about'\n   \n   Vue.use(Router)\n   \n   export default new Router({\n     routes: [\n       {\n         path: '/',\n         name: 'index',\n         component: index\n       },\n       {\n         path: '/马原',\n         name: 'mayuan',\n         component: temp\n       },\n       {\n         path: '/毛概',\n         name: 'maogai',\n         component: temp\n       },\n       {\n         path: '/马原/顺序刷题',\n         name: 'mayuanorder',\n         component: order\n       },\n       {\n         path: '/毛概/顺序刷题',\n         name: 'maogaiorder',\n         component: order\n       },\n       {\n         path: '/马原/考试模拟',\n         name: 'mayuanexam',\n         component: exam\n       },\n       {\n         path: '/毛概/考试模拟',\n         name: 'maogaiexam',\n         component: exam\n       },\n       {\n         path: '/关于',\n         name: 'about',\n         component: about\n       }\n     ]\n   })\n   ```\n\n2. 组件\n\n   + `App.vue`中写入通用的顶栏，侧边栏等内容，监听路由变化修改标题。\n\n   + `index.vue`和`about.vue`使用纯`HTML/CSS`写成。\n\n   + `temp.vue`用于选择刷题方式。\n\n   + `order.vue`为顺序刷题界面，使用`mu-pagination`进行翻页，`exam.vue`为考试模拟界面，使用`mu-load-more`实现题目部分加载。\n\n   + `question.vue`为单位题目，是`order.vue`和`exam.vue`的子组件，监听`props`中`num`的变化，调用`getQuestion()`加载相应题目并判断是单选还是多选。在选择选项时使用`ifRight()`判断答案是否正确。\n\n     ```javascript\n     // ifRight\n     ifRight: function () {\n             let answer\n             if (this.isRadio === false) {// 多选将答案array排序并链接为字符串\n               answer = this.yourAnswer.sort().join(\"\")\n             } else {// 单选直接获取\n               answer = this.yourAnswer\n             }\n             if (answer === this.question[\"Answer\"]) {\n               this.isRight = true\n               let that = this\n               if (this.timer)\n                 clearTimeout(this.timer)\n               this.timer = setTimeout(function () {// 显示2s的通知\n                 that.isRight = false\n               }, 2000)\n             } else {\n               this.isRight = false\n             }\n           }\n     // getQuestion\n     getQuestion () {\n         this.yourAnswer=[]\n         //根据父组件的path和当前num获取要请求的地址\n         if (this.type === \"/马原/顺序刷题\") {\n             this.url = \"https://.../api/mayuan/position/\" + (this.num - 1)\n         } else if (this.type === \"/毛概/顺序刷题\") {\n             this.url = \"https://.../api/maogai/position/\" + (this.num - 1)\n         } else if (this.type === \"/马原/考试模拟\") {\n             if (this.num <= 40) {\n                 this.url = \"https://.../api/mayuan/random/radio\"\n             } else {\n                 this.url= \"https://.../api/mayuan/random/checkbox\"\n             }\n         } else if (this.type === \"/毛概/考试模拟\") {\n             if (this.num <= 40) {\n                 this.url = \"https://.../api/maogai/random/radio\"\n             } else {\n                 this.url = \"https://.../api/maogai/random/checkbox\"\n             }\n         }\n         axios// 使用axios请求api获取题目\n             .get(this.url)\n             .then(response => {\n             this.question = response.data\n             if (this.question['Answer'].length > 1) {// 判断是单选还是多选\n                 this.isRadio = false\n             } else {\n                 this.isRadio = true\n             }\n         })\n     }\n     ```\n\n## 部署\n\n在部署的时候遇到了不少问题。\n\n开始在本地调试时发现无法加载出题目。查看`chrome console`中的错误信息，查询后发现是因为后端没有配置跨域，于是在后端路由中加上了：\n\n```go\nc.Writer.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n```\n\n调试正常，但部署到`github pages`后发现仍然无法加载，查看错误信息，得知在`https`网页中不能加载`http`资源，于是任务变成了给`gin`加上`https`。\n\n查阅发现一般方法是申请子域名和免费证书，但我懒得整那么多了，正好手头有个`https`域名，直接给`nginx`的当前`server`块配个反向代理：\n\n```nginx\nlocation /api{\n        proxy_pass http://localhost:8080;\n}\n```\n\n然后在`github pages`中请求这个地址，但是不知道是不是因为中间隔了个`nginx`，又出现了跨域问题，一时没有查到解决方法，所以不得已把前端也部署在了`nginx`上，问题解决（唯一问题是我的服务器没有备案，所以只能手动输入端口访问）。\n\n## 参考\n\n+ [Vue.js官方文档](https://cn.vuejs.org/v2/guide/)\n+ [Muse-UI官方文档](https://muse-ui.org/#/zh-CN/installation)\n+ [Gin.README.md](https://github.com/gin-gonic/gin/blob/master/README.md)\n+ [扶朕起来朕还能学](https://neumathe.xyz/)\n\n","source":"_posts/questionTest.md","raw":"---\ntitle: 马原毛概刷题工具(WEB VERSION)\ndate: 2020-01-30 09:44:08\ntags: [website,go,Vue.js]\ncategories: 开发记录\n---\n\n考试之前临时赶工做了个马原刷题工具，考试后有了时间顺便把它拓展成了[马原毛概刷题工具](https://github.com/jeasonlau/Question-test)，添加了随机刷题，考试模拟，错题本等功能，但平心而论，`python`的命令行程序还是不太易于使用，于是考虑将其改为网页版本，目前[该项目](https://github.com/jeasonlau/Question-test-web)已经开源在了github（在此前并没有接触过前端，所以可能会有很多不足之处）。\n\n<!--more-->\n\n## 后端\n\n后端使用`go`的轻量web框架`gin`，[代码在这儿](https://github.com/jeasonlau/Question-test-web/blob/master/back-end/main.go)！\n\n其通过读取当前目录的`mayuan.json/maogai.json`，根据不同的路由返回不同的结果：\n\n|         访问地址          |           返回结果            |\n| :-----------------------: | :---------------------------: |\n|  /:subject/position/:num  | 返回该subject位置为num的题目  |\n|     /:subject/random/     |   返回该subject随机一道题目   |\n|  /:subject/random/radio   | 返回该subject随机一道单选题目 |\n| /:subject/random/checkbox | 返回该subject随机一道多选题目 |\n\n## 前端\n\n前端使用`vue.js`，准备学习的时候，在官方文档中发现了这句话：\n\n> 官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。\n\n而我对前端知识一无所知，于是先去`freecodecamp`学习了`HTML`基础和前几节`CSS`（因为`CSS`内容实在是太多了！），然后去`廖雪峰教程`把`JavaScript`学到了函数部分，之后一边参考官方文档学习一边上手开发。\n\n------\n\n首先使用`webpack`脚手架创建`vue`项目，接着安装并引入`muse-ui`组件库。\n\n1. 路由\n\n   ```javascript\n   import Vue from 'vue'\n   import Router from 'vue-router'\n   import index from '../components/index'\n   import temp from '../components/temp'\n   import exam from '../components/exam'\n   import order from '../components/order'\n   import about from '../components/about'\n   \n   Vue.use(Router)\n   \n   export default new Router({\n     routes: [\n       {\n         path: '/',\n         name: 'index',\n         component: index\n       },\n       {\n         path: '/马原',\n         name: 'mayuan',\n         component: temp\n       },\n       {\n         path: '/毛概',\n         name: 'maogai',\n         component: temp\n       },\n       {\n         path: '/马原/顺序刷题',\n         name: 'mayuanorder',\n         component: order\n       },\n       {\n         path: '/毛概/顺序刷题',\n         name: 'maogaiorder',\n         component: order\n       },\n       {\n         path: '/马原/考试模拟',\n         name: 'mayuanexam',\n         component: exam\n       },\n       {\n         path: '/毛概/考试模拟',\n         name: 'maogaiexam',\n         component: exam\n       },\n       {\n         path: '/关于',\n         name: 'about',\n         component: about\n       }\n     ]\n   })\n   ```\n\n2. 组件\n\n   + `App.vue`中写入通用的顶栏，侧边栏等内容，监听路由变化修改标题。\n\n   + `index.vue`和`about.vue`使用纯`HTML/CSS`写成。\n\n   + `temp.vue`用于选择刷题方式。\n\n   + `order.vue`为顺序刷题界面，使用`mu-pagination`进行翻页，`exam.vue`为考试模拟界面，使用`mu-load-more`实现题目部分加载。\n\n   + `question.vue`为单位题目，是`order.vue`和`exam.vue`的子组件，监听`props`中`num`的变化，调用`getQuestion()`加载相应题目并判断是单选还是多选。在选择选项时使用`ifRight()`判断答案是否正确。\n\n     ```javascript\n     // ifRight\n     ifRight: function () {\n             let answer\n             if (this.isRadio === false) {// 多选将答案array排序并链接为字符串\n               answer = this.yourAnswer.sort().join(\"\")\n             } else {// 单选直接获取\n               answer = this.yourAnswer\n             }\n             if (answer === this.question[\"Answer\"]) {\n               this.isRight = true\n               let that = this\n               if (this.timer)\n                 clearTimeout(this.timer)\n               this.timer = setTimeout(function () {// 显示2s的通知\n                 that.isRight = false\n               }, 2000)\n             } else {\n               this.isRight = false\n             }\n           }\n     // getQuestion\n     getQuestion () {\n         this.yourAnswer=[]\n         //根据父组件的path和当前num获取要请求的地址\n         if (this.type === \"/马原/顺序刷题\") {\n             this.url = \"https://.../api/mayuan/position/\" + (this.num - 1)\n         } else if (this.type === \"/毛概/顺序刷题\") {\n             this.url = \"https://.../api/maogai/position/\" + (this.num - 1)\n         } else if (this.type === \"/马原/考试模拟\") {\n             if (this.num <= 40) {\n                 this.url = \"https://.../api/mayuan/random/radio\"\n             } else {\n                 this.url= \"https://.../api/mayuan/random/checkbox\"\n             }\n         } else if (this.type === \"/毛概/考试模拟\") {\n             if (this.num <= 40) {\n                 this.url = \"https://.../api/maogai/random/radio\"\n             } else {\n                 this.url = \"https://.../api/maogai/random/checkbox\"\n             }\n         }\n         axios// 使用axios请求api获取题目\n             .get(this.url)\n             .then(response => {\n             this.question = response.data\n             if (this.question['Answer'].length > 1) {// 判断是单选还是多选\n                 this.isRadio = false\n             } else {\n                 this.isRadio = true\n             }\n         })\n     }\n     ```\n\n## 部署\n\n在部署的时候遇到了不少问题。\n\n开始在本地调试时发现无法加载出题目。查看`chrome console`中的错误信息，查询后发现是因为后端没有配置跨域，于是在后端路由中加上了：\n\n```go\nc.Writer.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n```\n\n调试正常，但部署到`github pages`后发现仍然无法加载，查看错误信息，得知在`https`网页中不能加载`http`资源，于是任务变成了给`gin`加上`https`。\n\n查阅发现一般方法是申请子域名和免费证书，但我懒得整那么多了，正好手头有个`https`域名，直接给`nginx`的当前`server`块配个反向代理：\n\n```nginx\nlocation /api{\n        proxy_pass http://localhost:8080;\n}\n```\n\n然后在`github pages`中请求这个地址，但是不知道是不是因为中间隔了个`nginx`，又出现了跨域问题，一时没有查到解决方法，所以不得已把前端也部署在了`nginx`上，问题解决（唯一问题是我的服务器没有备案，所以只能手动输入端口访问）。\n\n## 参考\n\n+ [Vue.js官方文档](https://cn.vuejs.org/v2/guide/)\n+ [Muse-UI官方文档](https://muse-ui.org/#/zh-CN/installation)\n+ [Gin.README.md](https://github.com/gin-gonic/gin/blob/master/README.md)\n+ [扶朕起来朕还能学](https://neumathe.xyz/)\n\n","slug":"questionTest","published":1,"updated":"2020-02-04T13:44:28.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrozx0006hpz6esy322wq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>考试之前临时赶工做了个马原刷题工具，考试后有了时间顺便把它拓展成了<a href=\"https://github.com/jeasonlau/Question-test\" target=\"_blank\" rel=\"noopener\">马原毛概刷题工具</a>，添加了随机刷题，考试模拟，错题本等功能，但平心而论，<code>python</code>的命令行程序还是不太易于使用，于是考虑将其改为网页版本，目前<a href=\"https://github.com/jeasonlau/Question-test-web\" target=\"_blank\" rel=\"noopener\">该项目</a>已经开源在了github（在此前并没有接触过前端，所以可能会有很多不足之处）。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h2><p>后端使用<code>go</code>的轻量web框架<code>gin</code>，<a href=\"https://github.com/jeasonlau/Question-test-web/blob/master/back-end/main.go\" target=\"_blank\" rel=\"noopener\">代码在这儿</a>！</p>\n<p>其通过读取当前目录的<code>mayuan.json/maogai.json</code>，根据不同的路由返回不同的结果：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">访问地址</th>\n<th align=\"center\">返回结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/:subject/position/:num</td>\n<td align=\"center\">返回该subject位置为num的题目</td>\n</tr>\n<tr>\n<td align=\"center\">/:subject/random/</td>\n<td align=\"center\">返回该subject随机一道题目</td>\n</tr>\n<tr>\n<td align=\"center\">/:subject/random/radio</td>\n<td align=\"center\">返回该subject随机一道单选题目</td>\n</tr>\n<tr>\n<td align=\"center\">/:subject/random/checkbox</td>\n<td align=\"center\">返回该subject随机一道多选题目</td>\n</tr>\n</tbody></table>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>前端使用<code>vue.js</code>，准备学习的时候，在官方文档中发现了这句话：</p>\n<blockquote>\n<p>官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。</p>\n</blockquote>\n<p>而我对前端知识一无所知，于是先去<code>freecodecamp</code>学习了<code>HTML</code>基础和前几节<code>CSS</code>（因为<code>CSS</code>内容实在是太多了！），然后去<code>廖雪峰教程</code>把<code>JavaScript</code>学到了函数部分，之后一边参考官方文档学习一边上手开发。</p>\n<hr>\n<p>首先使用<code>webpack</code>脚手架创建<code>vue</code>项目，接着安装并引入<code>muse-ui</code>组件库。</p>\n<ol>\n<li><p>路由</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> index <span class=\"keyword\">from</span> <span class=\"string\">'../components/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> temp <span class=\"keyword\">from</span> <span class=\"string\">'../components/temp'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> exam <span class=\"keyword\">from</span> <span class=\"string\">'../components/exam'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> order <span class=\"keyword\">from</span> <span class=\"string\">'../components/order'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> about <span class=\"keyword\">from</span> <span class=\"string\">'../components/about'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Router)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Router(&#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">      component: index</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/马原'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'mayuan'</span>,</span><br><span class=\"line\">      component: temp</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/毛概'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'maogai'</span>,</span><br><span class=\"line\">      component: temp</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/马原/顺序刷题'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'mayuanorder'</span>,</span><br><span class=\"line\">      component: order</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/毛概/顺序刷题'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'maogaiorder'</span>,</span><br><span class=\"line\">      component: order</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/马原/考试模拟'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'mayuanexam'</span>,</span><br><span class=\"line\">      component: exam</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/毛概/考试模拟'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'maogaiexam'</span>,</span><br><span class=\"line\">      component: exam</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/关于'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'about'</span>,</span><br><span class=\"line\">      component: about</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>组件</p>\n<ul>\n<li><p><code>App.vue</code>中写入通用的顶栏，侧边栏等内容，监听路由变化修改标题。</p>\n</li>\n<li><p><code>index.vue</code>和<code>about.vue</code>使用纯<code>HTML/CSS</code>写成。</p>\n</li>\n<li><p><code>temp.vue</code>用于选择刷题方式。</p>\n</li>\n<li><p><code>order.vue</code>为顺序刷题界面，使用<code>mu-pagination</code>进行翻页，<code>exam.vue</code>为考试模拟界面，使用<code>mu-load-more</code>实现题目部分加载。</p>\n</li>\n<li><p><code>question.vue</code>为单位题目，是<code>order.vue</code>和<code>exam.vue</code>的子组件，监听<code>props</code>中<code>num</code>的变化，调用<code>getQuestion()</code>加载相应题目并判断是单选还是多选。在选择选项时使用<code>ifRight()</code>判断答案是否正确。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ifRight</span></span><br><span class=\"line\">ifRight: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> answer</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isRadio === <span class=\"literal\">false</span>) &#123;<span class=\"comment\">// 多选将答案array排序并链接为字符串</span></span><br><span class=\"line\">          answer = <span class=\"keyword\">this</span>.yourAnswer.sort().join(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 单选直接获取</span></span><br><span class=\"line\">          answer = <span class=\"keyword\">this</span>.yourAnswer</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (answer === <span class=\"keyword\">this</span>.question[<span class=\"string\">\"Answer\"</span>]) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.isRight = <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.timer)</span><br><span class=\"line\">            clearTimeout(<span class=\"keyword\">this</span>.timer)</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.timer = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 显示2s的通知</span></span><br><span class=\"line\">            that.isRight = <span class=\"literal\">false</span></span><br><span class=\"line\">          &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.isRight = <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"comment\">// getQuestion</span></span><br><span class=\"line\">getQuestion () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.yourAnswer=[]</span><br><span class=\"line\">    <span class=\"comment\">//根据父组件的path和当前num获取要请求的地址</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.type === <span class=\"string\">\"/马原/顺序刷题\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/mayuan/position/\"</span> + (<span class=\"keyword\">this</span>.num - <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.type === <span class=\"string\">\"/毛概/顺序刷题\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/maogai/position/\"</span> + (<span class=\"keyword\">this</span>.num - <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.type === <span class=\"string\">\"/马原/考试模拟\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.num &lt;= <span class=\"number\">40</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/mayuan/random/radio\"</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url= <span class=\"string\">\"https://.../api/mayuan/random/checkbox\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.type === <span class=\"string\">\"/毛概/考试模拟\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.num &lt;= <span class=\"number\">40</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/maogai/random/radio\"</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/maogai/random/checkbox\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    axios<span class=\"comment\">// 使用axios请求api获取题目</span></span><br><span class=\"line\">        .get(<span class=\"keyword\">this</span>.url)</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.question = response.data</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.question[<span class=\"string\">'Answer'</span>].length &gt; <span class=\"number\">1</span>) &#123;<span class=\"comment\">// 判断是单选还是多选</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.isRadio = <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.isRadio = <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>在部署的时候遇到了不少问题。</p>\n<p>开始在本地调试时发现无法加载出题目。查看<code>chrome console</code>中的错误信息，查询后发现是因为后端没有配置跨域，于是在后端路由中加上了：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.Writer.Header().Set(<span class=\"string\">\"Access-Control-Allow-Origin\"</span>, <span class=\"string\">\"*\"</span>)</span><br></pre></td></tr></table></figure>\n\n<p>调试正常，但部署到<code>github pages</code>后发现仍然无法加载，查看错误信息，得知在<code>https</code>网页中不能加载<code>http</code>资源，于是任务变成了给<code>gin</code>加上<code>https</code>。</p>\n<p>查阅发现一般方法是申请子域名和免费证书，但我懒得整那么多了，正好手头有个<code>https</code>域名，直接给<code>nginx</code>的当前<code>server</code>块配个反向代理：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">location</span> /api&#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://localhost:8080;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后在<code>github pages</code>中请求这个地址，但是不知道是不是因为中间隔了个<code>nginx</code>，又出现了跨域问题，一时没有查到解决方法，所以不得已把前端也部署在了<code>nginx</code>上，问题解决（唯一问题是我的服务器没有备案，所以只能手动输入端口访问）。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://cn.vuejs.org/v2/guide/\" target=\"_blank\" rel=\"noopener\">Vue.js官方文档</a></li>\n<li><a href=\"https://muse-ui.org/#/zh-CN/installation\" target=\"_blank\" rel=\"noopener\">Muse-UI官方文档</a></li>\n<li><a href=\"https://github.com/gin-gonic/gin/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">Gin.README.md</a></li>\n<li><a href=\"https://neumathe.xyz/\" target=\"_blank\" rel=\"noopener\">扶朕起来朕还能学</a></li>\n</ul>\n","site":{"data":{}},"length":3658,"excerpt":"<p>考试之前临时赶工做了个马原刷题工具，考试后有了时间顺便把它拓展成了<a href=\"https://github.com/jeasonlau/Question-test\" target=\"_blank\" rel=\"noopener\">马原毛概刷题工具</a>，添加了随机刷题，考试模拟，错题本等功能，但平心而论，<code>python</code>的命令行程序还是不太易于使用，于是考虑将其改为网页版本，目前<a href=\"https://github.com/jeasonlau/Question-test-web\" target=\"_blank\" rel=\"noopener\">该项目</a>已经开源在了github（在此前并没有接触过前端，所以可能会有很多不足之处）。</p>","more":"<h2 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h2><p>后端使用<code>go</code>的轻量web框架<code>gin</code>，<a href=\"https://github.com/jeasonlau/Question-test-web/blob/master/back-end/main.go\" target=\"_blank\" rel=\"noopener\">代码在这儿</a>！</p>\n<p>其通过读取当前目录的<code>mayuan.json/maogai.json</code>，根据不同的路由返回不同的结果：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">访问地址</th>\n<th align=\"center\">返回结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">/:subject/position/:num</td>\n<td align=\"center\">返回该subject位置为num的题目</td>\n</tr>\n<tr>\n<td align=\"center\">/:subject/random/</td>\n<td align=\"center\">返回该subject随机一道题目</td>\n</tr>\n<tr>\n<td align=\"center\">/:subject/random/radio</td>\n<td align=\"center\">返回该subject随机一道单选题目</td>\n</tr>\n<tr>\n<td align=\"center\">/:subject/random/checkbox</td>\n<td align=\"center\">返回该subject随机一道多选题目</td>\n</tr>\n</tbody></table>\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><p>前端使用<code>vue.js</code>，准备学习的时候，在官方文档中发现了这句话：</p>\n<blockquote>\n<p>官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。</p>\n</blockquote>\n<p>而我对前端知识一无所知，于是先去<code>freecodecamp</code>学习了<code>HTML</code>基础和前几节<code>CSS</code>（因为<code>CSS</code>内容实在是太多了！），然后去<code>廖雪峰教程</code>把<code>JavaScript</code>学到了函数部分，之后一边参考官方文档学习一边上手开发。</p>\n<hr>\n<p>首先使用<code>webpack</code>脚手架创建<code>vue</code>项目，接着安装并引入<code>muse-ui</code>组件库。</p>\n<ol>\n<li><p>路由</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> index <span class=\"keyword\">from</span> <span class=\"string\">'../components/index'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> temp <span class=\"keyword\">from</span> <span class=\"string\">'../components/temp'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> exam <span class=\"keyword\">from</span> <span class=\"string\">'../components/exam'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> order <span class=\"keyword\">from</span> <span class=\"string\">'../components/order'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> about <span class=\"keyword\">from</span> <span class=\"string\">'../components/about'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Router)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Router(&#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">      component: index</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/马原'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'mayuan'</span>,</span><br><span class=\"line\">      component: temp</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/毛概'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'maogai'</span>,</span><br><span class=\"line\">      component: temp</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/马原/顺序刷题'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'mayuanorder'</span>,</span><br><span class=\"line\">      component: order</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/毛概/顺序刷题'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'maogaiorder'</span>,</span><br><span class=\"line\">      component: order</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/马原/考试模拟'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'mayuanexam'</span>,</span><br><span class=\"line\">      component: exam</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/毛概/考试模拟'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'maogaiexam'</span>,</span><br><span class=\"line\">      component: exam</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/关于'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'about'</span>,</span><br><span class=\"line\">      component: about</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>组件</p>\n<ul>\n<li><p><code>App.vue</code>中写入通用的顶栏，侧边栏等内容，监听路由变化修改标题。</p>\n</li>\n<li><p><code>index.vue</code>和<code>about.vue</code>使用纯<code>HTML/CSS</code>写成。</p>\n</li>\n<li><p><code>temp.vue</code>用于选择刷题方式。</p>\n</li>\n<li><p><code>order.vue</code>为顺序刷题界面，使用<code>mu-pagination</code>进行翻页，<code>exam.vue</code>为考试模拟界面，使用<code>mu-load-more</code>实现题目部分加载。</p>\n</li>\n<li><p><code>question.vue</code>为单位题目，是<code>order.vue</code>和<code>exam.vue</code>的子组件，监听<code>props</code>中<code>num</code>的变化，调用<code>getQuestion()</code>加载相应题目并判断是单选还是多选。在选择选项时使用<code>ifRight()</code>判断答案是否正确。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ifRight</span></span><br><span class=\"line\">ifRight: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> answer</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.isRadio === <span class=\"literal\">false</span>) &#123;<span class=\"comment\">// 多选将答案array排序并链接为字符串</span></span><br><span class=\"line\">          answer = <span class=\"keyword\">this</span>.yourAnswer.sort().join(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 单选直接获取</span></span><br><span class=\"line\">          answer = <span class=\"keyword\">this</span>.yourAnswer</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (answer === <span class=\"keyword\">this</span>.question[<span class=\"string\">\"Answer\"</span>]) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.isRight = <span class=\"literal\">true</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> that = <span class=\"keyword\">this</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.timer)</span><br><span class=\"line\">            clearTimeout(<span class=\"keyword\">this</span>.timer)</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.timer = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">// 显示2s的通知</span></span><br><span class=\"line\">            that.isRight = <span class=\"literal\">false</span></span><br><span class=\"line\">          &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.isRight = <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"comment\">// getQuestion</span></span><br><span class=\"line\">getQuestion () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.yourAnswer=[]</span><br><span class=\"line\">    <span class=\"comment\">//根据父组件的path和当前num获取要请求的地址</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.type === <span class=\"string\">\"/马原/顺序刷题\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/mayuan/position/\"</span> + (<span class=\"keyword\">this</span>.num - <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.type === <span class=\"string\">\"/毛概/顺序刷题\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/maogai/position/\"</span> + (<span class=\"keyword\">this</span>.num - <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.type === <span class=\"string\">\"/马原/考试模拟\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.num &lt;= <span class=\"number\">40</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/mayuan/random/radio\"</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url= <span class=\"string\">\"https://.../api/mayuan/random/checkbox\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.type === <span class=\"string\">\"/毛概/考试模拟\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.num &lt;= <span class=\"number\">40</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/maogai/random/radio\"</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.url = <span class=\"string\">\"https://.../api/maogai/random/checkbox\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    axios<span class=\"comment\">// 使用axios请求api获取题目</span></span><br><span class=\"line\">        .get(<span class=\"keyword\">this</span>.url)</span><br><span class=\"line\">        .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.question = response.data</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.question[<span class=\"string\">'Answer'</span>].length &gt; <span class=\"number\">1</span>) &#123;<span class=\"comment\">// 判断是单选还是多选</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.isRadio = <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.isRadio = <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>在部署的时候遇到了不少问题。</p>\n<p>开始在本地调试时发现无法加载出题目。查看<code>chrome console</code>中的错误信息，查询后发现是因为后端没有配置跨域，于是在后端路由中加上了：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c.Writer.Header().Set(<span class=\"string\">\"Access-Control-Allow-Origin\"</span>, <span class=\"string\">\"*\"</span>)</span><br></pre></td></tr></table></figure>\n\n<p>调试正常，但部署到<code>github pages</code>后发现仍然无法加载，查看错误信息，得知在<code>https</code>网页中不能加载<code>http</code>资源，于是任务变成了给<code>gin</code>加上<code>https</code>。</p>\n<p>查阅发现一般方法是申请子域名和免费证书，但我懒得整那么多了，正好手头有个<code>https</code>域名，直接给<code>nginx</code>的当前<code>server</code>块配个反向代理：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">location</span> /api&#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://localhost:8080;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>然后在<code>github pages</code>中请求这个地址，但是不知道是不是因为中间隔了个<code>nginx</code>，又出现了跨域问题，一时没有查到解决方法，所以不得已把前端也部署在了<code>nginx</code>上，问题解决（唯一问题是我的服务器没有备案，所以只能手动输入端口访问）。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://cn.vuejs.org/v2/guide/\" target=\"_blank\" rel=\"noopener\">Vue.js官方文档</a></li>\n<li><a href=\"https://muse-ui.org/#/zh-CN/installation\" target=\"_blank\" rel=\"noopener\">Muse-UI官方文档</a></li>\n<li><a href=\"https://github.com/gin-gonic/gin/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">Gin.README.md</a></li>\n<li><a href=\"https://neumathe.xyz/\" target=\"_blank\" rel=\"noopener\">扶朕起来朕还能学</a></li>\n</ul>"},{"title":"为typora集成sm.ms图床，纵享丝滑体验","date":"2020-04-28T12:01:51.000Z","_content":"\n起因是安利一位同学使用`typora`写`markdown`，他那里上官网比较慢，所以我去帮他下载，闲来无聊顺便逛了逛。逛完才发现，原来`typora`有那么多自定义选项！（没错我这一年多一直用的默认设置XD）\n\n以此为契机，我第一次打开了它的偏好设置，查看了各类选项， 发现里面有一个很有意思的功能：`插入图片自动上传`，觉得挺方便的，于是准备配置一波...\n\n>   注意：笔者使用的是`linux`，`windows`请酌情参考（安装方法和配置文件路径会略有差异）\n\n<!--more-->\n\n## 安装\n\n`typora`中可选的上传配置有`Picgo`，`Picgo-core`，`custom command`和`none`，本人很久前用过`Picgo`，但其使用`electron`构建的UI在`linux`上体验属实很差，所以此处我选用了命令行版的`Picgo-core`。\n\n首先进行安装：\n\n```bash\nnpm install picgo -g\n# or\nyarn global add picgo\n```\n\n## 插件配置\n\n>   注意：`windows`用户请确保将`picgo`添加到环境变量，否则需要把下文中的所有`picgo`替换为`path+picgo`（例：`C:\\picgo\\picgo.exe`）\n\n`Picgo`本身支持多种图床上传，我选用的是方便免费的`SM.MS`，于[项目主页](https://github.com/Molunerfinn/PicGo)我们了解到：\n\n>   PicGo 本体支持如下图床：\n>\n>   -   ~~`SM.MS` v1.5.1~~ **由于官方不再支持V1版本，暂时请使用[smms-user](https://github.com/xlzy520/picgo-plugin-smms-user)插件**\n\n也就是说我们需要额外安装插件才可以正常使用`SM.MS`图床进行上传，于是打开`terminal`，执行：\n\n```bash\npicgo install smms-user\n```\n\n安装成功后，我们仍然需要对其进行配置。执行以下命令：\n\n```bash\npicgo config plugin smms-user\n? Auth \n```\n\n你需要在此处输入你的`TOKEN`，首先到`SM.MS`网站注册一个账户，接着访问[该链接](https://sm.ms/home/apitoken)获取`TOKEN`并输入，你应该会收到以下提示信息：\n\n```bash\n[PicGo SUCCESS]: Configure config successfully!\n```\n\n接下来是最后一步，你需要把你使用的`uploader`修改为`smms-user`，在命令行中执行：\n\n```bash\npicgo config uploader\n? Choose a(n) uploader (Use arrow keys)\n❯ smms-user \n  smms \n  tcyun \n  github \n  qiniu \n  imgur \n  aliyun \n(Move up and down to reveal more choices)\n```\n\n移动箭头并选中`smms-user`，点击回车，此时你位于`~/.picgo/config.json`的配置文件内容应该形如：\n\n```json\n{\n  \"picBed\": {\n    \"current\": \"smms-user\",\n    \"uploader\": \"smms-user\",\n    \"transformer\": \"path\",\n    \"smms-user\": {\n      \"Authorization\": \"your token\"\n    }\n  },\n  \"picgoPlugins\": {\n    \"picgo-plugin-smms-user\": true\n  },\n  \"picgo-plugin-smms-user\": {\n    \"Authorization\": \"your token\"\n  }\n}\n```\n\n图片上传服务配置成功完成！\n\n## typora集成\n\n配置完上传服务，接下来在`typora`对接一下即可。\n\n打开`typora`偏好设置，在上传服务设定栏选`custom command`（这里解释一下，选择`Picgo-core`只能使用其规定的路径，我们自己指定路径还是需要用`custom command`），然后在下面的文本框输入：\n\n```bash\npicgo upload\n```\n\n对接完成！接下来可以尝试点击旁边的“验证图片上传选项”按钮，测试上传是否成功了。\n\n## 小提示\n\n目前仅支持把文件拖动到`typora`中完成上传，如果直接从剪切板粘贴，`typora`会自动将该图片放到`~/upload`文件夹下但不会自动上传，需要自己手动点击“上传图片”。这是`typora`本身的bug：\n\n>   This should be a bug, there's no need to create the \"upload\" folder.\n\n详见[#3331](https://github.com/typora/typora-issues/issues/3331).\n\n## 参考\n\n1.  [Picgo](https://github.com/Molunerfinn/PicGo)\n2.  [Picgo-core](https://github.com/PicGo/PicGo-Core)\n3.  [picgo-plugin-smms-user](https://github.com/xlzy520/picgo-plugin-smms-user)\n4.  [Picgo-core document](https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html)\n","source":"_posts/typora.md","raw":"---\ntitle: 为typora集成sm.ms图床，纵享丝滑体验\ndate: 2020-04-28 20:01:51\ntags: [linux,image]\ncategories: 便捷使用\n---\n\n起因是安利一位同学使用`typora`写`markdown`，他那里上官网比较慢，所以我去帮他下载，闲来无聊顺便逛了逛。逛完才发现，原来`typora`有那么多自定义选项！（没错我这一年多一直用的默认设置XD）\n\n以此为契机，我第一次打开了它的偏好设置，查看了各类选项， 发现里面有一个很有意思的功能：`插入图片自动上传`，觉得挺方便的，于是准备配置一波...\n\n>   注意：笔者使用的是`linux`，`windows`请酌情参考（安装方法和配置文件路径会略有差异）\n\n<!--more-->\n\n## 安装\n\n`typora`中可选的上传配置有`Picgo`，`Picgo-core`，`custom command`和`none`，本人很久前用过`Picgo`，但其使用`electron`构建的UI在`linux`上体验属实很差，所以此处我选用了命令行版的`Picgo-core`。\n\n首先进行安装：\n\n```bash\nnpm install picgo -g\n# or\nyarn global add picgo\n```\n\n## 插件配置\n\n>   注意：`windows`用户请确保将`picgo`添加到环境变量，否则需要把下文中的所有`picgo`替换为`path+picgo`（例：`C:\\picgo\\picgo.exe`）\n\n`Picgo`本身支持多种图床上传，我选用的是方便免费的`SM.MS`，于[项目主页](https://github.com/Molunerfinn/PicGo)我们了解到：\n\n>   PicGo 本体支持如下图床：\n>\n>   -   ~~`SM.MS` v1.5.1~~ **由于官方不再支持V1版本，暂时请使用[smms-user](https://github.com/xlzy520/picgo-plugin-smms-user)插件**\n\n也就是说我们需要额外安装插件才可以正常使用`SM.MS`图床进行上传，于是打开`terminal`，执行：\n\n```bash\npicgo install smms-user\n```\n\n安装成功后，我们仍然需要对其进行配置。执行以下命令：\n\n```bash\npicgo config plugin smms-user\n? Auth \n```\n\n你需要在此处输入你的`TOKEN`，首先到`SM.MS`网站注册一个账户，接着访问[该链接](https://sm.ms/home/apitoken)获取`TOKEN`并输入，你应该会收到以下提示信息：\n\n```bash\n[PicGo SUCCESS]: Configure config successfully!\n```\n\n接下来是最后一步，你需要把你使用的`uploader`修改为`smms-user`，在命令行中执行：\n\n```bash\npicgo config uploader\n? Choose a(n) uploader (Use arrow keys)\n❯ smms-user \n  smms \n  tcyun \n  github \n  qiniu \n  imgur \n  aliyun \n(Move up and down to reveal more choices)\n```\n\n移动箭头并选中`smms-user`，点击回车，此时你位于`~/.picgo/config.json`的配置文件内容应该形如：\n\n```json\n{\n  \"picBed\": {\n    \"current\": \"smms-user\",\n    \"uploader\": \"smms-user\",\n    \"transformer\": \"path\",\n    \"smms-user\": {\n      \"Authorization\": \"your token\"\n    }\n  },\n  \"picgoPlugins\": {\n    \"picgo-plugin-smms-user\": true\n  },\n  \"picgo-plugin-smms-user\": {\n    \"Authorization\": \"your token\"\n  }\n}\n```\n\n图片上传服务配置成功完成！\n\n## typora集成\n\n配置完上传服务，接下来在`typora`对接一下即可。\n\n打开`typora`偏好设置，在上传服务设定栏选`custom command`（这里解释一下，选择`Picgo-core`只能使用其规定的路径，我们自己指定路径还是需要用`custom command`），然后在下面的文本框输入：\n\n```bash\npicgo upload\n```\n\n对接完成！接下来可以尝试点击旁边的“验证图片上传选项”按钮，测试上传是否成功了。\n\n## 小提示\n\n目前仅支持把文件拖动到`typora`中完成上传，如果直接从剪切板粘贴，`typora`会自动将该图片放到`~/upload`文件夹下但不会自动上传，需要自己手动点击“上传图片”。这是`typora`本身的bug：\n\n>   This should be a bug, there's no need to create the \"upload\" folder.\n\n详见[#3331](https://github.com/typora/typora-issues/issues/3331).\n\n## 参考\n\n1.  [Picgo](https://github.com/Molunerfinn/PicGo)\n2.  [Picgo-core](https://github.com/PicGo/PicGo-Core)\n3.  [picgo-plugin-smms-user](https://github.com/xlzy520/picgo-plugin-smms-user)\n4.  [Picgo-core document](https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html)\n","slug":"typora","published":1,"updated":"2020-04-29T03:11:53.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp020008hpz63sqkbjd8","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>起因是安利一位同学使用<code>typora</code>写<code>markdown</code>，他那里上官网比较慢，所以我去帮他下载，闲来无聊顺便逛了逛。逛完才发现，原来<code>typora</code>有那么多自定义选项！（没错我这一年多一直用的默认设置XD）</p>\n<p>以此为契机，我第一次打开了它的偏好设置，查看了各类选项， 发现里面有一个很有意思的功能：<code>插入图片自动上传</code>，觉得挺方便的，于是准备配置一波…</p>\n<blockquote>\n<p>  注意：笔者使用的是<code>linux</code>，<code>windows</code>请酌情参考（安装方法和配置文件路径会略有差异）</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p><code>typora</code>中可选的上传配置有<code>Picgo</code>，<code>Picgo-core</code>，<code>custom command</code>和<code>none</code>，本人很久前用过<code>Picgo</code>，但其使用<code>electron</code>构建的UI在<code>linux</code>上体验属实很差，所以此处我选用了命令行版的<code>Picgo-core</code>。</p>\n<p>首先进行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install picgo -g</span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\">yarn global add picgo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"插件配置\"><a href=\"#插件配置\" class=\"headerlink\" title=\"插件配置\"></a>插件配置</h2><blockquote>\n<p>  注意：<code>windows</code>用户请确保将<code>picgo</code>添加到环境变量，否则需要把下文中的所有<code>picgo</code>替换为<code>path+picgo</code>（例：<code>C:\\picgo\\picgo.exe</code>）</p>\n</blockquote>\n<p><code>Picgo</code>本身支持多种图床上传，我选用的是方便免费的<code>SM.MS</code>，于<a href=\"https://github.com/Molunerfinn/PicGo\" target=\"_blank\" rel=\"noopener\">项目主页</a>我们了解到：</p>\n<blockquote>\n<p>  PicGo 本体支持如下图床：</p>\n<ul>\n<li><del><code>SM.MS</code> v1.5.1</del> <strong>由于官方不再支持V1版本，暂时请使用<a href=\"https://github.com/xlzy520/picgo-plugin-smms-user\" target=\"_blank\" rel=\"noopener\">smms-user</a>插件</strong></li>\n</ul>\n</blockquote>\n<p>也就是说我们需要额外安装插件才可以正常使用<code>SM.MS</code>图床进行上传，于是打开<code>terminal</code>，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">picgo install smms-user</span><br></pre></td></tr></table></figure>\n\n<p>安装成功后，我们仍然需要对其进行配置。执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">picgo config plugin smms-user</span><br><span class=\"line\">? Auth</span><br></pre></td></tr></table></figure>\n\n<p>你需要在此处输入你的<code>TOKEN</code>，首先到<code>SM.MS</code>网站注册一个账户，接着访问<a href=\"https://sm.ms/home/apitoken\" target=\"_blank\" rel=\"noopener\">该链接</a>获取<code>TOKEN</code>并输入，你应该会收到以下提示信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[PicGo SUCCESS]: Configure config successfully!</span><br></pre></td></tr></table></figure>\n\n<p>接下来是最后一步，你需要把你使用的<code>uploader</code>修改为<code>smms-user</code>，在命令行中执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">picgo config uploader</span><br><span class=\"line\">? Choose a(n) uploader (Use arrow keys)</span><br><span class=\"line\">❯ smms-user </span><br><span class=\"line\">  smms </span><br><span class=\"line\">  tcyun </span><br><span class=\"line\">  github </span><br><span class=\"line\">  qiniu </span><br><span class=\"line\">  imgur </span><br><span class=\"line\">  aliyun </span><br><span class=\"line\">(Move up and down to reveal more choices)</span><br></pre></td></tr></table></figure>\n\n<p>移动箭头并选中<code>smms-user</code>，点击回车，此时你位于<code>~/.picgo/config.json</code>的配置文件内容应该形如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"picBed\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"current\"</span>: <span class=\"string\">\"smms-user\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"uploader\"</span>: <span class=\"string\">\"smms-user\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"transformer\"</span>: <span class=\"string\">\"path\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"smms-user\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"Authorization\"</span>: <span class=\"string\">\"your token\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"picgoPlugins\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"picgo-plugin-smms-user\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"picgo-plugin-smms-user\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"Authorization\"</span>: <span class=\"string\">\"your token\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>图片上传服务配置成功完成！</p>\n<h2 id=\"typora集成\"><a href=\"#typora集成\" class=\"headerlink\" title=\"typora集成\"></a>typora集成</h2><p>配置完上传服务，接下来在<code>typora</code>对接一下即可。</p>\n<p>打开<code>typora</code>偏好设置，在上传服务设定栏选<code>custom command</code>（这里解释一下，选择<code>Picgo-core</code>只能使用其规定的路径，我们自己指定路径还是需要用<code>custom command</code>），然后在下面的文本框输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">picgo upload</span><br></pre></td></tr></table></figure>\n\n<p>对接完成！接下来可以尝试点击旁边的“验证图片上传选项”按钮，测试上传是否成功了。</p>\n<h2 id=\"小提示\"><a href=\"#小提示\" class=\"headerlink\" title=\"小提示\"></a>小提示</h2><p>目前仅支持把文件拖动到<code>typora</code>中完成上传，如果直接从剪切板粘贴，<code>typora</code>会自动将该图片放到<code>~/upload</code>文件夹下但不会自动上传，需要自己手动点击“上传图片”。这是<code>typora</code>本身的bug：</p>\n<blockquote>\n<p>  This should be a bug, there’s no need to create the “upload” folder.</p>\n</blockquote>\n<p>详见<a href=\"https://github.com/typora/typora-issues/issues/3331\" target=\"_blank\" rel=\"noopener\">#3331</a>.</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"https://github.com/Molunerfinn/PicGo\" target=\"_blank\" rel=\"noopener\">Picgo</a></li>\n<li><a href=\"https://github.com/PicGo/PicGo-Core\" target=\"_blank\" rel=\"noopener\">Picgo-core</a></li>\n<li><a href=\"https://github.com/xlzy520/picgo-plugin-smms-user\" target=\"_blank\" rel=\"noopener\">picgo-plugin-smms-user</a></li>\n<li><a href=\"https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html\" target=\"_blank\" rel=\"noopener\">Picgo-core document</a></li>\n</ol>\n","site":{"data":{}},"length":1765,"excerpt":"<p>起因是安利一位同学使用<code>typora</code>写<code>markdown</code>，他那里上官网比较慢，所以我去帮他下载，闲来无聊顺便逛了逛。逛完才发现，原来<code>typora</code>有那么多自定义选项！（没错我这一年多一直用的默认设置XD）</p>\n<p>以此为契机，我第一次打开了它的偏好设置，查看了各类选项， 发现里面有一个很有意思的功能：<code>插入图片自动上传</code>，觉得挺方便的，于是准备配置一波…</p>\n<blockquote>\n<p>  注意：笔者使用的是<code>linux</code>，<code>windows</code>请酌情参考（安装方法和配置文件路径会略有差异）</p>\n</blockquote>","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p><code>typora</code>中可选的上传配置有<code>Picgo</code>，<code>Picgo-core</code>，<code>custom command</code>和<code>none</code>，本人很久前用过<code>Picgo</code>，但其使用<code>electron</code>构建的UI在<code>linux</code>上体验属实很差，所以此处我选用了命令行版的<code>Picgo-core</code>。</p>\n<p>首先进行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install picgo -g</span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\">yarn global add picgo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"插件配置\"><a href=\"#插件配置\" class=\"headerlink\" title=\"插件配置\"></a>插件配置</h2><blockquote>\n<p>  注意：<code>windows</code>用户请确保将<code>picgo</code>添加到环境变量，否则需要把下文中的所有<code>picgo</code>替换为<code>path+picgo</code>（例：<code>C:\\picgo\\picgo.exe</code>）</p>\n</blockquote>\n<p><code>Picgo</code>本身支持多种图床上传，我选用的是方便免费的<code>SM.MS</code>，于<a href=\"https://github.com/Molunerfinn/PicGo\" target=\"_blank\" rel=\"noopener\">项目主页</a>我们了解到：</p>\n<blockquote>\n<p>  PicGo 本体支持如下图床：</p>\n<ul>\n<li><del><code>SM.MS</code> v1.5.1</del> <strong>由于官方不再支持V1版本，暂时请使用<a href=\"https://github.com/xlzy520/picgo-plugin-smms-user\" target=\"_blank\" rel=\"noopener\">smms-user</a>插件</strong></li>\n</ul>\n</blockquote>\n<p>也就是说我们需要额外安装插件才可以正常使用<code>SM.MS</code>图床进行上传，于是打开<code>terminal</code>，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">picgo install smms-user</span><br></pre></td></tr></table></figure>\n\n<p>安装成功后，我们仍然需要对其进行配置。执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">picgo config plugin smms-user</span><br><span class=\"line\">? Auth</span><br></pre></td></tr></table></figure>\n\n<p>你需要在此处输入你的<code>TOKEN</code>，首先到<code>SM.MS</code>网站注册一个账户，接着访问<a href=\"https://sm.ms/home/apitoken\" target=\"_blank\" rel=\"noopener\">该链接</a>获取<code>TOKEN</code>并输入，你应该会收到以下提示信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[PicGo SUCCESS]: Configure config successfully!</span><br></pre></td></tr></table></figure>\n\n<p>接下来是最后一步，你需要把你使用的<code>uploader</code>修改为<code>smms-user</code>，在命令行中执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">picgo config uploader</span><br><span class=\"line\">? Choose a(n) uploader (Use arrow keys)</span><br><span class=\"line\">❯ smms-user </span><br><span class=\"line\">  smms </span><br><span class=\"line\">  tcyun </span><br><span class=\"line\">  github </span><br><span class=\"line\">  qiniu </span><br><span class=\"line\">  imgur </span><br><span class=\"line\">  aliyun </span><br><span class=\"line\">(Move up and down to reveal more choices)</span><br></pre></td></tr></table></figure>\n\n<p>移动箭头并选中<code>smms-user</code>，点击回车，此时你位于<code>~/.picgo/config.json</code>的配置文件内容应该形如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"picBed\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"current\"</span>: <span class=\"string\">\"smms-user\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"uploader\"</span>: <span class=\"string\">\"smms-user\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"transformer\"</span>: <span class=\"string\">\"path\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"smms-user\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">\"Authorization\"</span>: <span class=\"string\">\"your token\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"picgoPlugins\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"picgo-plugin-smms-user\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"picgo-plugin-smms-user\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"Authorization\"</span>: <span class=\"string\">\"your token\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>图片上传服务配置成功完成！</p>\n<h2 id=\"typora集成\"><a href=\"#typora集成\" class=\"headerlink\" title=\"typora集成\"></a>typora集成</h2><p>配置完上传服务，接下来在<code>typora</code>对接一下即可。</p>\n<p>打开<code>typora</code>偏好设置，在上传服务设定栏选<code>custom command</code>（这里解释一下，选择<code>Picgo-core</code>只能使用其规定的路径，我们自己指定路径还是需要用<code>custom command</code>），然后在下面的文本框输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">picgo upload</span><br></pre></td></tr></table></figure>\n\n<p>对接完成！接下来可以尝试点击旁边的“验证图片上传选项”按钮，测试上传是否成功了。</p>\n<h2 id=\"小提示\"><a href=\"#小提示\" class=\"headerlink\" title=\"小提示\"></a>小提示</h2><p>目前仅支持把文件拖动到<code>typora</code>中完成上传，如果直接从剪切板粘贴，<code>typora</code>会自动将该图片放到<code>~/upload</code>文件夹下但不会自动上传，需要自己手动点击“上传图片”。这是<code>typora</code>本身的bug：</p>\n<blockquote>\n<p>  This should be a bug, there’s no need to create the “upload” folder.</p>\n</blockquote>\n<p>详见<a href=\"https://github.com/typora/typora-issues/issues/3331\" target=\"_blank\" rel=\"noopener\">#3331</a>.</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><a href=\"https://github.com/Molunerfinn/PicGo\" target=\"_blank\" rel=\"noopener\">Picgo</a></li>\n<li><a href=\"https://github.com/PicGo/PicGo-Core\" target=\"_blank\" rel=\"noopener\">Picgo-core</a></li>\n<li><a href=\"https://github.com/xlzy520/picgo-plugin-smms-user\" target=\"_blank\" rel=\"noopener\">picgo-plugin-smms-user</a></li>\n<li><a href=\"https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html\" target=\"_blank\" rel=\"noopener\">Picgo-core document</a></li>\n</ol>"},{"title":"python中文字符串居中问题","date":"2019-12-22T14:40:01.000Z","_content":"\n最近在实现一个小功能的时候遇到了问题：字符串的居中输出。\n\n虽然python有内置的字符串方法`string.center()`，使字符串可以居中输出，但它并不能顺利地处理中文字符串，一直无法达到让中文字符串居中的效果。\n\n<!--more-->\n\n后来我突然醒悟，是不是因为python字符串长度的问题？用以下代码测试：\n\n```python\nstr1='哈哈哈'\nstr2='hhh'\nprint(len(str1),'+',len(str2))\n```\n\n输出结果居然是`3+3`，也就是说python将一个汉字/字母都记作一个字符，但其实它们的宽度并不相同。这样计算的话必然会导致无法正常居中，关键是要把汉字区别出来，于是我手动写了个居中函数：\n\n```python\ndef strCenter(str, len):\n    lst = list(str)\n    length = 0\n    for item in lst:\n        if item in string.printable:\n            length += 1\n        else:\n            length += 2\n    count = int((len - length) / 2)\n    result = count * ' ' + str + count * ' '\n    return result\n```\n\n就可以正常居中啦！\n\n追加以下内容测试一下：\n\n```python\na = '哈a哈a哈a哈a'\nb = '12345678901234567890'\nprint(a.center(20))\nprint(b.center(20))\nprint(20 * '-')\nprint(strCenter(a, 20))\nprint(strCenter(b, 20))\n```\n\n运行结果：\n\n```shell\n      哈a哈a哈a哈a      \n12345678901234567890\n--------------------\n    哈a哈a哈a哈a    \n12345678901234567890\n```\n\n任务成功完成！","source":"_posts/stringCenter.md","raw":"---\ntitle: python中文字符串居中问题\ndate: 2019-12-22 22:40:01\ntags: python\ncategories: 问题解决\n---\n\n最近在实现一个小功能的时候遇到了问题：字符串的居中输出。\n\n虽然python有内置的字符串方法`string.center()`，使字符串可以居中输出，但它并不能顺利地处理中文字符串，一直无法达到让中文字符串居中的效果。\n\n<!--more-->\n\n后来我突然醒悟，是不是因为python字符串长度的问题？用以下代码测试：\n\n```python\nstr1='哈哈哈'\nstr2='hhh'\nprint(len(str1),'+',len(str2))\n```\n\n输出结果居然是`3+3`，也就是说python将一个汉字/字母都记作一个字符，但其实它们的宽度并不相同。这样计算的话必然会导致无法正常居中，关键是要把汉字区别出来，于是我手动写了个居中函数：\n\n```python\ndef strCenter(str, len):\n    lst = list(str)\n    length = 0\n    for item in lst:\n        if item in string.printable:\n            length += 1\n        else:\n            length += 2\n    count = int((len - length) / 2)\n    result = count * ' ' + str + count * ' '\n    return result\n```\n\n就可以正常居中啦！\n\n追加以下内容测试一下：\n\n```python\na = '哈a哈a哈a哈a'\nb = '12345678901234567890'\nprint(a.center(20))\nprint(b.center(20))\nprint(20 * '-')\nprint(strCenter(a, 20))\nprint(strCenter(b, 20))\n```\n\n运行结果：\n\n```shell\n      哈a哈a哈a哈a      \n12345678901234567890\n--------------------\n    哈a哈a哈a哈a    \n12345678901234567890\n```\n\n任务成功完成！","slug":"stringCenter","published":1,"updated":"2020-01-26T15:43:20.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp06000ahpz69qb6hsik","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近在实现一个小功能的时候遇到了问题：字符串的居中输出。</p>\n<p>虽然python有内置的字符串方法<code>string.center()</code>，使字符串可以居中输出，但它并不能顺利地处理中文字符串，一直无法达到让中文字符串居中的效果。</p>\n<a id=\"more\"></a>\n\n<p>后来我突然醒悟，是不是因为python字符串长度的问题？用以下代码测试：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str1=<span class=\"string\">'哈哈哈'</span></span><br><span class=\"line\">str2=<span class=\"string\">'hhh'</span></span><br><span class=\"line\">print(len(str1),<span class=\"string\">'+'</span>,len(str2))</span><br></pre></td></tr></table></figure>\n\n<p>输出结果居然是<code>3+3</code>，也就是说python将一个汉字/字母都记作一个字符，但其实它们的宽度并不相同。这样计算的话必然会导致无法正常居中，关键是要把汉字区别出来，于是我手动写了个居中函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">strCenter</span><span class=\"params\">(str, len)</span>:</span></span><br><span class=\"line\">    lst = list(str)</span><br><span class=\"line\">    length = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> lst:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item <span class=\"keyword\">in</span> string.printable:</span><br><span class=\"line\">            length += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            length += <span class=\"number\">2</span></span><br><span class=\"line\">    count = int((len - length) / <span class=\"number\">2</span>)</span><br><span class=\"line\">    result = count * <span class=\"string\">' '</span> + str + count * <span class=\"string\">' '</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n<p>就可以正常居中啦！</p>\n<p>追加以下内容测试一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">'哈a哈a哈a哈a'</span></span><br><span class=\"line\">b = <span class=\"string\">'12345678901234567890'</span></span><br><span class=\"line\">print(a.center(<span class=\"number\">20</span>))</span><br><span class=\"line\">print(b.center(<span class=\"number\">20</span>))</span><br><span class=\"line\">print(<span class=\"number\">20</span> * <span class=\"string\">'-'</span>)</span><br><span class=\"line\">print(strCenter(a, <span class=\"number\">20</span>))</span><br><span class=\"line\">print(strCenter(b, <span class=\"number\">20</span>))</span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      哈a哈a哈a哈a      </span><br><span class=\"line\">12345678901234567890</span><br><span class=\"line\">--------------------</span><br><span class=\"line\">    哈a哈a哈a哈a    </span><br><span class=\"line\">12345678901234567890</span><br></pre></td></tr></table></figure>\n\n<p>任务成功完成！</p>\n","site":{"data":{}},"length":721,"excerpt":"<p>最近在实现一个小功能的时候遇到了问题：字符串的居中输出。</p>\n<p>虽然python有内置的字符串方法<code>string.center()</code>，使字符串可以居中输出，但它并不能顺利地处理中文字符串，一直无法达到让中文字符串居中的效果。</p>","more":"<p>后来我突然醒悟，是不是因为python字符串长度的问题？用以下代码测试：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str1=<span class=\"string\">'哈哈哈'</span></span><br><span class=\"line\">str2=<span class=\"string\">'hhh'</span></span><br><span class=\"line\">print(len(str1),<span class=\"string\">'+'</span>,len(str2))</span><br></pre></td></tr></table></figure>\n\n<p>输出结果居然是<code>3+3</code>，也就是说python将一个汉字/字母都记作一个字符，但其实它们的宽度并不相同。这样计算的话必然会导致无法正常居中，关键是要把汉字区别出来，于是我手动写了个居中函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">strCenter</span><span class=\"params\">(str, len)</span>:</span></span><br><span class=\"line\">    lst = list(str)</span><br><span class=\"line\">    length = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> lst:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> item <span class=\"keyword\">in</span> string.printable:</span><br><span class=\"line\">            length += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            length += <span class=\"number\">2</span></span><br><span class=\"line\">    count = int((len - length) / <span class=\"number\">2</span>)</span><br><span class=\"line\">    result = count * <span class=\"string\">' '</span> + str + count * <span class=\"string\">' '</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n<p>就可以正常居中啦！</p>\n<p>追加以下内容测试一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">'哈a哈a哈a哈a'</span></span><br><span class=\"line\">b = <span class=\"string\">'12345678901234567890'</span></span><br><span class=\"line\">print(a.center(<span class=\"number\">20</span>))</span><br><span class=\"line\">print(b.center(<span class=\"number\">20</span>))</span><br><span class=\"line\">print(<span class=\"number\">20</span> * <span class=\"string\">'-'</span>)</span><br><span class=\"line\">print(strCenter(a, <span class=\"number\">20</span>))</span><br><span class=\"line\">print(strCenter(b, <span class=\"number\">20</span>))</span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      哈a哈a哈a哈a      </span><br><span class=\"line\">12345678901234567890</span><br><span class=\"line\">--------------------</span><br><span class=\"line\">    哈a哈a哈a哈a    </span><br><span class=\"line\">12345678901234567890</span><br></pre></td></tr></table></figure>\n\n<p>任务成功完成！</p>"},{"title":"一个简单的命令行图床上传工具","date":"2020-02-29T05:37:06.000Z","_content":"\n昨天使用[缩狗图床](https://pic.suo.dog)`api`写了个[命令行图床上传工具](https://github.com/jeasonlau/python-scripts/blob/master/imagehost.py)，支持指定使用的图床，支持单文件/多文件/多目录（非递归）上传。虽然代码很简单，但还是准备记录一下（因为想水篇文章XD\n\n<!--more-->\n\n## 获取api\n\n既然要使用`api`，当然要获取`api`啦，首先看一下网站源码（此处只摘录了有用部分）：\n\n```html\n<!--图床的选择-->\n<div class=\"bodyer\">\n    <label><input name=\"keke\" checked=\"checked\" type=\"radio\" value=\"1688\">阿里图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"tieba\">百度图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"360\">360图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"taobao\">淘宝图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"smms\">SM.MS图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"sohu\">搜狐图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"jd\">京东图床</label>\n</div>\n<!--图片的上传-->\n<script>\n    var imagesUpload = function (files) {\n        a = $('input:radio:checked').val();\n        $(files).each(function (key, value) {\n            setTimeout(function () {\n                uurrll = 'https://pic.suo.dog/api/tc.php?type=' + a + '&echo=imgurl'\n                image_form = new FormData();\n                image_form.append(\"file\", value);\n                $.ajax({\n                    url: uurrll,\n                    type: 'POST',\n                    data: image_form,\n                    contentType: false,\n                    cache: false,\n                    processData: false,\n                    async: false,\n                    success: function (data) {\n                        if (typeof (data) == 'string') {\n                            imgurl = data\n                        } else {\n                            imgurl = data.imgurl\n                        }\n                    },\n                    error: function (XMLResponse) {\n                        alert(\"error:\" + XMLResponse.responseText);\n                    }\n                });\n            }, 100);\n        })\n    };\n</script>\n```\n\n上面的代码还是很清楚的，用选择器获取当前选中`radio`的`value`，使用其拼接需要请求的`api`，接着用`ajax`将文件数据`post`到`api`，成功后返回图片的地址。\n\n## 开始编写\n\n有了`api`，接下来就很简单了，基本思路就是：\n\n1. 打开文件\n2. 使用`requests`进行`post`\n3. 输出返回的图片`url`\n\n----\n\n使用了`requests`/`click`/`os`三个包。缺少的包可以使用`sudo pip install 包名`安装。\n\n首先将允许的图片文件拓展名和`api`地址设置为全局变量：\n\n```python\n# 这里列举了几种常见的图片格式，其它格式可以修改后自行测试\nallowedExtension = ['.jpeg', '.bmp', '.jpg', '.png', '.webp']\nurl = ''\n```\n\n接着使用`click`为`main`函数增加命令行参数：\n\n```python\n@click.command()\n@click.option('--type', '-t', default='1688', type=click.Choice(['1688', 'tieba', '360', 'taobao', 'smms', 'sohu', 'jd']), help='image hosting service.')\n@click.argument('paths', nargs=-1, type=click.Path(exists=True, readable=True))\n```\n\n`--type/-t option`用于指定使用的图床，限制了图床的选择范围，默认使用阿里图床，`paths argument`接受多个路径参数，在此处保证了目录存在并可读。\n\n然后是`main`函数：\n\n```python\ndef main(type, paths):\n    global url\n    url = 'https://pic.suo.dog/api/tc.php?type={}&echo=imgurl'.format(type)\n    count = 0\n    print('\\033[33m开始上传...\\033[0m')\n    for path in paths:\n        if os.path.isdir(path):\n            if not path.endswith('/'):\n                path += '/'\n            items = os.listdir(path)\n            for item in items:\n                if os.path.isfile(path + item):\n                    count += uploadFile(path + item)\n        else:\n            count += uploadFile(path)\n    print('\\033[33m上传完成，共上传{}张图片!\\033[0m'.format(count))\n```\n\n> 类似于`\\033[33m开始上传...\\033[0m`的格式是为了实现彩色输出，详情见[该文章](https://www.liuhaolin.com/linux/318.html)。\n\n使用获取到的`type`组成`url`，使用`count`标记上传图片的张数，遍历所有的路径参数，如果该路径参数为目录，则尝试上传该目录的所有文件，如果该路径参数为文件，则直接尝试上传该文件。最后输出上传的图片张数。\n\n之后是核心的上传函数：\n\n```python\ndef uploadFile(file):\n    if os.path.splitext(file)[-1] in allowedExtension:\n        postContent = {'file': open(file, 'rb')}\n        with requests.post(url, files=postContent) as response:\n            print('\\033[31m{}\\033[0m : \\033[4;32m{}\\033[0m'.format(\n                os.path.basename(file), response.text))\n        return 1\n    else:\n        return 0\n```\n\n判断拓展名是否允许，如果允许则将该文件用二进制打开，`post`给`api`，输出文件名和上传的地址，返回`1`，否则返回`0`。\n\n最后的内容就不用说了：\n\n```python\nif __name__ == '__main__':\n    main()\n```\n\n## 使用截图\n\n> 该截图同样使用该工具上传（使用`阿里图床/--type 1688`）\n\n![](https://ae01.alicdn.com/kf/U7999450fd3164007a8ced5305332715ep.png)\n\n## 结语\n\n啊，没想到这么几行代码居然能水这么长一篇文章！（滑稽\n\n目前`1688`图床可以正常使用，其它图床没有测试，如果有什么问题的话可以反馈给我。","source":"_posts/uploadImage.md","raw":"---\ntitle: 一个简单的命令行图床上传工具\ndate: 2020-02-29 13:37:06\ntags: [python,image]\ncategories: 开发记录\n---\n\n昨天使用[缩狗图床](https://pic.suo.dog)`api`写了个[命令行图床上传工具](https://github.com/jeasonlau/python-scripts/blob/master/imagehost.py)，支持指定使用的图床，支持单文件/多文件/多目录（非递归）上传。虽然代码很简单，但还是准备记录一下（因为想水篇文章XD\n\n<!--more-->\n\n## 获取api\n\n既然要使用`api`，当然要获取`api`啦，首先看一下网站源码（此处只摘录了有用部分）：\n\n```html\n<!--图床的选择-->\n<div class=\"bodyer\">\n    <label><input name=\"keke\" checked=\"checked\" type=\"radio\" value=\"1688\">阿里图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"tieba\">百度图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"360\">360图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"taobao\">淘宝图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"smms\">SM.MS图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"sohu\">搜狐图床</label>\n    <label><input name=\"keke\" type=\"radio\" value=\"jd\">京东图床</label>\n</div>\n<!--图片的上传-->\n<script>\n    var imagesUpload = function (files) {\n        a = $('input:radio:checked').val();\n        $(files).each(function (key, value) {\n            setTimeout(function () {\n                uurrll = 'https://pic.suo.dog/api/tc.php?type=' + a + '&echo=imgurl'\n                image_form = new FormData();\n                image_form.append(\"file\", value);\n                $.ajax({\n                    url: uurrll,\n                    type: 'POST',\n                    data: image_form,\n                    contentType: false,\n                    cache: false,\n                    processData: false,\n                    async: false,\n                    success: function (data) {\n                        if (typeof (data) == 'string') {\n                            imgurl = data\n                        } else {\n                            imgurl = data.imgurl\n                        }\n                    },\n                    error: function (XMLResponse) {\n                        alert(\"error:\" + XMLResponse.responseText);\n                    }\n                });\n            }, 100);\n        })\n    };\n</script>\n```\n\n上面的代码还是很清楚的，用选择器获取当前选中`radio`的`value`，使用其拼接需要请求的`api`，接着用`ajax`将文件数据`post`到`api`，成功后返回图片的地址。\n\n## 开始编写\n\n有了`api`，接下来就很简单了，基本思路就是：\n\n1. 打开文件\n2. 使用`requests`进行`post`\n3. 输出返回的图片`url`\n\n----\n\n使用了`requests`/`click`/`os`三个包。缺少的包可以使用`sudo pip install 包名`安装。\n\n首先将允许的图片文件拓展名和`api`地址设置为全局变量：\n\n```python\n# 这里列举了几种常见的图片格式，其它格式可以修改后自行测试\nallowedExtension = ['.jpeg', '.bmp', '.jpg', '.png', '.webp']\nurl = ''\n```\n\n接着使用`click`为`main`函数增加命令行参数：\n\n```python\n@click.command()\n@click.option('--type', '-t', default='1688', type=click.Choice(['1688', 'tieba', '360', 'taobao', 'smms', 'sohu', 'jd']), help='image hosting service.')\n@click.argument('paths', nargs=-1, type=click.Path(exists=True, readable=True))\n```\n\n`--type/-t option`用于指定使用的图床，限制了图床的选择范围，默认使用阿里图床，`paths argument`接受多个路径参数，在此处保证了目录存在并可读。\n\n然后是`main`函数：\n\n```python\ndef main(type, paths):\n    global url\n    url = 'https://pic.suo.dog/api/tc.php?type={}&echo=imgurl'.format(type)\n    count = 0\n    print('\\033[33m开始上传...\\033[0m')\n    for path in paths:\n        if os.path.isdir(path):\n            if not path.endswith('/'):\n                path += '/'\n            items = os.listdir(path)\n            for item in items:\n                if os.path.isfile(path + item):\n                    count += uploadFile(path + item)\n        else:\n            count += uploadFile(path)\n    print('\\033[33m上传完成，共上传{}张图片!\\033[0m'.format(count))\n```\n\n> 类似于`\\033[33m开始上传...\\033[0m`的格式是为了实现彩色输出，详情见[该文章](https://www.liuhaolin.com/linux/318.html)。\n\n使用获取到的`type`组成`url`，使用`count`标记上传图片的张数，遍历所有的路径参数，如果该路径参数为目录，则尝试上传该目录的所有文件，如果该路径参数为文件，则直接尝试上传该文件。最后输出上传的图片张数。\n\n之后是核心的上传函数：\n\n```python\ndef uploadFile(file):\n    if os.path.splitext(file)[-1] in allowedExtension:\n        postContent = {'file': open(file, 'rb')}\n        with requests.post(url, files=postContent) as response:\n            print('\\033[31m{}\\033[0m : \\033[4;32m{}\\033[0m'.format(\n                os.path.basename(file), response.text))\n        return 1\n    else:\n        return 0\n```\n\n判断拓展名是否允许，如果允许则将该文件用二进制打开，`post`给`api`，输出文件名和上传的地址，返回`1`，否则返回`0`。\n\n最后的内容就不用说了：\n\n```python\nif __name__ == '__main__':\n    main()\n```\n\n## 使用截图\n\n> 该截图同样使用该工具上传（使用`阿里图床/--type 1688`）\n\n![](https://ae01.alicdn.com/kf/U7999450fd3164007a8ced5305332715ep.png)\n\n## 结语\n\n啊，没想到这么几行代码居然能水这么长一篇文章！（滑稽\n\n目前`1688`图床可以正常使用，其它图床没有测试，如果有什么问题的话可以反馈给我。","slug":"uploadImage","published":1,"updated":"2020-02-29T09:49:17.164Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp0f000ehpz6dn25cgq7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>昨天使用<a href=\"https://pic.suo.dog\" target=\"_blank\" rel=\"noopener\">缩狗图床</a><code>api</code>写了个<a href=\"https://github.com/jeasonlau/python-scripts/blob/master/imagehost.py\" target=\"_blank\" rel=\"noopener\">命令行图床上传工具</a>，支持指定使用的图床，支持单文件/多文件/多目录（非递归）上传。虽然代码很简单，但还是准备记录一下（因为想水篇文章XD</p>\n<a id=\"more\"></a>\n\n<h2 id=\"获取api\"><a href=\"#获取api\" class=\"headerlink\" title=\"获取api\"></a>获取api</h2><p>既然要使用<code>api</code>，当然要获取<code>api</code>啦，首先看一下网站源码（此处只摘录了有用部分）：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--图床的选择--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bodyer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">\"checked\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1688\"</span>&gt;</span>阿里图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tieba\"</span>&gt;</span>百度图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"360\"</span>&gt;</span>360图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"taobao\"</span>&gt;</span>淘宝图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"smms\"</span>&gt;</span>SM.MS图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"sohu\"</span>&gt;</span>搜狐图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jd\"</span>&gt;</span>京东图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--图片的上传--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"keyword\">var</span> imagesUpload = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(files)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        a = $(<span class=\"string\">'input:radio:checked'</span>).val();</span></span><br><span class=\"line\"><span class=\"javascript\">        $(files).each(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key, value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">            setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">                uurrll = <span class=\"string\">'https://pic.suo.dog/api/tc.php?type='</span> + a + <span class=\"string\">'&amp;echo=imgurl'</span></span></span><br><span class=\"line\"><span class=\"actionscript\">                image_form = <span class=\"keyword\">new</span> FormData();</span></span><br><span class=\"line\"><span class=\"actionscript\">                image_form.append(<span class=\"string\">\"file\"</span>, value);</span></span><br><span class=\"line\"><span class=\"javascript\">                $.ajax(&#123;</span></span><br><span class=\"line\">                    url: uurrll,</span><br><span class=\"line\"><span class=\"actionscript\">                    type: <span class=\"string\">'POST'</span>,</span></span><br><span class=\"line\">                    data: image_form,</span><br><span class=\"line\"><span class=\"actionscript\">                    contentType: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">                    cache: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">                    processData: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">async</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">                    success: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(data)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">                        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> (data) == <span class=\"string\">'string'</span>) &#123;</span></span><br><span class=\"line\">                            imgurl = data</span><br><span class=\"line\"><span class=\"actionscript\">                        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\">                            imgurl = data.imgurl</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\"><span class=\"actionscript\">                    error: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(XMLResponse)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">                        alert(<span class=\"string\">\"error:\"</span> + XMLResponse.responseText);</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;, 100);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的代码还是很清楚的，用选择器获取当前选中<code>radio</code>的<code>value</code>，使用其拼接需要请求的<code>api</code>，接着用<code>ajax</code>将文件数据<code>post</code>到<code>api</code>，成功后返回图片的地址。</p>\n<h2 id=\"开始编写\"><a href=\"#开始编写\" class=\"headerlink\" title=\"开始编写\"></a>开始编写</h2><p>有了<code>api</code>，接下来就很简单了，基本思路就是：</p>\n<ol>\n<li>打开文件</li>\n<li>使用<code>requests</code>进行<code>post</code></li>\n<li>输出返回的图片<code>url</code></li>\n</ol>\n<hr>\n<p>使用了<code>requests</code>/<code>click</code>/<code>os</code>三个包。缺少的包可以使用<code>sudo pip install 包名</code>安装。</p>\n<p>首先将允许的图片文件拓展名和<code>api</code>地址设置为全局变量：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里列举了几种常见的图片格式，其它格式可以修改后自行测试</span></span><br><span class=\"line\">allowedExtension = [<span class=\"string\">'.jpeg'</span>, <span class=\"string\">'.bmp'</span>, <span class=\"string\">'.jpg'</span>, <span class=\"string\">'.png'</span>, <span class=\"string\">'.webp'</span>]</span><br><span class=\"line\">url = <span class=\"string\">''</span></span><br></pre></td></tr></table></figure>\n\n<p>接着使用<code>click</code>为<code>main</code>函数增加命令行参数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@click.command()</span></span><br><span class=\"line\"><span class=\"meta\">@click.option('--type', '-t', default='1688', type=click.Choice(['1688', 'tieba', '360', 'taobao', 'smms', 'sohu', 'jd']), help='image hosting service.')</span></span><br><span class=\"line\"><span class=\"meta\">@click.argument('paths', nargs=-1, type=click.Path(exists=True, readable=True))</span></span><br></pre></td></tr></table></figure>\n\n<p><code>--type/-t option</code>用于指定使用的图床，限制了图床的选择范围，默认使用阿里图床，<code>paths argument</code>接受多个路径参数，在此处保证了目录存在并可读。</p>\n<p>然后是<code>main</code>函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">(type, paths)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> url</span><br><span class=\"line\">    url = <span class=\"string\">'https://pic.suo.dog/api/tc.php?type=&#123;&#125;&amp;echo=imgurl'</span>.format(type)</span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\">    print(<span class=\"string\">'\\033[33m开始上传...\\033[0m'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> path <span class=\"keyword\">in</span> paths:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.isdir(path):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> path.endswith(<span class=\"string\">'/'</span>):</span><br><span class=\"line\">                path += <span class=\"string\">'/'</span></span><br><span class=\"line\">            items = os.listdir(path)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> os.path.isfile(path + item):</span><br><span class=\"line\">                    count += uploadFile(path + item)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            count += uploadFile(path)</span><br><span class=\"line\">    print(<span class=\"string\">'\\033[33m上传完成，共上传&#123;&#125;张图片!\\033[0m'</span>.format(count))</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>类似于<code>\\033[33m开始上传...\\033[0m</code>的格式是为了实现彩色输出，详情见<a href=\"https://www.liuhaolin.com/linux/318.html\" target=\"_blank\" rel=\"noopener\">该文章</a>。</p>\n</blockquote>\n<p>使用获取到的<code>type</code>组成<code>url</code>，使用<code>count</code>标记上传图片的张数，遍历所有的路径参数，如果该路径参数为目录，则尝试上传该目录的所有文件，如果该路径参数为文件，则直接尝试上传该文件。最后输出上传的图片张数。</p>\n<p>之后是核心的上传函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">uploadFile</span><span class=\"params\">(file)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.splitext(file)[<span class=\"number\">-1</span>] <span class=\"keyword\">in</span> allowedExtension:</span><br><span class=\"line\">        postContent = &#123;<span class=\"string\">'file'</span>: open(file, <span class=\"string\">'rb'</span>)&#125;</span><br><span class=\"line\">        <span class=\"keyword\">with</span> requests.post(url, files=postContent) <span class=\"keyword\">as</span> response:</span><br><span class=\"line\">            print(<span class=\"string\">'\\033[31m&#123;&#125;\\033[0m : \\033[4;32m&#123;&#125;\\033[0m'</span>.format(</span><br><span class=\"line\">                os.path.basename(file), response.text))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>判断拓展名是否允许，如果允许则将该文件用二进制打开，<code>post</code>给<code>api</code>，输出文件名和上传的地址，返回<code>1</code>，否则返回<code>0</code>。</p>\n<p>最后的内容就不用说了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用截图\"><a href=\"#使用截图\" class=\"headerlink\" title=\"使用截图\"></a>使用截图</h2><blockquote>\n<p>该截图同样使用该工具上传（使用<code>阿里图床/--type 1688</code>）</p>\n</blockquote>\n<p><img src=\"https://ae01.alicdn.com/kf/U7999450fd3164007a8ced5305332715ep.png\" alt=\"\"></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>啊，没想到这么几行代码居然能水这么长一篇文章！（滑稽</p>\n<p>目前<code>1688</code>图床可以正常使用，其它图床没有测试，如果有什么问题的话可以反馈给我。</p>\n","site":{"data":{}},"length":3229,"excerpt":"<p>昨天使用<a href=\"https://pic.suo.dog\" target=\"_blank\" rel=\"noopener\">缩狗图床</a><code>api</code>写了个<a href=\"https://github.com/jeasonlau/python-scripts/blob/master/imagehost.py\" target=\"_blank\" rel=\"noopener\">命令行图床上传工具</a>，支持指定使用的图床，支持单文件/多文件/多目录（非递归）上传。虽然代码很简单，但还是准备记录一下（因为想水篇文章XD</p>","more":"<h2 id=\"获取api\"><a href=\"#获取api\" class=\"headerlink\" title=\"获取api\"></a>获取api</h2><p>既然要使用<code>api</code>，当然要获取<code>api</code>啦，首先看一下网站源码（此处只摘录了有用部分）：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--图床的选择--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"bodyer\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">\"checked\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1688\"</span>&gt;</span>阿里图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"tieba\"</span>&gt;</span>百度图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"360\"</span>&gt;</span>360图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"taobao\"</span>&gt;</span>淘宝图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"smms\"</span>&gt;</span>SM.MS图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"sohu\"</span>&gt;</span>搜狐图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keke\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jd\"</span>&gt;</span>京东图床<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--图片的上传--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"keyword\">var</span> imagesUpload = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(files)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        a = $(<span class=\"string\">'input:radio:checked'</span>).val();</span></span><br><span class=\"line\"><span class=\"javascript\">        $(files).each(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">key, value</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">            setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">                uurrll = <span class=\"string\">'https://pic.suo.dog/api/tc.php?type='</span> + a + <span class=\"string\">'&amp;echo=imgurl'</span></span></span><br><span class=\"line\"><span class=\"actionscript\">                image_form = <span class=\"keyword\">new</span> FormData();</span></span><br><span class=\"line\"><span class=\"actionscript\">                image_form.append(<span class=\"string\">\"file\"</span>, value);</span></span><br><span class=\"line\"><span class=\"javascript\">                $.ajax(&#123;</span></span><br><span class=\"line\">                    url: uurrll,</span><br><span class=\"line\"><span class=\"actionscript\">                    type: <span class=\"string\">'POST'</span>,</span></span><br><span class=\"line\">                    data: image_form,</span><br><span class=\"line\"><span class=\"actionscript\">                    contentType: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">                    cache: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">                    processData: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">                    <span class=\"keyword\">async</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"actionscript\">                    success: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(data)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">                        <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> (data) == <span class=\"string\">'string'</span>) &#123;</span></span><br><span class=\"line\">                            imgurl = data</span><br><span class=\"line\"><span class=\"actionscript\">                        &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\">                            imgurl = data.imgurl</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\"><span class=\"actionscript\">                    error: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(XMLResponse)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">                        alert(<span class=\"string\">\"error:\"</span> + XMLResponse.responseText);</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;, 100);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的代码还是很清楚的，用选择器获取当前选中<code>radio</code>的<code>value</code>，使用其拼接需要请求的<code>api</code>，接着用<code>ajax</code>将文件数据<code>post</code>到<code>api</code>，成功后返回图片的地址。</p>\n<h2 id=\"开始编写\"><a href=\"#开始编写\" class=\"headerlink\" title=\"开始编写\"></a>开始编写</h2><p>有了<code>api</code>，接下来就很简单了，基本思路就是：</p>\n<ol>\n<li>打开文件</li>\n<li>使用<code>requests</code>进行<code>post</code></li>\n<li>输出返回的图片<code>url</code></li>\n</ol>\n<hr>\n<p>使用了<code>requests</code>/<code>click</code>/<code>os</code>三个包。缺少的包可以使用<code>sudo pip install 包名</code>安装。</p>\n<p>首先将允许的图片文件拓展名和<code>api</code>地址设置为全局变量：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里列举了几种常见的图片格式，其它格式可以修改后自行测试</span></span><br><span class=\"line\">allowedExtension = [<span class=\"string\">'.jpeg'</span>, <span class=\"string\">'.bmp'</span>, <span class=\"string\">'.jpg'</span>, <span class=\"string\">'.png'</span>, <span class=\"string\">'.webp'</span>]</span><br><span class=\"line\">url = <span class=\"string\">''</span></span><br></pre></td></tr></table></figure>\n\n<p>接着使用<code>click</code>为<code>main</code>函数增加命令行参数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@click.command()</span></span><br><span class=\"line\"><span class=\"meta\">@click.option('--type', '-t', default='1688', type=click.Choice(['1688', 'tieba', '360', 'taobao', 'smms', 'sohu', 'jd']), help='image hosting service.')</span></span><br><span class=\"line\"><span class=\"meta\">@click.argument('paths', nargs=-1, type=click.Path(exists=True, readable=True))</span></span><br></pre></td></tr></table></figure>\n\n<p><code>--type/-t option</code>用于指定使用的图床，限制了图床的选择范围，默认使用阿里图床，<code>paths argument</code>接受多个路径参数，在此处保证了目录存在并可读。</p>\n<p>然后是<code>main</code>函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">(type, paths)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> url</span><br><span class=\"line\">    url = <span class=\"string\">'https://pic.suo.dog/api/tc.php?type=&#123;&#125;&amp;echo=imgurl'</span>.format(type)</span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\">    print(<span class=\"string\">'\\033[33m开始上传...\\033[0m'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> path <span class=\"keyword\">in</span> paths:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.isdir(path):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> path.endswith(<span class=\"string\">'/'</span>):</span><br><span class=\"line\">                path += <span class=\"string\">'/'</span></span><br><span class=\"line\">            items = os.listdir(path)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> os.path.isfile(path + item):</span><br><span class=\"line\">                    count += uploadFile(path + item)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            count += uploadFile(path)</span><br><span class=\"line\">    print(<span class=\"string\">'\\033[33m上传完成，共上传&#123;&#125;张图片!\\033[0m'</span>.format(count))</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>类似于<code>\\033[33m开始上传...\\033[0m</code>的格式是为了实现彩色输出，详情见<a href=\"https://www.liuhaolin.com/linux/318.html\" target=\"_blank\" rel=\"noopener\">该文章</a>。</p>\n</blockquote>\n<p>使用获取到的<code>type</code>组成<code>url</code>，使用<code>count</code>标记上传图片的张数，遍历所有的路径参数，如果该路径参数为目录，则尝试上传该目录的所有文件，如果该路径参数为文件，则直接尝试上传该文件。最后输出上传的图片张数。</p>\n<p>之后是核心的上传函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">uploadFile</span><span class=\"params\">(file)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.splitext(file)[<span class=\"number\">-1</span>] <span class=\"keyword\">in</span> allowedExtension:</span><br><span class=\"line\">        postContent = &#123;<span class=\"string\">'file'</span>: open(file, <span class=\"string\">'rb'</span>)&#125;</span><br><span class=\"line\">        <span class=\"keyword\">with</span> requests.post(url, files=postContent) <span class=\"keyword\">as</span> response:</span><br><span class=\"line\">            print(<span class=\"string\">'\\033[31m&#123;&#125;\\033[0m : \\033[4;32m&#123;&#125;\\033[0m'</span>.format(</span><br><span class=\"line\">                os.path.basename(file), response.text))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>判断拓展名是否允许，如果允许则将该文件用二进制打开，<code>post</code>给<code>api</code>，输出文件名和上传的地址，返回<code>1</code>，否则返回<code>0</code>。</p>\n<p>最后的内容就不用说了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用截图\"><a href=\"#使用截图\" class=\"headerlink\" title=\"使用截图\"></a>使用截图</h2><blockquote>\n<p>该截图同样使用该工具上传（使用<code>阿里图床/--type 1688</code>）</p>\n</blockquote>\n<p><img src=\"https://ae01.alicdn.com/kf/U7999450fd3164007a8ced5305332715ep.png\" alt=\"\"></p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>啊，没想到这么几行代码居然能水这么长一篇文章！（滑稽</p>\n<p>目前<code>1688</code>图床可以正常使用，其它图床没有测试，如果有什么问题的话可以反馈给我。</p>"},{"title":"从oh my zsh到oh my fish","date":"2020-02-29T13:32:44.000Z","_content":"\n> 为什么今天连发两篇文章呢？大概是想纪念一下四年一度的`2.29`吧（笑\n\n## 起因\n\n众所周知，`shell`有很多种，其中最常用的有`bash`和`zsh`，而`oh my zsh`是基于`zsh`的一个拓展工具集，自从接触`linux`，我一直在使用`zsh & oh my zsh`。它易用，易拓展，但也有一个很大的缺点：**太！慢！了！**\n\n<!--more-->\n\n想象你需要打开`terminal`切换到`blog`路径，运行`terminal`的瞬间，你开始输入命令，你希望看到的结果：\n\n```bash\n~\n⟩ j blog\n/home/jeasonlau/File/blog\n\n~/File/blog\n⟩ \n```\n\n但实际的结果却是：\n\n```bash\nj ~\n⟩ blog\nunknown command : blog\n\n~\n⟩ \n```\n\n惊不惊喜？意不意外？\n\n在多次遭遇这种状况后，我实在无法忍受，开始了更换`shell`之路...\n\n## 更换\n\n曾经也听说过另一款著名的`shell`：`fish`。在`NEU lug`群里吐槽`zsh`慢的时候，意外发现几位群友都在使用`fish`，于是决定更换。\n\n搜索`fish`文档，发现`arch`系发行版可以直接安装，于是\n\n```bash\nsudo pacman -S fish\n```\n\n安装成功之后，使用\n\n```bash\nchsh -s /usr/local/bin/fish\n```\n\n将默认`shell`更换为`fish`。体验一番后感觉确实比`zsh`快了不少，同时原生支持命令高亮、命令建议等功能，不需要自己去手动配置，可以说是开箱即用了。\n\n## 主题\n\n更换成功之后，更重要的任务是**换主题**！秉持着***(命令行不花里胡哨怎么行！)***的基本原则，我开始搜索`fish`的主题推荐，虽然没有找到什么结果，但让我发现了另一个东西：`oh my fish`。\n\n它是一个类似`oh my zsh`的，对`fish shell`进行拓展的工具，具体来说包括插件和主题，于是参考文档进行安装：\n\n```bash\ncurl -L https://get.oh-my.fish | fish\n```\n\n安装完成之后就可以在[available themes](https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md)里进行挑选啦，找到心仪的主题后只需要执行\n\n```bash\nomf install <theme name>\n```\n\n即可成功安装。\n\n----\n\n把全部主题看了一遍，顺便做一下主题推荐吧。\n\n我个人喜欢的有四款：\n\n1. `pure（慎用）`\n\n   该主题是我在`zsh`上使用的主题，也被移植到了`fish`上，但试用后发现其兼容并不好，总会出一些奇奇怪怪的问题，但因为日久生情，还是将其排在第一位吧。\n\n   ![](https://ae01.alicdn.com/kf/Uffbe1e0148da4a60918f93b724af2118b.png)\n\n   ![](https://ae01.alicdn.com/kf/Uffba5466130345d599327838d73fe6b4l.png)\n\n2. `clearance`\n\n   另一款极简主题，实际使用效果和`pure`相差不多，只是截图显得比较丑。\n\n   ![](https://ae01.alicdn.com/kf/U9c08dad4f1164f7aa192bd5699a2eca11.png)\n\n3. `tomita`\n\n   截图很好看，但默认颜色与截图有部分不同，同时因为鱼标的颜色默认为浅黄，对亮色背景不够友好。（当然也可以自行修改配置文件来修改颜色）\n\n   ![](https://ae01.alicdn.com/kf/U123f29408c5d44598b334cb4310963cfJ.png)\n\n   ![](https://ae01.alicdn.com/kf/Ub3e547843155426f8e4608bc629573dcm.png)\n\n4. `nai`\n\n   如果上面的是极简，这个就是极度极简，但麻雀虽小五脏俱全，简简单单反而有种别样的魅力。\n\n   ![](https://ae01.alicdn.com/kf/U40b5e261943c40aea3e811765095aaf4s.png)\n\n","source":"_posts/zshToFish.md","raw":"---\ntitle: 从oh my zsh到oh my fish\ndate: 2020-02-29 21:32:44\ntags: [manjaro,linux]\ncategories: 系统优化\n---\n\n> 为什么今天连发两篇文章呢？大概是想纪念一下四年一度的`2.29`吧（笑\n\n## 起因\n\n众所周知，`shell`有很多种，其中最常用的有`bash`和`zsh`，而`oh my zsh`是基于`zsh`的一个拓展工具集，自从接触`linux`，我一直在使用`zsh & oh my zsh`。它易用，易拓展，但也有一个很大的缺点：**太！慢！了！**\n\n<!--more-->\n\n想象你需要打开`terminal`切换到`blog`路径，运行`terminal`的瞬间，你开始输入命令，你希望看到的结果：\n\n```bash\n~\n⟩ j blog\n/home/jeasonlau/File/blog\n\n~/File/blog\n⟩ \n```\n\n但实际的结果却是：\n\n```bash\nj ~\n⟩ blog\nunknown command : blog\n\n~\n⟩ \n```\n\n惊不惊喜？意不意外？\n\n在多次遭遇这种状况后，我实在无法忍受，开始了更换`shell`之路...\n\n## 更换\n\n曾经也听说过另一款著名的`shell`：`fish`。在`NEU lug`群里吐槽`zsh`慢的时候，意外发现几位群友都在使用`fish`，于是决定更换。\n\n搜索`fish`文档，发现`arch`系发行版可以直接安装，于是\n\n```bash\nsudo pacman -S fish\n```\n\n安装成功之后，使用\n\n```bash\nchsh -s /usr/local/bin/fish\n```\n\n将默认`shell`更换为`fish`。体验一番后感觉确实比`zsh`快了不少，同时原生支持命令高亮、命令建议等功能，不需要自己去手动配置，可以说是开箱即用了。\n\n## 主题\n\n更换成功之后，更重要的任务是**换主题**！秉持着***(命令行不花里胡哨怎么行！)***的基本原则，我开始搜索`fish`的主题推荐，虽然没有找到什么结果，但让我发现了另一个东西：`oh my fish`。\n\n它是一个类似`oh my zsh`的，对`fish shell`进行拓展的工具，具体来说包括插件和主题，于是参考文档进行安装：\n\n```bash\ncurl -L https://get.oh-my.fish | fish\n```\n\n安装完成之后就可以在[available themes](https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md)里进行挑选啦，找到心仪的主题后只需要执行\n\n```bash\nomf install <theme name>\n```\n\n即可成功安装。\n\n----\n\n把全部主题看了一遍，顺便做一下主题推荐吧。\n\n我个人喜欢的有四款：\n\n1. `pure（慎用）`\n\n   该主题是我在`zsh`上使用的主题，也被移植到了`fish`上，但试用后发现其兼容并不好，总会出一些奇奇怪怪的问题，但因为日久生情，还是将其排在第一位吧。\n\n   ![](https://ae01.alicdn.com/kf/Uffbe1e0148da4a60918f93b724af2118b.png)\n\n   ![](https://ae01.alicdn.com/kf/Uffba5466130345d599327838d73fe6b4l.png)\n\n2. `clearance`\n\n   另一款极简主题，实际使用效果和`pure`相差不多，只是截图显得比较丑。\n\n   ![](https://ae01.alicdn.com/kf/U9c08dad4f1164f7aa192bd5699a2eca11.png)\n\n3. `tomita`\n\n   截图很好看，但默认颜色与截图有部分不同，同时因为鱼标的颜色默认为浅黄，对亮色背景不够友好。（当然也可以自行修改配置文件来修改颜色）\n\n   ![](https://ae01.alicdn.com/kf/U123f29408c5d44598b334cb4310963cfJ.png)\n\n   ![](https://ae01.alicdn.com/kf/Ub3e547843155426f8e4608bc629573dcm.png)\n\n4. `nai`\n\n   如果上面的是极简，这个就是极度极简，但麻雀虽小五脏俱全，简简单单反而有种别样的魅力。\n\n   ![](https://ae01.alicdn.com/kf/U40b5e261943c40aea3e811765095aaf4s.png)\n\n","slug":"zshToFish","published":1,"updated":"2020-02-29T14:49:19.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp0i000fhpz66io50qrt","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><blockquote>\n<p>为什么今天连发两篇文章呢？大概是想纪念一下四年一度的<code>2.29</code>吧（笑</p>\n</blockquote>\n<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>众所周知，<code>shell</code>有很多种，其中最常用的有<code>bash</code>和<code>zsh</code>，而<code>oh my zsh</code>是基于<code>zsh</code>的一个拓展工具集，自从接触<code>linux</code>，我一直在使用<code>zsh &amp; oh my zsh</code>。它易用，易拓展，但也有一个很大的缺点：<strong>太！慢！了！</strong></p>\n<a id=\"more\"></a>\n\n<p>想象你需要打开<code>terminal</code>切换到<code>blog</code>路径，运行<code>terminal</code>的瞬间，你开始输入命令，你希望看到的结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~</span><br><span class=\"line\">⟩ j blog</span><br><span class=\"line\">/home/jeasonlau/File/blog</span><br><span class=\"line\"></span><br><span class=\"line\">~/File/blog</span><br><span class=\"line\">⟩</span><br></pre></td></tr></table></figure>\n\n<p>但实际的结果却是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">j ~</span><br><span class=\"line\">⟩ blog</span><br><span class=\"line\">unknown <span class=\"built_in\">command</span> : blog</span><br><span class=\"line\"></span><br><span class=\"line\">~</span><br><span class=\"line\">⟩</span><br></pre></td></tr></table></figure>\n\n<p>惊不惊喜？意不意外？</p>\n<p>在多次遭遇这种状况后，我实在无法忍受，开始了更换<code>shell</code>之路…</p>\n<h2 id=\"更换\"><a href=\"#更换\" class=\"headerlink\" title=\"更换\"></a>更换</h2><p>曾经也听说过另一款著名的<code>shell</code>：<code>fish</code>。在<code>NEU lug</code>群里吐槽<code>zsh</code>慢的时候，意外发现几位群友都在使用<code>fish</code>，于是决定更换。</p>\n<p>搜索<code>fish</code>文档，发现<code>arch</code>系发行版可以直接安装，于是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -S fish</span><br></pre></td></tr></table></figure>\n\n<p>安装成功之后，使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chsh -s /usr/<span class=\"built_in\">local</span>/bin/fish</span><br></pre></td></tr></table></figure>\n\n<p>将默认<code>shell</code>更换为<code>fish</code>。体验一番后感觉确实比<code>zsh</code>快了不少，同时原生支持命令高亮、命令建议等功能，不需要自己去手动配置，可以说是开箱即用了。</p>\n<h2 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h2><p>更换成功之后，更重要的任务是<strong>换主题</strong>！秉持着<strong><em>(命令行不花里胡哨怎么行！)</em></strong>的基本原则，我开始搜索<code>fish</code>的主题推荐，虽然没有找到什么结果，但让我发现了另一个东西：<code>oh my fish</code>。</p>\n<p>它是一个类似<code>oh my zsh</code>的，对<code>fish shell</code>进行拓展的工具，具体来说包括插件和主题，于是参考文档进行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://get.oh-my.fish | fish</span><br></pre></td></tr></table></figure>\n\n<p>安装完成之后就可以在<a href=\"https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md\" target=\"_blank\" rel=\"noopener\">available themes</a>里进行挑选啦，找到心仪的主题后只需要执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">omf install &lt;theme name&gt;</span><br></pre></td></tr></table></figure>\n\n<p>即可成功安装。</p>\n<hr>\n<p>把全部主题看了一遍，顺便做一下主题推荐吧。</p>\n<p>我个人喜欢的有四款：</p>\n<ol>\n<li><p><code>pure（慎用）</code></p>\n<p>该主题是我在<code>zsh</code>上使用的主题，也被移植到了<code>fish</code>上，但试用后发现其兼容并不好，总会出一些奇奇怪怪的问题，但因为日久生情，还是将其排在第一位吧。</p>\n<p><img src=\"https://ae01.alicdn.com/kf/Uffbe1e0148da4a60918f93b724af2118b.png\" alt=\"\"></p>\n<p><img src=\"https://ae01.alicdn.com/kf/Uffba5466130345d599327838d73fe6b4l.png\" alt=\"\"></p>\n</li>\n<li><p><code>clearance</code></p>\n<p>另一款极简主题，实际使用效果和<code>pure</code>相差不多，只是截图显得比较丑。</p>\n<p><img src=\"https://ae01.alicdn.com/kf/U9c08dad4f1164f7aa192bd5699a2eca11.png\" alt=\"\"></p>\n</li>\n<li><p><code>tomita</code></p>\n<p>截图很好看，但默认颜色与截图有部分不同，同时因为鱼标的颜色默认为浅黄，对亮色背景不够友好。（当然也可以自行修改配置文件来修改颜色）</p>\n<p><img src=\"https://ae01.alicdn.com/kf/U123f29408c5d44598b334cb4310963cfJ.png\" alt=\"\"></p>\n<p><img src=\"https://ae01.alicdn.com/kf/Ub3e547843155426f8e4608bc629573dcm.png\" alt=\"\"></p>\n</li>\n<li><p><code>nai</code></p>\n<p>如果上面的是极简，这个就是极度极简，但麻雀虽小五脏俱全，简简单单反而有种别样的魅力。</p>\n<p><img src=\"https://ae01.alicdn.com/kf/U40b5e261943c40aea3e811765095aaf4s.png\" alt=\"\"></p>\n</li>\n</ol>\n","site":{"data":{}},"length":1090,"excerpt":"<blockquote>\n<p>为什么今天连发两篇文章呢？大概是想纪念一下四年一度的<code>2.29</code>吧（笑</p>\n</blockquote>\n<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>众所周知，<code>shell</code>有很多种，其中最常用的有<code>bash</code>和<code>zsh</code>，而<code>oh my zsh</code>是基于<code>zsh</code>的一个拓展工具集，自从接触<code>linux</code>，我一直在使用<code>zsh &amp; oh my zsh</code>。它易用，易拓展，但也有一个很大的缺点：<strong>太！慢！了！</strong></p>","more":"<p>想象你需要打开<code>terminal</code>切换到<code>blog</code>路径，运行<code>terminal</code>的瞬间，你开始输入命令，你希望看到的结果：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~</span><br><span class=\"line\">⟩ j blog</span><br><span class=\"line\">/home/jeasonlau/File/blog</span><br><span class=\"line\"></span><br><span class=\"line\">~/File/blog</span><br><span class=\"line\">⟩</span><br></pre></td></tr></table></figure>\n\n<p>但实际的结果却是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">j ~</span><br><span class=\"line\">⟩ blog</span><br><span class=\"line\">unknown <span class=\"built_in\">command</span> : blog</span><br><span class=\"line\"></span><br><span class=\"line\">~</span><br><span class=\"line\">⟩</span><br></pre></td></tr></table></figure>\n\n<p>惊不惊喜？意不意外？</p>\n<p>在多次遭遇这种状况后，我实在无法忍受，开始了更换<code>shell</code>之路…</p>\n<h2 id=\"更换\"><a href=\"#更换\" class=\"headerlink\" title=\"更换\"></a>更换</h2><p>曾经也听说过另一款著名的<code>shell</code>：<code>fish</code>。在<code>NEU lug</code>群里吐槽<code>zsh</code>慢的时候，意外发现几位群友都在使用<code>fish</code>，于是决定更换。</p>\n<p>搜索<code>fish</code>文档，发现<code>arch</code>系发行版可以直接安装，于是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pacman -S fish</span><br></pre></td></tr></table></figure>\n\n<p>安装成功之后，使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chsh -s /usr/<span class=\"built_in\">local</span>/bin/fish</span><br></pre></td></tr></table></figure>\n\n<p>将默认<code>shell</code>更换为<code>fish</code>。体验一番后感觉确实比<code>zsh</code>快了不少，同时原生支持命令高亮、命令建议等功能，不需要自己去手动配置，可以说是开箱即用了。</p>\n<h2 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h2><p>更换成功之后，更重要的任务是<strong>换主题</strong>！秉持着<strong><em>(命令行不花里胡哨怎么行！)</em></strong>的基本原则，我开始搜索<code>fish</code>的主题推荐，虽然没有找到什么结果，但让我发现了另一个东西：<code>oh my fish</code>。</p>\n<p>它是一个类似<code>oh my zsh</code>的，对<code>fish shell</code>进行拓展的工具，具体来说包括插件和主题，于是参考文档进行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://get.oh-my.fish | fish</span><br></pre></td></tr></table></figure>\n\n<p>安装完成之后就可以在<a href=\"https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/Themes.md\" target=\"_blank\" rel=\"noopener\">available themes</a>里进行挑选啦，找到心仪的主题后只需要执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">omf install &lt;theme name&gt;</span><br></pre></td></tr></table></figure>\n\n<p>即可成功安装。</p>\n<hr>\n<p>把全部主题看了一遍，顺便做一下主题推荐吧。</p>\n<p>我个人喜欢的有四款：</p>\n<ol>\n<li><p><code>pure（慎用）</code></p>\n<p>该主题是我在<code>zsh</code>上使用的主题，也被移植到了<code>fish</code>上，但试用后发现其兼容并不好，总会出一些奇奇怪怪的问题，但因为日久生情，还是将其排在第一位吧。</p>\n<p><img src=\"https://ae01.alicdn.com/kf/Uffbe1e0148da4a60918f93b724af2118b.png\" alt=\"\"></p>\n<p><img src=\"https://ae01.alicdn.com/kf/Uffba5466130345d599327838d73fe6b4l.png\" alt=\"\"></p>\n</li>\n<li><p><code>clearance</code></p>\n<p>另一款极简主题，实际使用效果和<code>pure</code>相差不多，只是截图显得比较丑。</p>\n<p><img src=\"https://ae01.alicdn.com/kf/U9c08dad4f1164f7aa192bd5699a2eca11.png\" alt=\"\"></p>\n</li>\n<li><p><code>tomita</code></p>\n<p>截图很好看，但默认颜色与截图有部分不同，同时因为鱼标的颜色默认为浅黄，对亮色背景不够友好。（当然也可以自行修改配置文件来修改颜色）</p>\n<p><img src=\"https://ae01.alicdn.com/kf/U123f29408c5d44598b334cb4310963cfJ.png\" alt=\"\"></p>\n<p><img src=\"https://ae01.alicdn.com/kf/Ub3e547843155426f8e4608bc629573dcm.png\" alt=\"\"></p>\n</li>\n<li><p><code>nai</code></p>\n<p>如果上面的是极简，这个就是极度极简，但麻雀虽小五脏俱全，简简单单反而有种别样的魅力。</p>\n<p><img src=\"https://ae01.alicdn.com/kf/U40b5e261943c40aea3e811765095aaf4s.png\" alt=\"\"></p>\n</li>\n</ol>"},{"title":"大二下学期即将开始啦！","date":"2020-02-23T08:52:32.000Z","_content":"\n又是好长一段时间过去了！\n\n这些天因为病毒侵袭一直宅在家里。浑浑噩噩地度过了难熬的寒假，总算是盼来了新学期！（不是\n\n<!-- more -->\n\n## 课表\n\n说到新学期，第一想到的当然是新课表啦。下面是我的课表：\n\n![001](https://ae01.alicdn.com/kf/Uc817f89b152e4fbb992f5bc4393315d5Z.jpg)\n\n![002](https://ae01.alicdn.com/kf/U1ab61388accb44c39821eca932368448Y.jpg)\n\n## 授课\n\n因为病毒的影响，前几周只能老老实实在家里上网课了。大概就是这些，目前还有几门课没有通知，先不管啦...\n\n| 科目               | 授课方式                | 具体内容   | 备注                                             |\n| ------------------ | ----------------------- | ---------- | ------------------------------------------------ |\n| 人工智能           | MOOC+BB+QQ群            | 参见BB平台 | 无                                               |\n| 数字逻辑与数字系统 | 雨课堂直播+MOOC+BB+QQ群 | 参见BB平台 | 需要提前安装Altera Quartus 13.1或更高版本        |\n| 算法设计与分析     | 未知                    | 无         | 无                                               |\n| 汇编语言程序设计   | BB+QQ群                 | 参见BB平台 | 记得按时提交作业（平时成绩50分，作业占很大比例） |\n| 编译原理           | 未知                    | 无         | 无                                               |\n| 形势与政策         | 优课堂                  | 无         | 作业要写2000字时事评论（纸版），返校后上交       |\n| 思想政治理论实践课 | 未知                    | 无         | 无                                               |\n| 体育（羽毛球）     | MOOC+体适能训练         | 无         | MOOC为《八法五步拳》                             |\n\n## 最后\n\n明天就要上课了，就目前来看，网课属实不大方便。一方面老师需要花费额外时间熟悉平台使用，另一方面，学生们需要时刻关注这些平台，平台过于分散也给学生们带来了很大的困扰。\n\n希望疫情快快结束，大家能尽快回归到自己的日常生活吧。","source":"_posts/newTerm.md","raw":"---\ntitle: 大二下学期即将开始啦！\ndate: 2020-02-23 16:52:32\ntags: study\ncategories: 生活点滴\n---\n\n又是好长一段时间过去了！\n\n这些天因为病毒侵袭一直宅在家里。浑浑噩噩地度过了难熬的寒假，总算是盼来了新学期！（不是\n\n<!-- more -->\n\n## 课表\n\n说到新学期，第一想到的当然是新课表啦。下面是我的课表：\n\n![001](https://ae01.alicdn.com/kf/Uc817f89b152e4fbb992f5bc4393315d5Z.jpg)\n\n![002](https://ae01.alicdn.com/kf/U1ab61388accb44c39821eca932368448Y.jpg)\n\n## 授课\n\n因为病毒的影响，前几周只能老老实实在家里上网课了。大概就是这些，目前还有几门课没有通知，先不管啦...\n\n| 科目               | 授课方式                | 具体内容   | 备注                                             |\n| ------------------ | ----------------------- | ---------- | ------------------------------------------------ |\n| 人工智能           | MOOC+BB+QQ群            | 参见BB平台 | 无                                               |\n| 数字逻辑与数字系统 | 雨课堂直播+MOOC+BB+QQ群 | 参见BB平台 | 需要提前安装Altera Quartus 13.1或更高版本        |\n| 算法设计与分析     | 未知                    | 无         | 无                                               |\n| 汇编语言程序设计   | BB+QQ群                 | 参见BB平台 | 记得按时提交作业（平时成绩50分，作业占很大比例） |\n| 编译原理           | 未知                    | 无         | 无                                               |\n| 形势与政策         | 优课堂                  | 无         | 作业要写2000字时事评论（纸版），返校后上交       |\n| 思想政治理论实践课 | 未知                    | 无         | 无                                               |\n| 体育（羽毛球）     | MOOC+体适能训练         | 无         | MOOC为《八法五步拳》                             |\n\n## 最后\n\n明天就要上课了，就目前来看，网课属实不大方便。一方面老师需要花费额外时间熟悉平台使用，另一方面，学生们需要时刻关注这些平台，平台过于分散也给学生们带来了很大的困扰。\n\n希望疫情快快结束，大家能尽快回归到自己的日常生活吧。","slug":"newTerm","published":1,"updated":"2020-03-02T10:58:48.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp0p000jhpz60qyhfpuj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>又是好长一段时间过去了！</p>\n<p>这些天因为病毒侵袭一直宅在家里。浑浑噩噩地度过了难熬的寒假，总算是盼来了新学期！（不是</p>\n<a id=\"more\"></a>\n\n<h2 id=\"课表\"><a href=\"#课表\" class=\"headerlink\" title=\"课表\"></a>课表</h2><p>说到新学期，第一想到的当然是新课表啦。下面是我的课表：</p>\n<p><img src=\"https://ae01.alicdn.com/kf/Uc817f89b152e4fbb992f5bc4393315d5Z.jpg\" alt=\"001\"></p>\n<p><img src=\"https://ae01.alicdn.com/kf/U1ab61388accb44c39821eca932368448Y.jpg\" alt=\"002\"></p>\n<h2 id=\"授课\"><a href=\"#授课\" class=\"headerlink\" title=\"授课\"></a>授课</h2><p>因为病毒的影响，前几周只能老老实实在家里上网课了。大概就是这些，目前还有几门课没有通知，先不管啦…</p>\n<table>\n<thead>\n<tr>\n<th>科目</th>\n<th>授课方式</th>\n<th>具体内容</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>人工智能</td>\n<td>MOOC+BB+QQ群</td>\n<td>参见BB平台</td>\n<td>无</td>\n</tr>\n<tr>\n<td>数字逻辑与数字系统</td>\n<td>雨课堂直播+MOOC+BB+QQ群</td>\n<td>参见BB平台</td>\n<td>需要提前安装Altera Quartus 13.1或更高版本</td>\n</tr>\n<tr>\n<td>算法设计与分析</td>\n<td>未知</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>汇编语言程序设计</td>\n<td>BB+QQ群</td>\n<td>参见BB平台</td>\n<td>记得按时提交作业（平时成绩50分，作业占很大比例）</td>\n</tr>\n<tr>\n<td>编译原理</td>\n<td>未知</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>形势与政策</td>\n<td>优课堂</td>\n<td>无</td>\n<td>作业要写2000字时事评论（纸版），返校后上交</td>\n</tr>\n<tr>\n<td>思想政治理论实践课</td>\n<td>未知</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>体育（羽毛球）</td>\n<td>MOOC+体适能训练</td>\n<td>无</td>\n<td>MOOC为《八法五步拳》</td>\n</tr>\n</tbody></table>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>明天就要上课了，就目前来看，网课属实不大方便。一方面老师需要花费额外时间熟悉平台使用，另一方面，学生们需要时刻关注这些平台，平台过于分散也给学生们带来了很大的困扰。</p>\n<p>希望疫情快快结束，大家能尽快回归到自己的日常生活吧。</p>\n","site":{"data":{}},"length":478,"excerpt":"<p>又是好长一段时间过去了！</p>\n<p>这些天因为病毒侵袭一直宅在家里。浑浑噩噩地度过了难熬的寒假，总算是盼来了新学期！（不是</p>","more":"<h2 id=\"课表\"><a href=\"#课表\" class=\"headerlink\" title=\"课表\"></a>课表</h2><p>说到新学期，第一想到的当然是新课表啦。下面是我的课表：</p>\n<p><img src=\"https://ae01.alicdn.com/kf/Uc817f89b152e4fbb992f5bc4393315d5Z.jpg\" alt=\"001\"></p>\n<p><img src=\"https://ae01.alicdn.com/kf/U1ab61388accb44c39821eca932368448Y.jpg\" alt=\"002\"></p>\n<h2 id=\"授课\"><a href=\"#授课\" class=\"headerlink\" title=\"授课\"></a>授课</h2><p>因为病毒的影响，前几周只能老老实实在家里上网课了。大概就是这些，目前还有几门课没有通知，先不管啦…</p>\n<table>\n<thead>\n<tr>\n<th>科目</th>\n<th>授课方式</th>\n<th>具体内容</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>人工智能</td>\n<td>MOOC+BB+QQ群</td>\n<td>参见BB平台</td>\n<td>无</td>\n</tr>\n<tr>\n<td>数字逻辑与数字系统</td>\n<td>雨课堂直播+MOOC+BB+QQ群</td>\n<td>参见BB平台</td>\n<td>需要提前安装Altera Quartus 13.1或更高版本</td>\n</tr>\n<tr>\n<td>算法设计与分析</td>\n<td>未知</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>汇编语言程序设计</td>\n<td>BB+QQ群</td>\n<td>参见BB平台</td>\n<td>记得按时提交作业（平时成绩50分，作业占很大比例）</td>\n</tr>\n<tr>\n<td>编译原理</td>\n<td>未知</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>形势与政策</td>\n<td>优课堂</td>\n<td>无</td>\n<td>作业要写2000字时事评论（纸版），返校后上交</td>\n</tr>\n<tr>\n<td>思想政治理论实践课</td>\n<td>未知</td>\n<td>无</td>\n<td>无</td>\n</tr>\n<tr>\n<td>体育（羽毛球）</td>\n<td>MOOC+体适能训练</td>\n<td>无</td>\n<td>MOOC为《八法五步拳》</td>\n</tr>\n</tbody></table>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>明天就要上课了，就目前来看，网课属实不大方便。一方面老师需要花费额外时间熟悉平台使用，另一方面，学生们需要时刻关注这些平台，平台过于分散也给学生们带来了很大的困扰。</p>\n<p>希望疫情快快结束，大家能尽快回归到自己的日常生活吧。</p>"},{"title":"RSSHub+Bot实现RSS订阅","date":"2020-02-04T13:39:23.000Z","_content":"\n最近开始使用`RSS`，真的是**high到不行**！\n\n## 定义\n\n什么是`RSS`？引用维基百科上的定义：\n\n> **RSS**（**简易信息聚合**）是一种消息来源格式规范，用以**聚合经常发布更新数据的网站**，例如博客文章、新闻、音频或视频的网摘。RSS文件（或称做摘要、网络摘要、或频更新，提供到频道）包含全文或是节录的文字，再加上发布者所订阅之网摘数据和授权的元数据。\n\n在这个信息碎片化的时代，兴趣算法大行其道，我们逐渐失去了自己选择信息的权力。如果你也像我一样对此感到厌倦，也许回归`RSS`会是个更好的选择。`RSS`能让你自由地订阅信息来源，可以避免无关信息的干扰，节省你宝贵的时间。\n\n<!--more-->\n\n## 使用\n\n使用`RSS`，你需要可订阅的源和RSS阅读器。\n\n1. 订阅源\n\n   很遗憾，现如今很多网站都没有对`RSS`提供支持，这里就要提到[DIYgod](https://github.com/diygod)大佬发起的项目[RSSHub](https://github.com/DIYgod/RSSHub)了。\n\n   > RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容。\n   \n   用户可以选择使用`RSSHub`官方的`demo`，或者选择自行部署，具体请参阅[文档](https://docs.rsshub.app/)。\n\n2. 阅读器\n\n   同理，现如今优秀的RSS阅读器也如凤毛麟角，具体到`linux`平台更是少之又少，我试用了很多款都没有找到满意的。于是转变思路选择了`telegram bot`，原因主要有两点：\n\n   + **可以多平台使用**\n\n   + **可以实时更新**\n\n   \n\n去查找相关教程，发现了`go`实现的[`flowerss-bot`](https://github.com/indes/flowerss-bot)，同样支持使用`demo`或自行部署，但试用后发现其`demo`更新频率很低，于是转而手动部署（顺便还能利用上我的闲置服务器）。\n\n## 截图\n\n> 体验：订阅肺炎辟谣网站，还没听到谣言就收到了辟谣推送 (๑•̀ㅂ•́)و✧\n\n使用截图：\n\n![帮助](https://img.vim-cn.com/20/7cfc5776d8cd86c0372009dd0b846715a3384b.png)\n\n![推送](https://img.vim-cn.com/09/ab2658f7df2c569c273eadeb58d885817d21a2.png)","source":"_posts/yourRssBot.md","raw":"---\ntitle: RSSHub+Bot实现RSS订阅\ndate: 2020-02-04 21:39:23\ntags: [rss]\ncategories: 便捷使用\n---\n\n最近开始使用`RSS`，真的是**high到不行**！\n\n## 定义\n\n什么是`RSS`？引用维基百科上的定义：\n\n> **RSS**（**简易信息聚合**）是一种消息来源格式规范，用以**聚合经常发布更新数据的网站**，例如博客文章、新闻、音频或视频的网摘。RSS文件（或称做摘要、网络摘要、或频更新，提供到频道）包含全文或是节录的文字，再加上发布者所订阅之网摘数据和授权的元数据。\n\n在这个信息碎片化的时代，兴趣算法大行其道，我们逐渐失去了自己选择信息的权力。如果你也像我一样对此感到厌倦，也许回归`RSS`会是个更好的选择。`RSS`能让你自由地订阅信息来源，可以避免无关信息的干扰，节省你宝贵的时间。\n\n<!--more-->\n\n## 使用\n\n使用`RSS`，你需要可订阅的源和RSS阅读器。\n\n1. 订阅源\n\n   很遗憾，现如今很多网站都没有对`RSS`提供支持，这里就要提到[DIYgod](https://github.com/diygod)大佬发起的项目[RSSHub](https://github.com/DIYgod/RSSHub)了。\n\n   > RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容。\n   \n   用户可以选择使用`RSSHub`官方的`demo`，或者选择自行部署，具体请参阅[文档](https://docs.rsshub.app/)。\n\n2. 阅读器\n\n   同理，现如今优秀的RSS阅读器也如凤毛麟角，具体到`linux`平台更是少之又少，我试用了很多款都没有找到满意的。于是转变思路选择了`telegram bot`，原因主要有两点：\n\n   + **可以多平台使用**\n\n   + **可以实时更新**\n\n   \n\n去查找相关教程，发现了`go`实现的[`flowerss-bot`](https://github.com/indes/flowerss-bot)，同样支持使用`demo`或自行部署，但试用后发现其`demo`更新频率很低，于是转而手动部署（顺便还能利用上我的闲置服务器）。\n\n## 截图\n\n> 体验：订阅肺炎辟谣网站，还没听到谣言就收到了辟谣推送 (๑•̀ㅂ•́)و✧\n\n使用截图：\n\n![帮助](https://img.vim-cn.com/20/7cfc5776d8cd86c0372009dd0b846715a3384b.png)\n\n![推送](https://img.vim-cn.com/09/ab2658f7df2c569c273eadeb58d885817d21a2.png)","slug":"yourRssBot","published":1,"updated":"2020-02-23T16:37:16.510Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp0s000lhpz65g4l6s3t","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近开始使用<code>RSS</code>，真的是<strong>high到不行</strong>！</p>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>什么是<code>RSS</code>？引用维基百科上的定义：</p>\n<blockquote>\n<p><strong>RSS</strong>（<strong>简易信息聚合</strong>）是一种消息来源格式规范，用以<strong>聚合经常发布更新数据的网站</strong>，例如博客文章、新闻、音频或视频的网摘。RSS文件（或称做摘要、网络摘要、或频更新，提供到频道）包含全文或是节录的文字，再加上发布者所订阅之网摘数据和授权的元数据。</p>\n</blockquote>\n<p>在这个信息碎片化的时代，兴趣算法大行其道，我们逐渐失去了自己选择信息的权力。如果你也像我一样对此感到厌倦，也许回归<code>RSS</code>会是个更好的选择。<code>RSS</code>能让你自由地订阅信息来源，可以避免无关信息的干扰，节省你宝贵的时间。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>使用<code>RSS</code>，你需要可订阅的源和RSS阅读器。</p>\n<ol>\n<li><p>订阅源</p>\n<p>很遗憾，现如今很多网站都没有对<code>RSS</code>提供支持，这里就要提到<a href=\"https://github.com/diygod\" target=\"_blank\" rel=\"noopener\">DIYgod</a>大佬发起的项目<a href=\"https://github.com/DIYgod/RSSHub\" target=\"_blank\" rel=\"noopener\">RSSHub</a>了。</p>\n<blockquote>\n<p>RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容。</p>\n</blockquote>\n<p>用户可以选择使用<code>RSSHub</code>官方的<code>demo</code>，或者选择自行部署，具体请参阅<a href=\"https://docs.rsshub.app/\" target=\"_blank\" rel=\"noopener\">文档</a>。</p>\n</li>\n<li><p>阅读器</p>\n<p>同理，现如今优秀的RSS阅读器也如凤毛麟角，具体到<code>linux</code>平台更是少之又少，我试用了很多款都没有找到满意的。于是转变思路选择了<code>telegram bot</code>，原因主要有两点：</p>\n<ul>\n<li><p><strong>可以多平台使用</strong></p>\n</li>\n<li><p><strong>可以实时更新</strong></p>\n</li>\n</ul>\n</li>\n</ol>\n<p>去查找相关教程，发现了<code>go</code>实现的<a href=\"https://github.com/indes/flowerss-bot\" target=\"_blank\" rel=\"noopener\"><code>flowerss-bot</code></a>，同样支持使用<code>demo</code>或自行部署，但试用后发现其<code>demo</code>更新频率很低，于是转而手动部署（顺便还能利用上我的闲置服务器）。</p>\n<h2 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h2><blockquote>\n<p>体验：订阅肺炎辟谣网站，还没听到谣言就收到了辟谣推送 (๑•̀ㅂ•́)و✧</p>\n</blockquote>\n<p>使用截图：</p>\n<p><img src=\"https://img.vim-cn.com/20/7cfc5776d8cd86c0372009dd0b846715a3384b.png\" alt=\"帮助\"></p>\n<p><img src=\"https://img.vim-cn.com/09/ab2658f7df2c569c273eadeb58d885817d21a2.png\" alt=\"推送\"></p>\n","site":{"data":{}},"length":703,"excerpt":"<p>最近开始使用<code>RSS</code>，真的是<strong>high到不行</strong>！</p>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>什么是<code>RSS</code>？引用维基百科上的定义：</p>\n<blockquote>\n<p><strong>RSS</strong>（<strong>简易信息聚合</strong>）是一种消息来源格式规范，用以<strong>聚合经常发布更新数据的网站</strong>，例如博客文章、新闻、音频或视频的网摘。RSS文件（或称做摘要、网络摘要、或频更新，提供到频道）包含全文或是节录的文字，再加上发布者所订阅之网摘数据和授权的元数据。</p>\n</blockquote>\n<p>在这个信息碎片化的时代，兴趣算法大行其道，我们逐渐失去了自己选择信息的权力。如果你也像我一样对此感到厌倦，也许回归<code>RSS</code>会是个更好的选择。<code>RSS</code>能让你自由地订阅信息来源，可以避免无关信息的干扰，节省你宝贵的时间。</p>","more":"<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>使用<code>RSS</code>，你需要可订阅的源和RSS阅读器。</p>\n<ol>\n<li><p>订阅源</p>\n<p>很遗憾，现如今很多网站都没有对<code>RSS</code>提供支持，这里就要提到<a href=\"https://github.com/diygod\" target=\"_blank\" rel=\"noopener\">DIYgod</a>大佬发起的项目<a href=\"https://github.com/DIYgod/RSSHub\" target=\"_blank\" rel=\"noopener\">RSSHub</a>了。</p>\n<blockquote>\n<p>RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容。</p>\n</blockquote>\n<p>用户可以选择使用<code>RSSHub</code>官方的<code>demo</code>，或者选择自行部署，具体请参阅<a href=\"https://docs.rsshub.app/\" target=\"_blank\" rel=\"noopener\">文档</a>。</p>\n</li>\n<li><p>阅读器</p>\n<p>同理，现如今优秀的RSS阅读器也如凤毛麟角，具体到<code>linux</code>平台更是少之又少，我试用了很多款都没有找到满意的。于是转变思路选择了<code>telegram bot</code>，原因主要有两点：</p>\n<ul>\n<li><p><strong>可以多平台使用</strong></p>\n</li>\n<li><p><strong>可以实时更新</strong></p>\n</li>\n</ul>\n</li>\n</ol>\n<p>去查找相关教程，发现了<code>go</code>实现的<a href=\"https://github.com/indes/flowerss-bot\" target=\"_blank\" rel=\"noopener\"><code>flowerss-bot</code></a>，同样支持使用<code>demo</code>或自行部署，但试用后发现其<code>demo</code>更新频率很低，于是转而手动部署（顺便还能利用上我的闲置服务器）。</p>\n<h2 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h2><blockquote>\n<p>体验：订阅肺炎辟谣网站，还没听到谣言就收到了辟谣推送 (๑•̀ㅂ•́)و✧</p>\n</blockquote>\n<p>使用截图：</p>\n<p><img src=\"https://img.vim-cn.com/20/7cfc5776d8cd86c0372009dd0b846715a3384b.png\" alt=\"帮助\"></p>\n<p><img src=\"https://img.vim-cn.com/09/ab2658f7df2c569c273eadeb58d885817d21a2.png\" alt=\"推送\"></p>"},{"title":"ManjaroWPS切换中文问题","date":"2020-01-15T05:39:27.000Z","_content":"\n> `wps`在前几天更新之后，界面语言变成了英文，本来没有很太在意，觉得可能过几天更新就好了，但等了几天好像并没有更新的迹象，于是寻找方法进行修复...\n\n<!--more-->\n\n1. 首先打开[AUR仓库](https://aur.archlinux.org)，查看`wps-office`有关的包，发现了`wps-office-cn`\n\n2. 查看其依赖，发现了`wps-office-mui-zh-cn (optional) – zh_CN support for WPS Office`\n\n3. 得到修复方法，即手动安装语言包：\n\n   ```bash\n   yay -S wps-office-mui-zh-cn\n   ```\n\n   重新打开`wps`，不出意外的话应该已经修复成功了（因为`wps`优先使用系统语言），如果没有成功的话，手动点击右上角的`A`图标，在里面选择中文语言包进行切换即可。","source":"_posts/wpsChangeLanguage.md","raw":"---\ntitle: ManjaroWPS切换中文问题\ndate: 2020-01-15 13:39:27\ntags: [linux,manjaro]\ncategories: 问题解决\n---\n\n> `wps`在前几天更新之后，界面语言变成了英文，本来没有很太在意，觉得可能过几天更新就好了，但等了几天好像并没有更新的迹象，于是寻找方法进行修复...\n\n<!--more-->\n\n1. 首先打开[AUR仓库](https://aur.archlinux.org)，查看`wps-office`有关的包，发现了`wps-office-cn`\n\n2. 查看其依赖，发现了`wps-office-mui-zh-cn (optional) – zh_CN support for WPS Office`\n\n3. 得到修复方法，即手动安装语言包：\n\n   ```bash\n   yay -S wps-office-mui-zh-cn\n   ```\n\n   重新打开`wps`，不出意外的话应该已经修复成功了（因为`wps`优先使用系统语言），如果没有成功的话，手动点击右上角的`A`图标，在里面选择中文语言包进行切换即可。","slug":"wpsChangeLanguage","published":1,"updated":"2020-02-04T13:46:53.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp0x000qhpz69tjrhqwf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><blockquote>\n<p><code>wps</code>在前几天更新之后，界面语言变成了英文，本来没有很太在意，觉得可能过几天更新就好了，但等了几天好像并没有更新的迹象，于是寻找方法进行修复…</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<ol>\n<li><p>首先打开<a href=\"https://aur.archlinux.org\" target=\"_blank\" rel=\"noopener\">AUR仓库</a>，查看<code>wps-office</code>有关的包，发现了<code>wps-office-cn</code></p>\n</li>\n<li><p>查看其依赖，发现了<code>wps-office-mui-zh-cn (optional) – zh_CN support for WPS Office</code></p>\n</li>\n<li><p>得到修复方法，即手动安装语言包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yay -S wps-office-mui-zh-cn</span><br></pre></td></tr></table></figure>\n\n<p>重新打开<code>wps</code>，不出意外的话应该已经修复成功了（因为<code>wps</code>优先使用系统语言），如果没有成功的话，手动点击右上角的<code>A</code>图标，在里面选择中文语言包进行切换即可。</p>\n</li>\n</ol>\n","site":{"data":{}},"length":297,"excerpt":"<blockquote>\n<p><code>wps</code>在前几天更新之后，界面语言变成了英文，本来没有很太在意，觉得可能过几天更新就好了，但等了几天好像并没有更新的迹象，于是寻找方法进行修复…</p>\n</blockquote>","more":"<ol>\n<li><p>首先打开<a href=\"https://aur.archlinux.org\" target=\"_blank\" rel=\"noopener\">AUR仓库</a>，查看<code>wps-office</code>有关的包，发现了<code>wps-office-cn</code></p>\n</li>\n<li><p>查看其依赖，发现了<code>wps-office-mui-zh-cn (optional) – zh_CN support for WPS Office</code></p>\n</li>\n<li><p>得到修复方法，即手动安装语言包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yay -S wps-office-mui-zh-cn</span><br></pre></td></tr></table></figure>\n\n<p>重新打开<code>wps</code>，不出意外的话应该已经修复成功了（因为<code>wps</code>优先使用系统语言），如果没有成功的话，手动点击右上角的<code>A</code>图标，在里面选择中文语言包进行切换即可。</p>\n</li>\n</ol>"},{"title":"配置世纪互联版onedrive，实现网络共享文件夹","date":"2020-03-03T14:00:24.000Z","_content":"\n{% aplayer \"삐삐\" \"IU\" \"https://alphaone-my.sharepoint.cn/personal/jeasonlau_vip_tg/_layouts/15/download.aspx?SourceUrl=%2Fpersonal%2Fjeasonlau%5Fvip%5Ftg%2FDocuments%2F%E9%9F%B3%E4%B9%90%2FIU%2F%EC%82%90%EC%82%90%2FIU%20%2D%20%EC%82%90%EC%82%90%2Eflac\" \"https://ae01.alicdn.com/kf/Ua6b1c96ff42c499c9751865c0d0b3795e.jpg\" %}\n\n## 背景\n\n很久之前就想有一个网络共享文件夹，即一个既能在本地当做普通文件夹使用，也能通过互联网访问到的文件夹。\n\n大致对比了一下这些可能能够用于实现该功能的服务：\n\n| 服务                             | 优点                     | 缺点                                       |\n| -------------------------------- | ------------------------ | ------------------------------------------ |\n| 以百度云为代表的国内网盘         | 存储空间大               | 对`linux`支持差，访问速度慢                |\n| `google drive/mega`等国外网盘    | `linux`客户端支持        | 存储空间较小，国内速度慢甚至无法连通       |\n| 各类`oss`服务（例：阿里云`oss`） | 官方挂载支持，速度无限制 | 存储费用、流量费用、请求费用累计，代价昂贵 |\n| 服务器空闲存储空间               | 可通过`sftp`访问         | 受服务器带宽限制，使用效果并不理想         |\n\n<!--more-->\n\n可以看到各个服务各有优缺点。但最近，我发现了另一款产品：`世纪互联版onedrive`。它是微软委托国内的世纪互联运营的，对比`onedrive`国际版，一方面其数据中心位于北京/上海，极大地优化了国内用户的访问速度；另一方面，淘宝有大量低价号贩售，五六十块即可买到“永久”的`5T`存储空间（此处存疑）。上网查询，发现这个`世纪互联版onedrive`在本地可以通过`魔改rclone`实现挂载，在云端可以使用`魔改oneindex`、`zfile`等开源项目实现浏览器访问（**不走服务器流量，无限速**），完美满足我的需求，于是入了一个，准备开搞。\n\n## 需要\n\n1. 一台自己的电脑\n2. 一台服务器\n3. **开放api**的`世纪互联版onedrive`账号（一定要是**开放api**的！）\n\n## 云端\n\n先说简单的云端访问，我使用的是`zfile`（因为它配置简单，原生支持`世纪互联onedrive`）。\n\n> 接下来操作以`ubuntu`为例，`centos`请移步[官方文档](http://docs.zhaojun.im/zfile/)。\n\n`ssh`到服务器，首先安装依赖：\n\n```bash\nsudo apt install -y openjdk-8-jre-headless unzip\n```\n\n下载项目，解压并给予可执行权限：\n\n```bash\ncd ~\nwget https://c.jun6.net/ZFILE/zfile-release.war\nmkdir zfile && unzip zfile-release.war -d zfile && rm -rf zfile-release.war\nchmod +x zfile/bin/*.sh\n```\n\n启动项目：\n\n```bash\n~/zfile/bin/start.sh\n```\n\n接下来访问`http://你的公网ip:8080/#/install`进行配置。其中的访问令牌和刷新令牌需要访问[这个网址](https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize?client_id=4a72d927-1907-488d-9eb2-1b465c53c1c5&response_type=code&redirect_uri=https://zfile.jun6.net/onedrive/china-callback&scope=offline_access%20User.Read%20Files.ReadWrite.All)登录账号后获取，填写成功之后点击确认即配置完成，可以在网页访问到你的`onedrive`云盘了！\n\n## 本地\n\n接下来配置稍微复杂点儿的本地挂载。\n\n以下内容转载自[znov的博客](https://znov.org/notes/16.html)，因为他是在服务器挂载，而我是在本机，所以做了少量修改。(windows只需要进行前三步，未经过实测)。\n\n1. `世纪互联 OneDrive` 获取 `CLIENT_ID` 及 `CLIENT_SECRET`\n   1. 打开[该网页](https://portal.azure.cn/)登录账号。\n   2. 左侧找到`Azure Active Directory`点击\n      左侧找到 `应用注册` 点击\n      上方找到 `新注册` 点击\n      名称：`onedrive`\n      受支持的账户类型：`任何组织目录`（第二个）\n      重定向 URL：`http://localhost:53682`\n      点击注册\n      找到 `应用程序(客户端) ID` 复制保存\n      左侧找到 `证书和密码` 点击\n      下方 客户端密码 - `新建客户端密码`\n      说明：`onedrive`\n      截止期限：默认 `一年内`\n      点击 添加，`值`复制保存\n      左侧找到 `API 权限` 点击\n      添加权限：`Microsoft Graph` - `委托的权限`：全部勾选（这里经我测试只勾选`File`栏即可）\n\n2.  安装配置`rclone`\n   1. [此处下载](https://drive.jeasonlau.xyz:10000/#/s/K5cp)`rclone`世纪互联版\n\n      > 该文件来源于全球主机论坛爱纯粹大佬，因为原博客的下载链接速度很慢，所以另存了一份。希望大家下载的同时可以顺便去原博客评论支持一下！\n\n   2. `linux`在当前目录打开`terminal`，执行\n\n      ```bash\n      sudo mv ./rclone的文件名 /usr/bin/rclone\n      sudo chmod +x /usr/bin/rclone\n      ```\n\n      `windows`请自行查阅如何将文件添加到环境变量中。\n\n      > 注：此步骤非必须，如未执行则将以下语句的`rclone`改为`rclone`的路径形式。\n\n   3. 输入`rclone config`进行如下配置\n\n      ```bash\n      e) Edit existing remote\n      n) New remote\n      d) Delete remote\n      r) Rename remote\n      c) Copy remote\n      s) Set configuration password\n      q) Quit config\n      e/n/d/r/c/s/q> n\n      name>onedrive\n      Type of storage to configure.\n      Enter a string value. Press Enter for the default (\"\").\n      Choose a number from below, or type in your own value\n       1 / 1Fichier\n         \\ \"fichier\"\n       2 / Alias for an existing remote\n         \\ \"alias\"\n       3 / Amazon Drive\n         \\ \"amazon cloud drive\"\n       4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)\n         \\ \"s3\"\n       5 / Backblaze B2\n         \\ \"b2\"\n       6 / Box\n         \\ \"box\"\n       7 / Cache a remote\n         \\ \"cache\"\n       8 / Citrix Sharefile\n         \\ \"sharefile\"\n       9 / Dropbox\n         \\ \"dropbox\"\n      10 / Encrypt/Decrypt a remote\n         \\ \"crypt\"\n      11 / FTP Connection\n         \\ \"ftp\"\n      12 / Google Cloud Storage (this is not Google Drive)\n         \\ \"google cloud storage\"\n      13 / Google Drive\n         \\ \"drive\"\n      14 / Google Photos\n         \\ \"google photos\"\n      15 / Hubic\n         \\ \"hubic\"\n      16 / JottaCloud\n         \\ \"jottacloud\"\n      17 / Koofr\n         \\ \"koofr\"\n      18 / Local Disk\n         \\ \"local\"\n      19 / Mail.ru Cloud\n         \\ \"mailru\"\n      20 / Mega\n         \\ \"mega\"\n      21 / Microsoft Azure Blob Storage\n         \\ \"azureblob\"\n      22 / Microsoft OneDrive\n         \\ \"onedrive\"\n      23 / OpenDrive\n         \\ \"opendrive\"\n      24 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)\n         \\ \"swift\"\n      25 / Pcloud\n         \\ \"pcloud\"\n      26 / Put.io\n         \\ \"putio\"\n      27 / QingCloud Object Storage\n         \\ \"qingstor\"\n      28 / SSH/SFTP Connection\n         \\ \"sftp\"\n      29 / Transparently chunk/split large files\n         \\ \"chunker\"\n      30 / Union merges the contents of several remotes\n         \\ \"union\"\n      31 / Webdav\n         \\ \"webdav\"\n      32 / Yandex Disk\n         \\ \"yandex\"\n      33 / http Connection\n         \\ \"http\"\n      34 / premiumize.me\n         \\ \"premiumizeme\"\n      Storage>22\n      ** See help for onedrive backend at: https://rclone.org/onedrive/ **\n      \n      Microsoft App Client Id\n      Leave blank normally.\n      Enter a string value. Press Enter for the default (\"\").\n      client_id>输入上面“应用程序（客户端）id”\n      Microsoft App Client Secret\n      Leave blank normally.\n      Enter a string value. Press Enter for the default (\"\").\n      client_secret>输入上面申请到的“值”\n      OneDrive operated by 21Vianet (世纪互联).\n      Enter a boolean value (true or false). Press Enter for the default (\"false\").\n      is_21vianet_version>true\n      Edit advanced config? (y/n)\n      y) Yes\n      n) No\n      y/n>n\n      Use auto config?\n       * Say Y if not sure\n       * Say N if you are working on a remote or headless machine\n      y) Yes\n      n) No\n      y/n>y\n      之后会自动打开一个网页，在这个网页里进行登录，然后继续..\n      Choose a number from below, or type in an existing value\n       1 / OneDrive Personal or Business\n         \\ \"onedrive\"\n       2 / Root Sharepoint site\n         \\ \"sharepoint\"\n       3 / Type in driveID\n         \\ \"driveid\"\n       4 / Type in SiteID\n         \\ \"siteid\"\n       5 / Search a Sharepoint site\n         \\ \"search\"\n      Your choice> 1\n      Found 1 drives, please select the one you want to use:\n      0: OneDrive (business) id=******\n      Chose drive to use:>0\n      Found drive 'root' of type 'business', URL: https://alphaone-my.sharepoint.cn/personal/***\n      Is that okay?\n      y) Yes\n      n) No\n      y/n>y\n      y\n      q\n      ```\n\n3. 进行挂载\n\n   `linux`需要安装`fuse`，各大发行版不一样就不详述了，我的`manjaro`自带。\n\n   命令如下：（其中的/表示需要挂载到本地的`onedrive`路径，`/mnt/`表示本机的挂载路径，可对应修改）\n\n   ```bash\n   挂载命令：rclone mount onedrive:/ /mnt/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000\n   \n   后台挂载命令：nohup rclone mount onedrive:/ /mnt --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 >/dev/null 2>&1 &\n   \n   卸载命令：fusermount -qzu LocalFolder onedrive\n   ```\n\n4. 使用挂载脚本\n\n   这个挂载脚本能够实现基本的挂载、卸载和重新挂载功能，之后使用的话就没有必要输入那么长的命令了。脚本如下：\n\n   ```bash\n   #!/bin/bash\n   # ------------------------------------------\n   PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\n   export PATH\n   \n   ### BEGIN INIT INFO\n   # Provides:          rclone\n   # Required-Start:    $all\n   # Required-Stop:     $all\n   # Default-Start:     2 3 4 5\n   # Default-Stop:      0 1 6\n   # Short-Description: Start rclone at boot time\n   # Description:       Enable rclone by daemon.\n   ### END INIT INFO\n   # ------------------------------------------\n   # 以上两条横线之间的内容不自启的话可以去掉（个人觉得自启的话去掉应该也没啥影响）\n   \n   NAME_BIN=\"rclone\"\n   NAME=\"onedrive\"\n   REMOTE='/' #需要挂载到本地的onedrive路径，可修改\n   LOCAL='/mnt/' #挂载到本地的哪个文件夹，可修改\n   \n   Green_font_prefix=\"\\033[32m\" && Red_font_prefix=\"\\033[31m\" && Green_background_prefix=\"\\033[42;37m\" && Red_background_prefix=\"\\033[41;37m\" && Font_color_suffix=\"\\033[0m\"\n   Info=\"${Green_font_prefix}[信息]${Font_color_suffix}\"\n   Error=\"${Red_font_prefix}[错误]${Font_color_suffix}\"\n   RETVAL=0\n   \n   check_running(){\n       PID=\"$(ps -C $NAME_BIN -o pid= |head -n1 |grep -o '[0-9]\\{1,\\}')\"\n       if [[ ! -z ${PID} ]]; then\n           return 0\n       else\n           return 1\n       fi\n   }\n   do_start(){\n       check_running\n       if [[ $? -eq 0 ]]; then\n           echo -e \"${Info} $NAME_BIN (PID ${PID}) 正在运行...\" && exit 0\n       else\n           fusermount -zuq $LOCAL >/dev/null 2>&1\n           mkdir -p $LOCAL\n           /usr/bin/rclone mount $NAME:$REMOTE $LOCAL --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 >/dev/null 2>&1 &\n           check_running\n           if [[ $? -eq 0 ]]; then\n               echo -e \"${Info} $NAME_BIN 启动成功 !\"\n           else\n               echo -e \"${Error} $NAME_BIN 启动失败 !\"\n           fi\n       fi\n   }\n   do_stop(){\n       check_running\n       if [[ $? -eq 0 ]]; then\n           kill -9 ${PID}\n           RETVAL=$?\n           if [[ $RETVAL -eq 0 ]]; then\n               echo -e \"${Info} $NAME_BIN 停止成功 !\"\n           else\n               echo -e \"${Error} $NAME_BIN 停止失败 !\"\n           fi\n       else\n           echo -e \"${Info} $NAME_BIN 未运行\"\n           RETVAL=1\n       fi\n       fusermount -zuq $LOCAL >/dev/null 2>&1\n       fusermount -zuq $LOCAL1 >/dev/null 2>&1\n   }\n   do_status(){\n       check_running\n       if [[ $? -eq 0 ]]; then\n           echo -e \"${Info} $NAME_BIN (PID $(echo ${PID})) 正在运行...\"\n       else\n           echo -e \"${Info} $NAME_BIN 未运行 !\"\n           RETVAL=1\n       fi\n   }\n   do_restart(){\n       do_stop\n       do_start\n   }\n   case \"$1\" in\n       start|stop|restart|status)\n       do_$1\n       ;;\n       *)\n       echo \"使用方法: $0 { start | stop | restart | status }\"\n       RETVAL=1\n       ;;\n   esac\n   exit $RETVAL\n   ```\n   \n   假设该脚本被保存为`rcloned`，首先给予可执行权限：\n   \n   ```bash\n   chmod +x rcloned的路径\n   ```\n\n   之后可以选择将其移动到环境变量中，使用的时候手动执行`rcloned start`：\n   \n   ```bash\n   sudo mv rcloned的路径 /usr/bin/rcloned\n   # 每次使用时\n   rcloned start\n   ```\n   \n   也可以选择像原文那样设置为开机自动运行（可能不支持所有发行版）：\n   \n   ```bash\n   sudo mv rcloned的路径 /etc/init.d/rcloned\n   sudo /etc/init.d/rcloned start\n   ```\n\n## 截图\n\n![](https://ae01.alicdn.com/kf/U1042e96d66eb4eff838bcef4b50948b28.png)\n\n## 碎碎念\n\n本来打算稍微写写水一篇文章的，没想到一不小心写了这么多...\n\n中间某些步骤写的过分详细了，希望大家阅读的时候不要嫌我啰嗦 orz\n\n## 参考\n\n1. [zfile官方文档](http://docs.zhaojun.im/zfile/)\n2. [znov的博客](https://znov.org/notes/16.html)\n\n3. [Zephyr 杂货铺](https://yiyi.one/)（我购买账号的地方）","source":"_posts/configOnedrive.md","raw":"---\ntitle: 配置世纪互联版onedrive，实现网络共享文件夹\ndate: 2020-03-03 22:00:24\ntags: [linux,onedrive]\ncategories: 便捷使用\n---\n\n{% aplayer \"삐삐\" \"IU\" \"https://alphaone-my.sharepoint.cn/personal/jeasonlau_vip_tg/_layouts/15/download.aspx?SourceUrl=%2Fpersonal%2Fjeasonlau%5Fvip%5Ftg%2FDocuments%2F%E9%9F%B3%E4%B9%90%2FIU%2F%EC%82%90%EC%82%90%2FIU%20%2D%20%EC%82%90%EC%82%90%2Eflac\" \"https://ae01.alicdn.com/kf/Ua6b1c96ff42c499c9751865c0d0b3795e.jpg\" %}\n\n## 背景\n\n很久之前就想有一个网络共享文件夹，即一个既能在本地当做普通文件夹使用，也能通过互联网访问到的文件夹。\n\n大致对比了一下这些可能能够用于实现该功能的服务：\n\n| 服务                             | 优点                     | 缺点                                       |\n| -------------------------------- | ------------------------ | ------------------------------------------ |\n| 以百度云为代表的国内网盘         | 存储空间大               | 对`linux`支持差，访问速度慢                |\n| `google drive/mega`等国外网盘    | `linux`客户端支持        | 存储空间较小，国内速度慢甚至无法连通       |\n| 各类`oss`服务（例：阿里云`oss`） | 官方挂载支持，速度无限制 | 存储费用、流量费用、请求费用累计，代价昂贵 |\n| 服务器空闲存储空间               | 可通过`sftp`访问         | 受服务器带宽限制，使用效果并不理想         |\n\n<!--more-->\n\n可以看到各个服务各有优缺点。但最近，我发现了另一款产品：`世纪互联版onedrive`。它是微软委托国内的世纪互联运营的，对比`onedrive`国际版，一方面其数据中心位于北京/上海，极大地优化了国内用户的访问速度；另一方面，淘宝有大量低价号贩售，五六十块即可买到“永久”的`5T`存储空间（此处存疑）。上网查询，发现这个`世纪互联版onedrive`在本地可以通过`魔改rclone`实现挂载，在云端可以使用`魔改oneindex`、`zfile`等开源项目实现浏览器访问（**不走服务器流量，无限速**），完美满足我的需求，于是入了一个，准备开搞。\n\n## 需要\n\n1. 一台自己的电脑\n2. 一台服务器\n3. **开放api**的`世纪互联版onedrive`账号（一定要是**开放api**的！）\n\n## 云端\n\n先说简单的云端访问，我使用的是`zfile`（因为它配置简单，原生支持`世纪互联onedrive`）。\n\n> 接下来操作以`ubuntu`为例，`centos`请移步[官方文档](http://docs.zhaojun.im/zfile/)。\n\n`ssh`到服务器，首先安装依赖：\n\n```bash\nsudo apt install -y openjdk-8-jre-headless unzip\n```\n\n下载项目，解压并给予可执行权限：\n\n```bash\ncd ~\nwget https://c.jun6.net/ZFILE/zfile-release.war\nmkdir zfile && unzip zfile-release.war -d zfile && rm -rf zfile-release.war\nchmod +x zfile/bin/*.sh\n```\n\n启动项目：\n\n```bash\n~/zfile/bin/start.sh\n```\n\n接下来访问`http://你的公网ip:8080/#/install`进行配置。其中的访问令牌和刷新令牌需要访问[这个网址](https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize?client_id=4a72d927-1907-488d-9eb2-1b465c53c1c5&response_type=code&redirect_uri=https://zfile.jun6.net/onedrive/china-callback&scope=offline_access%20User.Read%20Files.ReadWrite.All)登录账号后获取，填写成功之后点击确认即配置完成，可以在网页访问到你的`onedrive`云盘了！\n\n## 本地\n\n接下来配置稍微复杂点儿的本地挂载。\n\n以下内容转载自[znov的博客](https://znov.org/notes/16.html)，因为他是在服务器挂载，而我是在本机，所以做了少量修改。(windows只需要进行前三步，未经过实测)。\n\n1. `世纪互联 OneDrive` 获取 `CLIENT_ID` 及 `CLIENT_SECRET`\n   1. 打开[该网页](https://portal.azure.cn/)登录账号。\n   2. 左侧找到`Azure Active Directory`点击\n      左侧找到 `应用注册` 点击\n      上方找到 `新注册` 点击\n      名称：`onedrive`\n      受支持的账户类型：`任何组织目录`（第二个）\n      重定向 URL：`http://localhost:53682`\n      点击注册\n      找到 `应用程序(客户端) ID` 复制保存\n      左侧找到 `证书和密码` 点击\n      下方 客户端密码 - `新建客户端密码`\n      说明：`onedrive`\n      截止期限：默认 `一年内`\n      点击 添加，`值`复制保存\n      左侧找到 `API 权限` 点击\n      添加权限：`Microsoft Graph` - `委托的权限`：全部勾选（这里经我测试只勾选`File`栏即可）\n\n2.  安装配置`rclone`\n   1. [此处下载](https://drive.jeasonlau.xyz:10000/#/s/K5cp)`rclone`世纪互联版\n\n      > 该文件来源于全球主机论坛爱纯粹大佬，因为原博客的下载链接速度很慢，所以另存了一份。希望大家下载的同时可以顺便去原博客评论支持一下！\n\n   2. `linux`在当前目录打开`terminal`，执行\n\n      ```bash\n      sudo mv ./rclone的文件名 /usr/bin/rclone\n      sudo chmod +x /usr/bin/rclone\n      ```\n\n      `windows`请自行查阅如何将文件添加到环境变量中。\n\n      > 注：此步骤非必须，如未执行则将以下语句的`rclone`改为`rclone`的路径形式。\n\n   3. 输入`rclone config`进行如下配置\n\n      ```bash\n      e) Edit existing remote\n      n) New remote\n      d) Delete remote\n      r) Rename remote\n      c) Copy remote\n      s) Set configuration password\n      q) Quit config\n      e/n/d/r/c/s/q> n\n      name>onedrive\n      Type of storage to configure.\n      Enter a string value. Press Enter for the default (\"\").\n      Choose a number from below, or type in your own value\n       1 / 1Fichier\n         \\ \"fichier\"\n       2 / Alias for an existing remote\n         \\ \"alias\"\n       3 / Amazon Drive\n         \\ \"amazon cloud drive\"\n       4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)\n         \\ \"s3\"\n       5 / Backblaze B2\n         \\ \"b2\"\n       6 / Box\n         \\ \"box\"\n       7 / Cache a remote\n         \\ \"cache\"\n       8 / Citrix Sharefile\n         \\ \"sharefile\"\n       9 / Dropbox\n         \\ \"dropbox\"\n      10 / Encrypt/Decrypt a remote\n         \\ \"crypt\"\n      11 / FTP Connection\n         \\ \"ftp\"\n      12 / Google Cloud Storage (this is not Google Drive)\n         \\ \"google cloud storage\"\n      13 / Google Drive\n         \\ \"drive\"\n      14 / Google Photos\n         \\ \"google photos\"\n      15 / Hubic\n         \\ \"hubic\"\n      16 / JottaCloud\n         \\ \"jottacloud\"\n      17 / Koofr\n         \\ \"koofr\"\n      18 / Local Disk\n         \\ \"local\"\n      19 / Mail.ru Cloud\n         \\ \"mailru\"\n      20 / Mega\n         \\ \"mega\"\n      21 / Microsoft Azure Blob Storage\n         \\ \"azureblob\"\n      22 / Microsoft OneDrive\n         \\ \"onedrive\"\n      23 / OpenDrive\n         \\ \"opendrive\"\n      24 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)\n         \\ \"swift\"\n      25 / Pcloud\n         \\ \"pcloud\"\n      26 / Put.io\n         \\ \"putio\"\n      27 / QingCloud Object Storage\n         \\ \"qingstor\"\n      28 / SSH/SFTP Connection\n         \\ \"sftp\"\n      29 / Transparently chunk/split large files\n         \\ \"chunker\"\n      30 / Union merges the contents of several remotes\n         \\ \"union\"\n      31 / Webdav\n         \\ \"webdav\"\n      32 / Yandex Disk\n         \\ \"yandex\"\n      33 / http Connection\n         \\ \"http\"\n      34 / premiumize.me\n         \\ \"premiumizeme\"\n      Storage>22\n      ** See help for onedrive backend at: https://rclone.org/onedrive/ **\n      \n      Microsoft App Client Id\n      Leave blank normally.\n      Enter a string value. Press Enter for the default (\"\").\n      client_id>输入上面“应用程序（客户端）id”\n      Microsoft App Client Secret\n      Leave blank normally.\n      Enter a string value. Press Enter for the default (\"\").\n      client_secret>输入上面申请到的“值”\n      OneDrive operated by 21Vianet (世纪互联).\n      Enter a boolean value (true or false). Press Enter for the default (\"false\").\n      is_21vianet_version>true\n      Edit advanced config? (y/n)\n      y) Yes\n      n) No\n      y/n>n\n      Use auto config?\n       * Say Y if not sure\n       * Say N if you are working on a remote or headless machine\n      y) Yes\n      n) No\n      y/n>y\n      之后会自动打开一个网页，在这个网页里进行登录，然后继续..\n      Choose a number from below, or type in an existing value\n       1 / OneDrive Personal or Business\n         \\ \"onedrive\"\n       2 / Root Sharepoint site\n         \\ \"sharepoint\"\n       3 / Type in driveID\n         \\ \"driveid\"\n       4 / Type in SiteID\n         \\ \"siteid\"\n       5 / Search a Sharepoint site\n         \\ \"search\"\n      Your choice> 1\n      Found 1 drives, please select the one you want to use:\n      0: OneDrive (business) id=******\n      Chose drive to use:>0\n      Found drive 'root' of type 'business', URL: https://alphaone-my.sharepoint.cn/personal/***\n      Is that okay?\n      y) Yes\n      n) No\n      y/n>y\n      y\n      q\n      ```\n\n3. 进行挂载\n\n   `linux`需要安装`fuse`，各大发行版不一样就不详述了，我的`manjaro`自带。\n\n   命令如下：（其中的/表示需要挂载到本地的`onedrive`路径，`/mnt/`表示本机的挂载路径，可对应修改）\n\n   ```bash\n   挂载命令：rclone mount onedrive:/ /mnt/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000\n   \n   后台挂载命令：nohup rclone mount onedrive:/ /mnt --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 >/dev/null 2>&1 &\n   \n   卸载命令：fusermount -qzu LocalFolder onedrive\n   ```\n\n4. 使用挂载脚本\n\n   这个挂载脚本能够实现基本的挂载、卸载和重新挂载功能，之后使用的话就没有必要输入那么长的命令了。脚本如下：\n\n   ```bash\n   #!/bin/bash\n   # ------------------------------------------\n   PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\n   export PATH\n   \n   ### BEGIN INIT INFO\n   # Provides:          rclone\n   # Required-Start:    $all\n   # Required-Stop:     $all\n   # Default-Start:     2 3 4 5\n   # Default-Stop:      0 1 6\n   # Short-Description: Start rclone at boot time\n   # Description:       Enable rclone by daemon.\n   ### END INIT INFO\n   # ------------------------------------------\n   # 以上两条横线之间的内容不自启的话可以去掉（个人觉得自启的话去掉应该也没啥影响）\n   \n   NAME_BIN=\"rclone\"\n   NAME=\"onedrive\"\n   REMOTE='/' #需要挂载到本地的onedrive路径，可修改\n   LOCAL='/mnt/' #挂载到本地的哪个文件夹，可修改\n   \n   Green_font_prefix=\"\\033[32m\" && Red_font_prefix=\"\\033[31m\" && Green_background_prefix=\"\\033[42;37m\" && Red_background_prefix=\"\\033[41;37m\" && Font_color_suffix=\"\\033[0m\"\n   Info=\"${Green_font_prefix}[信息]${Font_color_suffix}\"\n   Error=\"${Red_font_prefix}[错误]${Font_color_suffix}\"\n   RETVAL=0\n   \n   check_running(){\n       PID=\"$(ps -C $NAME_BIN -o pid= |head -n1 |grep -o '[0-9]\\{1,\\}')\"\n       if [[ ! -z ${PID} ]]; then\n           return 0\n       else\n           return 1\n       fi\n   }\n   do_start(){\n       check_running\n       if [[ $? -eq 0 ]]; then\n           echo -e \"${Info} $NAME_BIN (PID ${PID}) 正在运行...\" && exit 0\n       else\n           fusermount -zuq $LOCAL >/dev/null 2>&1\n           mkdir -p $LOCAL\n           /usr/bin/rclone mount $NAME:$REMOTE $LOCAL --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 >/dev/null 2>&1 &\n           check_running\n           if [[ $? -eq 0 ]]; then\n               echo -e \"${Info} $NAME_BIN 启动成功 !\"\n           else\n               echo -e \"${Error} $NAME_BIN 启动失败 !\"\n           fi\n       fi\n   }\n   do_stop(){\n       check_running\n       if [[ $? -eq 0 ]]; then\n           kill -9 ${PID}\n           RETVAL=$?\n           if [[ $RETVAL -eq 0 ]]; then\n               echo -e \"${Info} $NAME_BIN 停止成功 !\"\n           else\n               echo -e \"${Error} $NAME_BIN 停止失败 !\"\n           fi\n       else\n           echo -e \"${Info} $NAME_BIN 未运行\"\n           RETVAL=1\n       fi\n       fusermount -zuq $LOCAL >/dev/null 2>&1\n       fusermount -zuq $LOCAL1 >/dev/null 2>&1\n   }\n   do_status(){\n       check_running\n       if [[ $? -eq 0 ]]; then\n           echo -e \"${Info} $NAME_BIN (PID $(echo ${PID})) 正在运行...\"\n       else\n           echo -e \"${Info} $NAME_BIN 未运行 !\"\n           RETVAL=1\n       fi\n   }\n   do_restart(){\n       do_stop\n       do_start\n   }\n   case \"$1\" in\n       start|stop|restart|status)\n       do_$1\n       ;;\n       *)\n       echo \"使用方法: $0 { start | stop | restart | status }\"\n       RETVAL=1\n       ;;\n   esac\n   exit $RETVAL\n   ```\n   \n   假设该脚本被保存为`rcloned`，首先给予可执行权限：\n   \n   ```bash\n   chmod +x rcloned的路径\n   ```\n\n   之后可以选择将其移动到环境变量中，使用的时候手动执行`rcloned start`：\n   \n   ```bash\n   sudo mv rcloned的路径 /usr/bin/rcloned\n   # 每次使用时\n   rcloned start\n   ```\n   \n   也可以选择像原文那样设置为开机自动运行（可能不支持所有发行版）：\n   \n   ```bash\n   sudo mv rcloned的路径 /etc/init.d/rcloned\n   sudo /etc/init.d/rcloned start\n   ```\n\n## 截图\n\n![](https://ae01.alicdn.com/kf/U1042e96d66eb4eff838bcef4b50948b28.png)\n\n## 碎碎念\n\n本来打算稍微写写水一篇文章的，没想到一不小心写了这么多...\n\n中间某些步骤写的过分详细了，希望大家阅读的时候不要嫌我啰嗦 orz\n\n## 参考\n\n1. [zfile官方文档](http://docs.zhaojun.im/zfile/)\n2. [znov的博客](https://znov.org/notes/16.html)\n\n3. [Zephyr 杂货铺](https://yiyi.one/)（我购买账号的地方）","slug":"configOnedrive","published":1,"updated":"2020-06-01T14:42:41.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp6h001vhpz695wu07x4","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script>\n        <div id=\"aplayer-hvqOyJfG\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\">\n            <pre class=\"aplayer-lrc-content\"></pre>\n        </div>\n        <script>\n          var ap = new APlayer({\n            element: document.getElementById(\"aplayer-hvqOyJfG\"),\n            narrow: false,\n            autoplay: false,\n            showlrc: false,\n            music: {\n              title: \"삐삐\",\n              author: \"IU\",\n              url: \"https://alphaone-my.sharepoint.cn/personal/jeasonlau_vip_tg/_layouts/15/download.aspx?SourceUrl=%2Fpersonal%2Fjeasonlau%5Fvip%5Ftg%2FDocuments%2F%E9%9F%B3%E4%B9%90%2FIU%2F%EC%82%90%EC%82%90%2FIU%20%2D%20%EC%82%90%EC%82%90%2Eflac\",\n              pic: \"https://ae01.alicdn.com/kf/Ua6b1c96ff42c499c9751865c0d0b3795e.jpg\",\n              lrc: \"\"\n            }\n          });\n          window.aplayers || (window.aplayers = []);\n          window.aplayers.push(ap);\n        </script>\n\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>很久之前就想有一个网络共享文件夹，即一个既能在本地当做普通文件夹使用，也能通过互联网访问到的文件夹。</p>\n<p>大致对比了一下这些可能能够用于实现该功能的服务：</p>\n<table>\n<thead>\n<tr>\n<th>服务</th>\n<th>优点</th>\n<th>缺点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>以百度云为代表的国内网盘</td>\n<td>存储空间大</td>\n<td>对<code>linux</code>支持差，访问速度慢</td>\n</tr>\n<tr>\n<td><code>google drive/mega</code>等国外网盘</td>\n<td><code>linux</code>客户端支持</td>\n<td>存储空间较小，国内速度慢甚至无法连通</td>\n</tr>\n<tr>\n<td>各类<code>oss</code>服务（例：阿里云<code>oss</code>）</td>\n<td>官方挂载支持，速度无限制</td>\n<td>存储费用、流量费用、请求费用累计，代价昂贵</td>\n</tr>\n<tr>\n<td>服务器空闲存储空间</td>\n<td>可通过<code>sftp</code>访问</td>\n<td>受服务器带宽限制，使用效果并不理想</td>\n</tr>\n</tbody></table>\n<a id=\"more\"></a>\n\n<p>可以看到各个服务各有优缺点。但最近，我发现了另一款产品：<code>世纪互联版onedrive</code>。它是微软委托国内的世纪互联运营的，对比<code>onedrive</code>国际版，一方面其数据中心位于北京/上海，极大地优化了国内用户的访问速度；另一方面，淘宝有大量低价号贩售，五六十块即可买到“永久”的<code>5T</code>存储空间（此处存疑）。上网查询，发现这个<code>世纪互联版onedrive</code>在本地可以通过<code>魔改rclone</code>实现挂载，在云端可以使用<code>魔改oneindex</code>、<code>zfile</code>等开源项目实现浏览器访问（<strong>不走服务器流量，无限速</strong>），完美满足我的需求，于是入了一个，准备开搞。</p>\n<h2 id=\"需要\"><a href=\"#需要\" class=\"headerlink\" title=\"需要\"></a>需要</h2><ol>\n<li>一台自己的电脑</li>\n<li>一台服务器</li>\n<li><strong>开放api</strong>的<code>世纪互联版onedrive</code>账号（一定要是<strong>开放api</strong>的！）</li>\n</ol>\n<h2 id=\"云端\"><a href=\"#云端\" class=\"headerlink\" title=\"云端\"></a>云端</h2><p>先说简单的云端访问，我使用的是<code>zfile</code>（因为它配置简单，原生支持<code>世纪互联onedrive</code>）。</p>\n<blockquote>\n<p>接下来操作以<code>ubuntu</code>为例，<code>centos</code>请移步<a href=\"http://docs.zhaojun.im/zfile/\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>\n</blockquote>\n<p><code>ssh</code>到服务器，首先安装依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y openjdk-8-jre-headless unzip</span><br></pre></td></tr></table></figure>\n\n<p>下载项目，解压并给予可执行权限：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget https://c.jun6.net/ZFILE/zfile-release.war</span><br><span class=\"line\">mkdir zfile &amp;&amp; unzip zfile-release.war -d zfile &amp;&amp; rm -rf zfile-release.war</span><br><span class=\"line\">chmod +x zfile/bin/*.sh</span><br></pre></td></tr></table></figure>\n\n<p>启动项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/zfile/bin/start.sh</span><br></pre></td></tr></table></figure>\n\n<p>接下来访问<code>http://你的公网ip:8080/#/install</code>进行配置。其中的访问令牌和刷新令牌需要访问<a href=\"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize?client_id=4a72d927-1907-488d-9eb2-1b465c53c1c5&response_type=code&redirect_uri=https://zfile.jun6.net/onedrive/china-callback&scope=offline_access%20User.Read%20Files.ReadWrite.All\" target=\"_blank\" rel=\"noopener\">这个网址</a>登录账号后获取，填写成功之后点击确认即配置完成，可以在网页访问到你的<code>onedrive</code>云盘了！</p>\n<h2 id=\"本地\"><a href=\"#本地\" class=\"headerlink\" title=\"本地\"></a>本地</h2><p>接下来配置稍微复杂点儿的本地挂载。</p>\n<p>以下内容转载自<a href=\"https://znov.org/notes/16.html\" target=\"_blank\" rel=\"noopener\">znov的博客</a>，因为他是在服务器挂载，而我是在本机，所以做了少量修改。(windows只需要进行前三步，未经过实测)。</p>\n<ol>\n<li><p><code>世纪互联 OneDrive</code> 获取 <code>CLIENT_ID</code> 及 <code>CLIENT_SECRET</code></p>\n<ol>\n<li>打开<a href=\"https://portal.azure.cn/\" target=\"_blank\" rel=\"noopener\">该网页</a>登录账号。</li>\n<li>左侧找到<code>Azure Active Directory</code>点击<br>左侧找到 <code>应用注册</code> 点击<br>上方找到 <code>新注册</code> 点击<br>名称：<code>onedrive</code><br>受支持的账户类型：<code>任何组织目录</code>（第二个）<br>重定向 URL：<code>http://localhost:53682</code><br>点击注册<br>找到 <code>应用程序(客户端) ID</code> 复制保存<br>左侧找到 <code>证书和密码</code> 点击<br>下方 客户端密码 - <code>新建客户端密码</code><br>说明：<code>onedrive</code><br>截止期限：默认 <code>一年内</code><br>点击 添加，<code>值</code>复制保存<br>左侧找到 <code>API 权限</code> 点击<br>添加权限：<code>Microsoft Graph</code> - <code>委托的权限</code>：全部勾选（这里经我测试只勾选<code>File</code>栏即可）</li>\n</ol>\n</li>\n<li><p>安装配置<code>rclone</code></p>\n<ol>\n<li><p><a href=\"https://drive.jeasonlau.xyz:10000/#/s/K5cp\" target=\"_blank\" rel=\"noopener\">此处下载</a><code>rclone</code>世纪互联版</p>\n<blockquote>\n<p>该文件来源于全球主机论坛爱纯粹大佬，因为原博客的下载链接速度很慢，所以另存了一份。希望大家下载的同时可以顺便去原博客评论支持一下！</p>\n</blockquote>\n</li>\n<li><p><code>linux</code>在当前目录打开<code>terminal</code>，执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv ./rclone的文件名 /usr/bin/rclone</span><br><span class=\"line\">sudo chmod +x /usr/bin/rclone</span><br></pre></td></tr></table></figure>\n\n<p><code>windows</code>请自行查阅如何将文件添加到环境变量中。</p>\n<blockquote>\n<p>注：此步骤非必须，如未执行则将以下语句的<code>rclone</code>改为<code>rclone</code>的路径形式。</p>\n</blockquote>\n</li>\n<li><p>输入<code>rclone config</code>进行如下配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">e) Edit existing remote</span><br><span class=\"line\">n) New remote</span><br><span class=\"line\">d) Delete remote</span><br><span class=\"line\">r) Rename remote</span><br><span class=\"line\">c) Copy remote</span><br><span class=\"line\">s) Set configuration password</span><br><span class=\"line\">q) Quit config</span><br><span class=\"line\">e/n/d/r/c/s/q&gt; n</span><br><span class=\"line\">name&gt;onedrive</span><br><span class=\"line\">Type of storage to configure.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">\"\"</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / 1Fichier</span><br><span class=\"line\">   \\ <span class=\"string\">\"fichier\"</span></span><br><span class=\"line\"> 2 / Alias <span class=\"keyword\">for</span> an existing remote</span><br><span class=\"line\">   \\ <span class=\"string\">\"alias\"</span></span><br><span class=\"line\"> 3 / Amazon Drive</span><br><span class=\"line\">   \\ <span class=\"string\">\"amazon cloud drive\"</span></span><br><span class=\"line\"> 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class=\"line\">   \\ <span class=\"string\">\"s3\"</span></span><br><span class=\"line\"> 5 / Backblaze B2</span><br><span class=\"line\">   \\ <span class=\"string\">\"b2\"</span></span><br><span class=\"line\"> 6 / Box</span><br><span class=\"line\">   \\ <span class=\"string\">\"box\"</span></span><br><span class=\"line\"> 7 / Cache a remote</span><br><span class=\"line\">   \\ <span class=\"string\">\"cache\"</span></span><br><span class=\"line\"> 8 / Citrix Sharefile</span><br><span class=\"line\">   \\ <span class=\"string\">\"sharefile\"</span></span><br><span class=\"line\"> 9 / Dropbox</span><br><span class=\"line\">   \\ <span class=\"string\">\"dropbox\"</span></span><br><span class=\"line\">10 / Encrypt/Decrypt a remote</span><br><span class=\"line\">   \\ <span class=\"string\">\"crypt\"</span></span><br><span class=\"line\">11 / FTP Connection</span><br><span class=\"line\">   \\ <span class=\"string\">\"ftp\"</span></span><br><span class=\"line\">12 / Google Cloud Storage (this is not Google Drive)</span><br><span class=\"line\">   \\ <span class=\"string\">\"google cloud storage\"</span></span><br><span class=\"line\">13 / Google Drive</span><br><span class=\"line\">   \\ <span class=\"string\">\"drive\"</span></span><br><span class=\"line\">14 / Google Photos</span><br><span class=\"line\">   \\ <span class=\"string\">\"google photos\"</span></span><br><span class=\"line\">15 / Hubic</span><br><span class=\"line\">   \\ <span class=\"string\">\"hubic\"</span></span><br><span class=\"line\">16 / JottaCloud</span><br><span class=\"line\">   \\ <span class=\"string\">\"jottacloud\"</span></span><br><span class=\"line\">17 / Koofr</span><br><span class=\"line\">   \\ <span class=\"string\">\"koofr\"</span></span><br><span class=\"line\">18 / Local Disk</span><br><span class=\"line\">   \\ <span class=\"string\">\"local\"</span></span><br><span class=\"line\">19 / Mail.ru Cloud</span><br><span class=\"line\">   \\ <span class=\"string\">\"mailru\"</span></span><br><span class=\"line\">20 / Mega</span><br><span class=\"line\">   \\ <span class=\"string\">\"mega\"</span></span><br><span class=\"line\">21 / Microsoft Azure Blob Storage</span><br><span class=\"line\">   \\ <span class=\"string\">\"azureblob\"</span></span><br><span class=\"line\">22 / Microsoft OneDrive</span><br><span class=\"line\">   \\ <span class=\"string\">\"onedrive\"</span></span><br><span class=\"line\">23 / OpenDrive</span><br><span class=\"line\">   \\ <span class=\"string\">\"opendrive\"</span></span><br><span class=\"line\">24 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class=\"line\">   \\ <span class=\"string\">\"swift\"</span></span><br><span class=\"line\">25 / Pcloud</span><br><span class=\"line\">   \\ <span class=\"string\">\"pcloud\"</span></span><br><span class=\"line\">26 / Put.io</span><br><span class=\"line\">   \\ <span class=\"string\">\"putio\"</span></span><br><span class=\"line\">27 / QingCloud Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">\"qingstor\"</span></span><br><span class=\"line\">28 / SSH/SFTP Connection</span><br><span class=\"line\">   \\ <span class=\"string\">\"sftp\"</span></span><br><span class=\"line\">29 / Transparently chunk/split large files</span><br><span class=\"line\">   \\ <span class=\"string\">\"chunker\"</span></span><br><span class=\"line\">30 / Union merges the contents of several remotes</span><br><span class=\"line\">   \\ <span class=\"string\">\"union\"</span></span><br><span class=\"line\">31 / Webdav</span><br><span class=\"line\">   \\ <span class=\"string\">\"webdav\"</span></span><br><span class=\"line\">32 / Yandex Disk</span><br><span class=\"line\">   \\ <span class=\"string\">\"yandex\"</span></span><br><span class=\"line\">33 / http Connection</span><br><span class=\"line\">   \\ <span class=\"string\">\"http\"</span></span><br><span class=\"line\">34 / premiumize.me</span><br><span class=\"line\">   \\ <span class=\"string\">\"premiumizeme\"</span></span><br><span class=\"line\">Storage&gt;22</span><br><span class=\"line\">** See <span class=\"built_in\">help</span> <span class=\"keyword\">for</span> onedrive backend at: https://rclone.org/onedrive/ **</span><br><span class=\"line\"></span><br><span class=\"line\">Microsoft App Client Id</span><br><span class=\"line\">Leave blank normally.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">\"\"</span>).</span><br><span class=\"line\">client_id&gt;输入上面“应用程序（客户端）id”</span><br><span class=\"line\">Microsoft App Client Secret</span><br><span class=\"line\">Leave blank normally.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">\"\"</span>).</span><br><span class=\"line\">client_secret&gt;输入上面申请到的“值”</span><br><span class=\"line\">OneDrive operated by 21Vianet (世纪互联).</span><br><span class=\"line\">Enter a boolean value (<span class=\"literal\">true</span> or <span class=\"literal\">false</span>). Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">\"false\"</span>).</span><br><span class=\"line\">is_21vianet_version&gt;<span class=\"literal\">true</span></span><br><span class=\"line\">Edit advanced config? (y/n)</span><br><span class=\"line\">y) Yes</span><br><span class=\"line\">n) No</span><br><span class=\"line\">y/n&gt;n</span><br><span class=\"line\">Use auto config?</span><br><span class=\"line\"> * Say Y <span class=\"keyword\">if</span> not sure</span><br><span class=\"line\"> * Say N <span class=\"keyword\">if</span> you are working on a remote or headless machine</span><br><span class=\"line\">y) Yes</span><br><span class=\"line\">n) No</span><br><span class=\"line\">y/n&gt;y</span><br><span class=\"line\">之后会自动打开一个网页，在这个网页里进行登录，然后继续..</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> an existing value</span><br><span class=\"line\"> 1 / OneDrive Personal or Business</span><br><span class=\"line\">   \\ <span class=\"string\">\"onedrive\"</span></span><br><span class=\"line\"> 2 / Root Sharepoint site</span><br><span class=\"line\">   \\ <span class=\"string\">\"sharepoint\"</span></span><br><span class=\"line\"> 3 / Type <span class=\"keyword\">in</span> driveID</span><br><span class=\"line\">   \\ <span class=\"string\">\"driveid\"</span></span><br><span class=\"line\"> 4 / Type <span class=\"keyword\">in</span> SiteID</span><br><span class=\"line\">   \\ <span class=\"string\">\"siteid\"</span></span><br><span class=\"line\"> 5 / Search a Sharepoint site</span><br><span class=\"line\">   \\ <span class=\"string\">\"search\"</span></span><br><span class=\"line\">Your choice&gt; 1</span><br><span class=\"line\">Found 1 drives, please select the one you want to use:</span><br><span class=\"line\">0: OneDrive (business) id=******</span><br><span class=\"line\">Chose drive to use:&gt;0</span><br><span class=\"line\">Found drive <span class=\"string\">'root'</span> of <span class=\"built_in\">type</span> <span class=\"string\">'business'</span>, URL: https://alphaone-my.sharepoint.cn/personal/***</span><br><span class=\"line\">Is that okay?</span><br><span class=\"line\">y) Yes</span><br><span class=\"line\">n) No</span><br><span class=\"line\">y/n&gt;y</span><br><span class=\"line\">y</span><br><span class=\"line\">q</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>进行挂载</p>\n<p><code>linux</code>需要安装<code>fuse</code>，各大发行版不一样就不详述了，我的<code>manjaro</code>自带。</p>\n<p>命令如下：（其中的/表示需要挂载到本地的<code>onedrive</code>路径，<code>/mnt/</code>表示本机的挂载路径，可对应修改）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">挂载命令：rclone mount onedrive:/ /mnt/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class=\"built_in\">umask</span> 000</span><br><span class=\"line\"></span><br><span class=\"line\">后台挂载命令：nohup rclone mount onedrive:/ /mnt --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class=\"built_in\">umask</span> 000 &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">卸载命令：fusermount -qzu LocalFolder onedrive</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用挂载脚本</p>\n<p>这个挂载脚本能够实现基本的挂载、卸载和重新挂载功能，之后使用的话就没有必要输入那么长的命令了。脚本如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># ------------------------------------------</span></span><br><span class=\"line\">PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/<span class=\"built_in\">local</span>/bin:/usr/<span class=\"built_in\">local</span>/sbin:~/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### BEGIN INIT INFO</span></span><br><span class=\"line\"><span class=\"comment\"># Provides:          rclone</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Start:    $all</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Stop:     $all</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Start:     2 3 4 5</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Stop:      0 1 6</span></span><br><span class=\"line\"><span class=\"comment\"># Short-Description: Start rclone at boot time</span></span><br><span class=\"line\"><span class=\"comment\"># Description:       Enable rclone by daemon.</span></span><br><span class=\"line\"><span class=\"comment\">### END INIT INFO</span></span><br><span class=\"line\"><span class=\"comment\"># ------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># 以上两条横线之间的内容不自启的话可以去掉（个人觉得自启的话去掉应该也没啥影响）</span></span><br><span class=\"line\"></span><br><span class=\"line\">NAME_BIN=<span class=\"string\">\"rclone\"</span></span><br><span class=\"line\">NAME=<span class=\"string\">\"onedrive\"</span></span><br><span class=\"line\">REMOTE=<span class=\"string\">'/'</span> <span class=\"comment\">#需要挂载到本地的onedrive路径，可修改</span></span><br><span class=\"line\">LOCAL=<span class=\"string\">'/mnt/'</span> <span class=\"comment\">#挂载到本地的哪个文件夹，可修改</span></span><br><span class=\"line\"></span><br><span class=\"line\">Green_font_prefix=<span class=\"string\">\"\\033[32m\"</span> &amp;&amp; Red_font_prefix=<span class=\"string\">\"\\033[31m\"</span> &amp;&amp; Green_background_prefix=<span class=\"string\">\"\\033[42;37m\"</span> &amp;&amp; Red_background_prefix=<span class=\"string\">\"\\033[41;37m\"</span> &amp;&amp; Font_color_suffix=<span class=\"string\">\"\\033[0m\"</span></span><br><span class=\"line\">Info=<span class=\"string\">\"<span class=\"variable\">$&#123;Green_font_prefix&#125;</span>[信息]<span class=\"variable\">$&#123;Font_color_suffix&#125;</span>\"</span></span><br><span class=\"line\">Error=<span class=\"string\">\"<span class=\"variable\">$&#123;Red_font_prefix&#125;</span>[错误]<span class=\"variable\">$&#123;Font_color_suffix&#125;</span>\"</span></span><br><span class=\"line\">RETVAL=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">check_running</span></span>()&#123;</span><br><span class=\"line\">    PID=<span class=\"string\">\"<span class=\"variable\">$(ps -C $NAME_BIN -o pid= |head -n1 |grep -o '[0-9]\\&#123;1,\\&#125;')</span>\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$&#123;PID&#125;</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">return</span> 0</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">return</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_start</span></span>()&#123;</span><br><span class=\"line\">    check_running</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ $? -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> (PID <span class=\"variable\">$&#123;PID&#125;</span>) 正在运行...\"</span> &amp;&amp; <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        fusermount -zuq <span class=\"variable\">$LOCAL</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">        mkdir -p <span class=\"variable\">$LOCAL</span></span><br><span class=\"line\">        /usr/bin/rclone mount <span class=\"variable\">$NAME</span>:<span class=\"variable\">$REMOTE</span> <span class=\"variable\">$LOCAL</span> --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class=\"built_in\">umask</span> 000 &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class=\"line\">        check_running</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [[ $? -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> 启动成功 !\"</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Error&#125;</span> <span class=\"variable\">$NAME_BIN</span> 启动失败 !\"</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_stop</span></span>()&#123;</span><br><span class=\"line\">    check_running</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ $? -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">kill</span> -9 <span class=\"variable\">$&#123;PID&#125;</span></span><br><span class=\"line\">        RETVAL=$?</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [[ <span class=\"variable\">$RETVAL</span> -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> 停止成功 !\"</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Error&#125;</span> <span class=\"variable\">$NAME_BIN</span> 停止失败 !\"</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> 未运行\"</span></span><br><span class=\"line\">        RETVAL=1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    fusermount -zuq <span class=\"variable\">$LOCAL</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">    fusermount -zuq <span class=\"variable\">$LOCAL1</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_status</span></span>()&#123;</span><br><span class=\"line\">    check_running</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ $? -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> (PID <span class=\"variable\">$(echo $&#123;PID&#125;)</span>) 正在运行...\"</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> 未运行 !\"</span></span><br><span class=\"line\">        RETVAL=1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_restart</span></span>()&#123;</span><br><span class=\"line\">    do_stop</span><br><span class=\"line\">    do_start</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    start|stop|restart|status)</span><br><span class=\"line\">    do_<span class=\"variable\">$1</span></span><br><span class=\"line\">    ;;</span><br><span class=\"line\">    *)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"使用方法: <span class=\"variable\">$0</span> &#123; start | stop | restart | status &#125;\"</span></span><br><span class=\"line\">    RETVAL=1</span><br><span class=\"line\">    ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> <span class=\"variable\">$RETVAL</span></span><br></pre></td></tr></table></figure>\n\n<p>假设该脚本被保存为<code>rcloned</code>，首先给予可执行权限：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x rcloned的路径</span><br></pre></td></tr></table></figure>\n\n<p>之后可以选择将其移动到环境变量中，使用的时候手动执行<code>rcloned start</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv rcloned的路径 /usr/bin/rcloned</span><br><span class=\"line\"><span class=\"comment\"># 每次使用时</span></span><br><span class=\"line\">rcloned start</span><br></pre></td></tr></table></figure>\n\n<p>也可以选择像原文那样设置为开机自动运行（可能不支持所有发行版）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv rcloned的路径 /etc/init.d/rcloned</span><br><span class=\"line\">sudo /etc/init.d/rcloned start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h2><p><img src=\"https://ae01.alicdn.com/kf/U1042e96d66eb4eff838bcef4b50948b28.png\" alt=\"\"></p>\n<h2 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h2><p>本来打算稍微写写水一篇文章的，没想到一不小心写了这么多…</p>\n<p>中间某些步骤写的过分详细了，希望大家阅读的时候不要嫌我啰嗦 orz</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><p><a href=\"http://docs.zhaojun.im/zfile/\" target=\"_blank\" rel=\"noopener\">zfile官方文档</a></p>\n</li>\n<li><p><a href=\"https://znov.org/notes/16.html\" target=\"_blank\" rel=\"noopener\">znov的博客</a></p>\n</li>\n<li><p><a href=\"https://yiyi.one/\" target=\"_blank\" rel=\"noopener\">Zephyr 杂货铺</a>（我购买账号的地方）</p>\n</li>\n</ol>\n","site":{"data":{}},"length":7817,"excerpt":"<div id=\"aplayer-hvqOyJfG\" class=\"aplayer aplayer-tag-marker\" style=\"margin-bottom: 20px;\">\n            <pre class=\"aplayer-lrc-content\"></pre>\n        </div>\n        <script>\n          var ap = new APlayer({\n            element: document.getElementById(\"aplayer-hvqOyJfG\"),\n            narrow: false,\n            autoplay: false,\n            showlrc: false,\n            music: {\n              title: \"삐삐\",\n              author: \"IU\",\n              url: \"https://alphaone-my.sharepoint.cn/personal/jeasonlau_vip_tg/_layouts/15/download.aspx?SourceUrl=%2Fpersonal%2Fjeasonlau%5Fvip%5Ftg%2FDocuments%2F%E9%9F%B3%E4%B9%90%2FIU%2F%EC%82%90%EC%82%90%2FIU%20%2D%20%EC%82%90%EC%82%90%2Eflac\",\n              pic: \"https://ae01.alicdn.com/kf/Ua6b1c96ff42c499c9751865c0d0b3795e.jpg\",\n              lrc: \"\"\n            }\n          });\n          window.aplayers || (window.aplayers = []);\n          window.aplayers.push(ap);\n        </script>\n\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>很久之前就想有一个网络共享文件夹，即一个既能在本地当做普通文件夹使用，也能通过互联网访问到的文件夹。</p>\n<p>大致对比了一下这些可能能够用于实现该功能的服务：</p>\n<table>\n<thead>\n<tr>\n<th>服务</th>\n<th>优点</th>\n<th>缺点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>以百度云为代表的国内网盘</td>\n<td>存储空间大</td>\n<td>对<code>linux</code>支持差，访问速度慢</td>\n</tr>\n<tr>\n<td><code>google drive/mega</code>等国外网盘</td>\n<td><code>linux</code>客户端支持</td>\n<td>存储空间较小，国内速度慢甚至无法连通</td>\n</tr>\n<tr>\n<td>各类<code>oss</code>服务（例：阿里云<code>oss</code>）</td>\n<td>官方挂载支持，速度无限制</td>\n<td>存储费用、流量费用、请求费用累计，代价昂贵</td>\n</tr>\n<tr>\n<td>服务器空闲存储空间</td>\n<td>可通过<code>sftp</code>访问</td>\n<td>受服务器带宽限制，使用效果并不理想</td>\n</tr>\n</tbody></table>","more":"<p>可以看到各个服务各有优缺点。但最近，我发现了另一款产品：<code>世纪互联版onedrive</code>。它是微软委托国内的世纪互联运营的，对比<code>onedrive</code>国际版，一方面其数据中心位于北京/上海，极大地优化了国内用户的访问速度；另一方面，淘宝有大量低价号贩售，五六十块即可买到“永久”的<code>5T</code>存储空间（此处存疑）。上网查询，发现这个<code>世纪互联版onedrive</code>在本地可以通过<code>魔改rclone</code>实现挂载，在云端可以使用<code>魔改oneindex</code>、<code>zfile</code>等开源项目实现浏览器访问（<strong>不走服务器流量，无限速</strong>），完美满足我的需求，于是入了一个，准备开搞。</p>\n<h2 id=\"需要\"><a href=\"#需要\" class=\"headerlink\" title=\"需要\"></a>需要</h2><ol>\n<li>一台自己的电脑</li>\n<li>一台服务器</li>\n<li><strong>开放api</strong>的<code>世纪互联版onedrive</code>账号（一定要是<strong>开放api</strong>的！）</li>\n</ol>\n<h2 id=\"云端\"><a href=\"#云端\" class=\"headerlink\" title=\"云端\"></a>云端</h2><p>先说简单的云端访问，我使用的是<code>zfile</code>（因为它配置简单，原生支持<code>世纪互联onedrive</code>）。</p>\n<blockquote>\n<p>接下来操作以<code>ubuntu</code>为例，<code>centos</code>请移步<a href=\"http://docs.zhaojun.im/zfile/\" target=\"_blank\" rel=\"noopener\">官方文档</a>。</p>\n</blockquote>\n<p><code>ssh</code>到服务器，首先安装依赖：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y openjdk-8-jre-headless unzip</span><br></pre></td></tr></table></figure>\n\n<p>下载项目，解压并给予可执行权限：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget https://c.jun6.net/ZFILE/zfile-release.war</span><br><span class=\"line\">mkdir zfile &amp;&amp; unzip zfile-release.war -d zfile &amp;&amp; rm -rf zfile-release.war</span><br><span class=\"line\">chmod +x zfile/bin/*.sh</span><br></pre></td></tr></table></figure>\n\n<p>启动项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/zfile/bin/start.sh</span><br></pre></td></tr></table></figure>\n\n<p>接下来访问<code>http://你的公网ip:8080/#/install</code>进行配置。其中的访问令牌和刷新令牌需要访问<a href=\"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize?client_id=4a72d927-1907-488d-9eb2-1b465c53c1c5&response_type=code&redirect_uri=https://zfile.jun6.net/onedrive/china-callback&scope=offline_access%20User.Read%20Files.ReadWrite.All\" target=\"_blank\" rel=\"noopener\">这个网址</a>登录账号后获取，填写成功之后点击确认即配置完成，可以在网页访问到你的<code>onedrive</code>云盘了！</p>\n<h2 id=\"本地\"><a href=\"#本地\" class=\"headerlink\" title=\"本地\"></a>本地</h2><p>接下来配置稍微复杂点儿的本地挂载。</p>\n<p>以下内容转载自<a href=\"https://znov.org/notes/16.html\" target=\"_blank\" rel=\"noopener\">znov的博客</a>，因为他是在服务器挂载，而我是在本机，所以做了少量修改。(windows只需要进行前三步，未经过实测)。</p>\n<ol>\n<li><p><code>世纪互联 OneDrive</code> 获取 <code>CLIENT_ID</code> 及 <code>CLIENT_SECRET</code></p>\n<ol>\n<li>打开<a href=\"https://portal.azure.cn/\" target=\"_blank\" rel=\"noopener\">该网页</a>登录账号。</li>\n<li>左侧找到<code>Azure Active Directory</code>点击<br>左侧找到 <code>应用注册</code> 点击<br>上方找到 <code>新注册</code> 点击<br>名称：<code>onedrive</code><br>受支持的账户类型：<code>任何组织目录</code>（第二个）<br>重定向 URL：<code>http://localhost:53682</code><br>点击注册<br>找到 <code>应用程序(客户端) ID</code> 复制保存<br>左侧找到 <code>证书和密码</code> 点击<br>下方 客户端密码 - <code>新建客户端密码</code><br>说明：<code>onedrive</code><br>截止期限：默认 <code>一年内</code><br>点击 添加，<code>值</code>复制保存<br>左侧找到 <code>API 权限</code> 点击<br>添加权限：<code>Microsoft Graph</code> - <code>委托的权限</code>：全部勾选（这里经我测试只勾选<code>File</code>栏即可）</li>\n</ol>\n</li>\n<li><p>安装配置<code>rclone</code></p>\n<ol>\n<li><p><a href=\"https://drive.jeasonlau.xyz:10000/#/s/K5cp\" target=\"_blank\" rel=\"noopener\">此处下载</a><code>rclone</code>世纪互联版</p>\n<blockquote>\n<p>该文件来源于全球主机论坛爱纯粹大佬，因为原博客的下载链接速度很慢，所以另存了一份。希望大家下载的同时可以顺便去原博客评论支持一下！</p>\n</blockquote>\n</li>\n<li><p><code>linux</code>在当前目录打开<code>terminal</code>，执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv ./rclone的文件名 /usr/bin/rclone</span><br><span class=\"line\">sudo chmod +x /usr/bin/rclone</span><br></pre></td></tr></table></figure>\n\n<p><code>windows</code>请自行查阅如何将文件添加到环境变量中。</p>\n<blockquote>\n<p>注：此步骤非必须，如未执行则将以下语句的<code>rclone</code>改为<code>rclone</code>的路径形式。</p>\n</blockquote>\n</li>\n<li><p>输入<code>rclone config</code>进行如下配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">e) Edit existing remote</span><br><span class=\"line\">n) New remote</span><br><span class=\"line\">d) Delete remote</span><br><span class=\"line\">r) Rename remote</span><br><span class=\"line\">c) Copy remote</span><br><span class=\"line\">s) Set configuration password</span><br><span class=\"line\">q) Quit config</span><br><span class=\"line\">e/n/d/r/c/s/q&gt; n</span><br><span class=\"line\">name&gt;onedrive</span><br><span class=\"line\">Type of storage to configure.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">\"\"</span>).</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> your own value</span><br><span class=\"line\"> 1 / 1Fichier</span><br><span class=\"line\">   \\ <span class=\"string\">\"fichier\"</span></span><br><span class=\"line\"> 2 / Alias <span class=\"keyword\">for</span> an existing remote</span><br><span class=\"line\">   \\ <span class=\"string\">\"alias\"</span></span><br><span class=\"line\"> 3 / Amazon Drive</span><br><span class=\"line\">   \\ <span class=\"string\">\"amazon cloud drive\"</span></span><br><span class=\"line\"> 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)</span><br><span class=\"line\">   \\ <span class=\"string\">\"s3\"</span></span><br><span class=\"line\"> 5 / Backblaze B2</span><br><span class=\"line\">   \\ <span class=\"string\">\"b2\"</span></span><br><span class=\"line\"> 6 / Box</span><br><span class=\"line\">   \\ <span class=\"string\">\"box\"</span></span><br><span class=\"line\"> 7 / Cache a remote</span><br><span class=\"line\">   \\ <span class=\"string\">\"cache\"</span></span><br><span class=\"line\"> 8 / Citrix Sharefile</span><br><span class=\"line\">   \\ <span class=\"string\">\"sharefile\"</span></span><br><span class=\"line\"> 9 / Dropbox</span><br><span class=\"line\">   \\ <span class=\"string\">\"dropbox\"</span></span><br><span class=\"line\">10 / Encrypt/Decrypt a remote</span><br><span class=\"line\">   \\ <span class=\"string\">\"crypt\"</span></span><br><span class=\"line\">11 / FTP Connection</span><br><span class=\"line\">   \\ <span class=\"string\">\"ftp\"</span></span><br><span class=\"line\">12 / Google Cloud Storage (this is not Google Drive)</span><br><span class=\"line\">   \\ <span class=\"string\">\"google cloud storage\"</span></span><br><span class=\"line\">13 / Google Drive</span><br><span class=\"line\">   \\ <span class=\"string\">\"drive\"</span></span><br><span class=\"line\">14 / Google Photos</span><br><span class=\"line\">   \\ <span class=\"string\">\"google photos\"</span></span><br><span class=\"line\">15 / Hubic</span><br><span class=\"line\">   \\ <span class=\"string\">\"hubic\"</span></span><br><span class=\"line\">16 / JottaCloud</span><br><span class=\"line\">   \\ <span class=\"string\">\"jottacloud\"</span></span><br><span class=\"line\">17 / Koofr</span><br><span class=\"line\">   \\ <span class=\"string\">\"koofr\"</span></span><br><span class=\"line\">18 / Local Disk</span><br><span class=\"line\">   \\ <span class=\"string\">\"local\"</span></span><br><span class=\"line\">19 / Mail.ru Cloud</span><br><span class=\"line\">   \\ <span class=\"string\">\"mailru\"</span></span><br><span class=\"line\">20 / Mega</span><br><span class=\"line\">   \\ <span class=\"string\">\"mega\"</span></span><br><span class=\"line\">21 / Microsoft Azure Blob Storage</span><br><span class=\"line\">   \\ <span class=\"string\">\"azureblob\"</span></span><br><span class=\"line\">22 / Microsoft OneDrive</span><br><span class=\"line\">   \\ <span class=\"string\">\"onedrive\"</span></span><br><span class=\"line\">23 / OpenDrive</span><br><span class=\"line\">   \\ <span class=\"string\">\"opendrive\"</span></span><br><span class=\"line\">24 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)</span><br><span class=\"line\">   \\ <span class=\"string\">\"swift\"</span></span><br><span class=\"line\">25 / Pcloud</span><br><span class=\"line\">   \\ <span class=\"string\">\"pcloud\"</span></span><br><span class=\"line\">26 / Put.io</span><br><span class=\"line\">   \\ <span class=\"string\">\"putio\"</span></span><br><span class=\"line\">27 / QingCloud Object Storage</span><br><span class=\"line\">   \\ <span class=\"string\">\"qingstor\"</span></span><br><span class=\"line\">28 / SSH/SFTP Connection</span><br><span class=\"line\">   \\ <span class=\"string\">\"sftp\"</span></span><br><span class=\"line\">29 / Transparently chunk/split large files</span><br><span class=\"line\">   \\ <span class=\"string\">\"chunker\"</span></span><br><span class=\"line\">30 / Union merges the contents of several remotes</span><br><span class=\"line\">   \\ <span class=\"string\">\"union\"</span></span><br><span class=\"line\">31 / Webdav</span><br><span class=\"line\">   \\ <span class=\"string\">\"webdav\"</span></span><br><span class=\"line\">32 / Yandex Disk</span><br><span class=\"line\">   \\ <span class=\"string\">\"yandex\"</span></span><br><span class=\"line\">33 / http Connection</span><br><span class=\"line\">   \\ <span class=\"string\">\"http\"</span></span><br><span class=\"line\">34 / premiumize.me</span><br><span class=\"line\">   \\ <span class=\"string\">\"premiumizeme\"</span></span><br><span class=\"line\">Storage&gt;22</span><br><span class=\"line\">** See <span class=\"built_in\">help</span> <span class=\"keyword\">for</span> onedrive backend at: https://rclone.org/onedrive/ **</span><br><span class=\"line\"></span><br><span class=\"line\">Microsoft App Client Id</span><br><span class=\"line\">Leave blank normally.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">\"\"</span>).</span><br><span class=\"line\">client_id&gt;输入上面“应用程序（客户端）id”</span><br><span class=\"line\">Microsoft App Client Secret</span><br><span class=\"line\">Leave blank normally.</span><br><span class=\"line\">Enter a string value. Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">\"\"</span>).</span><br><span class=\"line\">client_secret&gt;输入上面申请到的“值”</span><br><span class=\"line\">OneDrive operated by 21Vianet (世纪互联).</span><br><span class=\"line\">Enter a boolean value (<span class=\"literal\">true</span> or <span class=\"literal\">false</span>). Press Enter <span class=\"keyword\">for</span> the default (<span class=\"string\">\"false\"</span>).</span><br><span class=\"line\">is_21vianet_version&gt;<span class=\"literal\">true</span></span><br><span class=\"line\">Edit advanced config? (y/n)</span><br><span class=\"line\">y) Yes</span><br><span class=\"line\">n) No</span><br><span class=\"line\">y/n&gt;n</span><br><span class=\"line\">Use auto config?</span><br><span class=\"line\"> * Say Y <span class=\"keyword\">if</span> not sure</span><br><span class=\"line\"> * Say N <span class=\"keyword\">if</span> you are working on a remote or headless machine</span><br><span class=\"line\">y) Yes</span><br><span class=\"line\">n) No</span><br><span class=\"line\">y/n&gt;y</span><br><span class=\"line\">之后会自动打开一个网页，在这个网页里进行登录，然后继续..</span><br><span class=\"line\">Choose a number from below, or <span class=\"built_in\">type</span> <span class=\"keyword\">in</span> an existing value</span><br><span class=\"line\"> 1 / OneDrive Personal or Business</span><br><span class=\"line\">   \\ <span class=\"string\">\"onedrive\"</span></span><br><span class=\"line\"> 2 / Root Sharepoint site</span><br><span class=\"line\">   \\ <span class=\"string\">\"sharepoint\"</span></span><br><span class=\"line\"> 3 / Type <span class=\"keyword\">in</span> driveID</span><br><span class=\"line\">   \\ <span class=\"string\">\"driveid\"</span></span><br><span class=\"line\"> 4 / Type <span class=\"keyword\">in</span> SiteID</span><br><span class=\"line\">   \\ <span class=\"string\">\"siteid\"</span></span><br><span class=\"line\"> 5 / Search a Sharepoint site</span><br><span class=\"line\">   \\ <span class=\"string\">\"search\"</span></span><br><span class=\"line\">Your choice&gt; 1</span><br><span class=\"line\">Found 1 drives, please select the one you want to use:</span><br><span class=\"line\">0: OneDrive (business) id=******</span><br><span class=\"line\">Chose drive to use:&gt;0</span><br><span class=\"line\">Found drive <span class=\"string\">'root'</span> of <span class=\"built_in\">type</span> <span class=\"string\">'business'</span>, URL: https://alphaone-my.sharepoint.cn/personal/***</span><br><span class=\"line\">Is that okay?</span><br><span class=\"line\">y) Yes</span><br><span class=\"line\">n) No</span><br><span class=\"line\">y/n&gt;y</span><br><span class=\"line\">y</span><br><span class=\"line\">q</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>进行挂载</p>\n<p><code>linux</code>需要安装<code>fuse</code>，各大发行版不一样就不详述了，我的<code>manjaro</code>自带。</p>\n<p>命令如下：（其中的/表示需要挂载到本地的<code>onedrive</code>路径，<code>/mnt/</code>表示本机的挂载路径，可对应修改）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">挂载命令：rclone mount onedrive:/ /mnt/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class=\"built_in\">umask</span> 000</span><br><span class=\"line\"></span><br><span class=\"line\">后台挂载命令：nohup rclone mount onedrive:/ /mnt --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class=\"built_in\">umask</span> 000 &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">卸载命令：fusermount -qzu LocalFolder onedrive</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用挂载脚本</p>\n<p>这个挂载脚本能够实现基本的挂载、卸载和重新挂载功能，之后使用的话就没有必要输入那么长的命令了。脚本如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># ------------------------------------------</span></span><br><span class=\"line\">PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/<span class=\"built_in\">local</span>/bin:/usr/<span class=\"built_in\">local</span>/sbin:~/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">### BEGIN INIT INFO</span></span><br><span class=\"line\"><span class=\"comment\"># Provides:          rclone</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Start:    $all</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Stop:     $all</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Start:     2 3 4 5</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Stop:      0 1 6</span></span><br><span class=\"line\"><span class=\"comment\"># Short-Description: Start rclone at boot time</span></span><br><span class=\"line\"><span class=\"comment\"># Description:       Enable rclone by daemon.</span></span><br><span class=\"line\"><span class=\"comment\">### END INIT INFO</span></span><br><span class=\"line\"><span class=\"comment\"># ------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># 以上两条横线之间的内容不自启的话可以去掉（个人觉得自启的话去掉应该也没啥影响）</span></span><br><span class=\"line\"></span><br><span class=\"line\">NAME_BIN=<span class=\"string\">\"rclone\"</span></span><br><span class=\"line\">NAME=<span class=\"string\">\"onedrive\"</span></span><br><span class=\"line\">REMOTE=<span class=\"string\">'/'</span> <span class=\"comment\">#需要挂载到本地的onedrive路径，可修改</span></span><br><span class=\"line\">LOCAL=<span class=\"string\">'/mnt/'</span> <span class=\"comment\">#挂载到本地的哪个文件夹，可修改</span></span><br><span class=\"line\"></span><br><span class=\"line\">Green_font_prefix=<span class=\"string\">\"\\033[32m\"</span> &amp;&amp; Red_font_prefix=<span class=\"string\">\"\\033[31m\"</span> &amp;&amp; Green_background_prefix=<span class=\"string\">\"\\033[42;37m\"</span> &amp;&amp; Red_background_prefix=<span class=\"string\">\"\\033[41;37m\"</span> &amp;&amp; Font_color_suffix=<span class=\"string\">\"\\033[0m\"</span></span><br><span class=\"line\">Info=<span class=\"string\">\"<span class=\"variable\">$&#123;Green_font_prefix&#125;</span>[信息]<span class=\"variable\">$&#123;Font_color_suffix&#125;</span>\"</span></span><br><span class=\"line\">Error=<span class=\"string\">\"<span class=\"variable\">$&#123;Red_font_prefix&#125;</span>[错误]<span class=\"variable\">$&#123;Font_color_suffix&#125;</span>\"</span></span><br><span class=\"line\">RETVAL=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">check_running</span></span>()&#123;</span><br><span class=\"line\">    PID=<span class=\"string\">\"<span class=\"variable\">$(ps -C $NAME_BIN -o pid= |head -n1 |grep -o '[0-9]\\&#123;1,\\&#125;')</span>\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ ! -z <span class=\"variable\">$&#123;PID&#125;</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">return</span> 0</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">return</span> 1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_start</span></span>()&#123;</span><br><span class=\"line\">    check_running</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ $? -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> (PID <span class=\"variable\">$&#123;PID&#125;</span>) 正在运行...\"</span> &amp;&amp; <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        fusermount -zuq <span class=\"variable\">$LOCAL</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">        mkdir -p <span class=\"variable\">$LOCAL</span></span><br><span class=\"line\">        /usr/bin/rclone mount <span class=\"variable\">$NAME</span>:<span class=\"variable\">$REMOTE</span> <span class=\"variable\">$LOCAL</span> --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class=\"built_in\">umask</span> 000 &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class=\"line\">        check_running</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [[ $? -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> 启动成功 !\"</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Error&#125;</span> <span class=\"variable\">$NAME_BIN</span> 启动失败 !\"</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_stop</span></span>()&#123;</span><br><span class=\"line\">    check_running</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ $? -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">kill</span> -9 <span class=\"variable\">$&#123;PID&#125;</span></span><br><span class=\"line\">        RETVAL=$?</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [[ <span class=\"variable\">$RETVAL</span> -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> 停止成功 !\"</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Error&#125;</span> <span class=\"variable\">$NAME_BIN</span> 停止失败 !\"</span></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> 未运行\"</span></span><br><span class=\"line\">        RETVAL=1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    fusermount -zuq <span class=\"variable\">$LOCAL</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">    fusermount -zuq <span class=\"variable\">$LOCAL1</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_status</span></span>()&#123;</span><br><span class=\"line\">    check_running</span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ $? -eq 0 ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> (PID <span class=\"variable\">$(echo $&#123;PID&#125;)</span>) 正在运行...\"</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">\"<span class=\"variable\">$&#123;Info&#125;</span> <span class=\"variable\">$NAME_BIN</span> 未运行 !\"</span></span><br><span class=\"line\">        RETVAL=1</span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_restart</span></span>()&#123;</span><br><span class=\"line\">    do_stop</span><br><span class=\"line\">    do_start</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">    start|stop|restart|status)</span><br><span class=\"line\">    do_<span class=\"variable\">$1</span></span><br><span class=\"line\">    ;;</span><br><span class=\"line\">    *)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"使用方法: <span class=\"variable\">$0</span> &#123; start | stop | restart | status &#125;\"</span></span><br><span class=\"line\">    RETVAL=1</span><br><span class=\"line\">    ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> <span class=\"variable\">$RETVAL</span></span><br></pre></td></tr></table></figure>\n\n<p>假设该脚本被保存为<code>rcloned</code>，首先给予可执行权限：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x rcloned的路径</span><br></pre></td></tr></table></figure>\n\n<p>之后可以选择将其移动到环境变量中，使用的时候手动执行<code>rcloned start</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv rcloned的路径 /usr/bin/rcloned</span><br><span class=\"line\"><span class=\"comment\"># 每次使用时</span></span><br><span class=\"line\">rcloned start</span><br></pre></td></tr></table></figure>\n\n<p>也可以选择像原文那样设置为开机自动运行（可能不支持所有发行版）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv rcloned的路径 /etc/init.d/rcloned</span><br><span class=\"line\">sudo /etc/init.d/rcloned start</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"截图\"><a href=\"#截图\" class=\"headerlink\" title=\"截图\"></a>截图</h2><p><img src=\"https://ae01.alicdn.com/kf/U1042e96d66eb4eff838bcef4b50948b28.png\" alt=\"\"></p>\n<h2 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h2><p>本来打算稍微写写水一篇文章的，没想到一不小心写了这么多…</p>\n<p>中间某些步骤写的过分详细了，希望大家阅读的时候不要嫌我啰嗦 orz</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ol>\n<li><p><a href=\"http://docs.zhaojun.im/zfile/\" target=\"_blank\" rel=\"noopener\">zfile官方文档</a></p>\n</li>\n<li><p><a href=\"https://znov.org/notes/16.html\" target=\"_blank\" rel=\"noopener\">znov的博客</a></p>\n</li>\n<li><p><a href=\"https://yiyi.one/\" target=\"_blank\" rel=\"noopener\">Zephyr 杂货铺</a>（我购买账号的地方）</p>\n</li>\n</ol>"},{"title":"本站更换主题啦！","date":"2020-01-29T14:29:44.000Z","_content":"\n故事要从四天前说起...\n\n那天，我像往常一样刷着网站，偶然发现了[DIYgod](https://diygod.me/)大佬的博客，看着这精美的主题，再回头审视一下自己使用的简陋到爆的`next`，不禁萌生了更换主题的想法。\n\n<!--more-->\n\n根据`footer`里的信息，我找到了这个主题`Sagiri`的托管地址，将其下载了下来，配置好`_config.yml`文件并`hexo s`，本以为事情就这样结束了。然并卵，我发现有很多功能都无法正常使用，正如他本人在[这篇文章](https://diygod.me/new-blog/)中写的一样：\n\n> 主题虽然开源了，但是属于自用性质的项目，很多应该做成可定制化的地方都没有做，从开源项目的视角来看做得并不好，而我目前又对制作主题并没有太高的兴致，所以使用之前还请慎重考虑\n\n然而这是后话了，当时的我并没有看到这些，于是头铁地开始了主题文件的增删改查之路（此处省略一万字）。\n\n----\n\n四天过去了，通过对文件的深度剖析（指删除很多本来就有的模块然后重新添加），我深刻地了解了`css`、`html`和`javascript`，明白了`hexo`主题的组织形式（并没有），于是准备记录一下这个主题部分特性的实现方式：\n\n1. 网页无刷新跳转/自动滚动到正文\n\n   使用`pjax`实现，主要参考[这篇文章](https://liuyib.github.io/2019/09/24/use-pjax-to-your-site/)。\n\n2. 根据网页状态动态修改标题\n\n   ```javascript\n   // cheat.js\n   var OriginTitle = document.title;\n   var titleTime;\n   document.addEventListener('visibilitychange', function () {\n       if (document.hidden) {\n           $('[rel=\"icon\"]').attr('href', \"/images/failure.ico\");\n           document.title = '╭(°A°`)╮ 页面崩溃啦 ~';\n           clearTimeout(titleTime);\n       }\n       else {\n           $('[rel=\"icon\"]').attr('href', \"/images/favicon.ico\");\n           document.title = '(ฅ>ω<*ฅ) 噫又好了~' + OriginTitle;\n           titleTime = setTimeout(function () {\n               document.title = OriginTitle;\n           }, 2000);\n       }\n   });\n   ```\n\n3. 随机的丝带背景\n\n   ```javascript\n   // evan-you.js\n   /*<canvas id=\"evanyou\"></canvas>*/\n   if (document.getElementById('evanyou')) {\n     var c = document.getElementById('evanyou'),\n       x = c.getContext('2d'),\n       pr = window.devicePixelRatio || 1,\n       w = window.innerWidth,\n       h = window.innerHeight,\n       f = 90,\n       q,\n       m = Math,\n       r = 0,\n       u = m.PI * 2,\n       v = m.cos,\n       z = m.random\n     c.width = w * pr\n     c.height = h * pr\n     x.scale(pr, pr)\n     x.globalAlpha = 0.6\n     function evanyou () {\n       x.clearRect(0, 0, w, h)\n       q = [{ x: 0, y: h * .7 + f }, { x: 0, y: h * .7 - f }]\n       while (q[1].x < w + f) d(q[0], q[1])\n     }\n     function d (i, j) {\n       x.beginPath()\n       x.moveTo(i.x, i.y)\n       x.lineTo(j.x, j.y)\n       var k = j.x + (z() * 2 - 0.25) * f,\n         n = y(j.y)\n       x.lineTo(k, n)\n       x.closePath()\n       r -= u / -50\n       x.fillStyle = '#' + (v(r) * 127 + 128 << 16 | v(r + u / 3) * 127 + 128 << 8 | v(r + u / 3 * 2) * 127 + 128).toString(16)\n       x.fill()\n       q[0] = q[1]\n       q[1] = { x: k, y: n }\n     }\n     function y (p) {\n       var t = p + (z() * 2 - 1.1) * f\n       return (t > h || t < 0) ? y(p) : t\n     }\n     document.onclick = evanyou\n     document.ontouchstart = evanyou\n     evanyou()\n   }\n   ```\n\n4. 点击的烟花效果\n\n   ```javascript\n   // fireworks.js\n   class Circle {\n     constructor({ origin, speed, color, angle, context }) {\n       this.origin = origin\n       this.position = { ...this.origin }\n       this.color = color\n       this.speed = speed\n       this.angle = angle\n       this.context = context\n       this.renderCount = 0\n     }\n   \n     draw() {\n       this.context.fillStyle = this.color\n       this.context.beginPath()\n       this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2)\n       this.context.fill()\n     }\n   \n     move() {\n       this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x\n       this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3)\n       this.renderCount++\n     }\n   }\n   \n   class Boom {\n     constructor ({ origin, context, circleCount = 16, area }) {\n       this.origin = origin\n       this.context = context\n       this.circleCount = circleCount\n       this.area = area\n       this.stop = false\n       this.circles = []\n     }\n   \n     randomArray(range) {\n       const length = range.length\n       const randomIndex = Math.floor(length * Math.random())\n       return range[randomIndex]\n     }\n   \n     randomColor() {\n       const range = ['8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\n       return '#' + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range)\n     }\n   \n     randomRange(start, end) {\n       return (end - start) * Math.random() + start\n     }\n   \n     init() {\n       for(let i = 0; i < this.circleCount; i++) {\n         const circle = new Circle({\n           context: this.context,\n           origin: this.origin,\n           color: this.randomColor(),\n           angle: this.randomRange(Math.PI - 1, Math.PI + 1),\n           speed: this.randomRange(1, 6)\n         })\n         this.circles.push(circle)\n       }\n     }\n   \n     move() {\n       this.circles.forEach((circle, index) => {\n         if (circle.position.x > this.area.width || circle.position.y > this.area.height) {\n           return this.circles.splice(index, 1)\n         }\n         circle.move()\n       })\n       if (this.circles.length == 0) {\n         this.stop = true\n       }\n     }\n   \n     draw() {\n       this.circles.forEach(circle => circle.draw())\n     }\n   }\n   \n   class CursorSpecialEffects {\n     constructor() {\n       this.computerCanvas = document.createElement('canvas')\n       this.renderCanvas = document.createElement('canvas')\n   \n       this.computerContext = this.computerCanvas.getContext('2d')\n       this.renderContext = this.renderCanvas.getContext('2d')\n   \n       this.globalWidth = window.innerWidth\n       this.globalHeight = window.innerHeight\n   \n       this.booms = []\n       this.running = false\n     }\n   \n     handleMouseDown(e) {\n       const boom = new Boom({\n         origin: { x: e.clientX, y: e.clientY },\n         context: this.computerContext,\n         area: {\n           width: this.globalWidth,\n           height: this.globalHeight\n         }\n       })\n       boom.init()\n       this.booms.push(boom)\n       this.running || this.run()\n     }\n   \n     handlePageHide() {\n       this.booms = []\n       this.running = false\n     }\n   \n     init() {\n       const style = this.renderCanvas.style\n       style.position = 'fixed'\n       style.top = style.left = 0\n       style.zIndex = '999999999999999999999999999999999999999999'\n       style.pointerEvents = 'none'\n   \n       style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth\n       style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight\n   \n       document.body.append(this.renderCanvas)\n   \n       window.addEventListener('mousedown', this.handleMouseDown.bind(this))\n       window.addEventListener('pagehide', this.handlePageHide.bind(this))\n     }\n   \n     run() {\n       this.running = true\n       if (this.booms.length == 0) {\n         return this.running = false\n       }\n   \n       requestAnimationFrame(this.run.bind(this))\n   \n       this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight)\n       this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight)\n   \n       this.booms.forEach((boom, index) => {\n         if (boom.stop) {\n           return this.booms.splice(index, 1)\n         }\n         boom.move()\n         boom.draw()\n       })\n       this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight)\n     }\n   }\n   \n   const cursorSpecialEffects = new CursorSpecialEffects()\n   cursorSpecialEffects.init()\n   ```\n\n5. 侧栏的固定\n\n   使用`affix`实现，主要参考[这篇文章](https://www.runoob.com/bootstrap/bootstrap-affix-plugin.html)。\n   \n6. `valine`评论系统支持`pjax`\n\n   参考[这个issue](https://github.com/xCss/Valine/issues/138)。\n\n----\n\n害，换个主题真的太难了，**一年之内不打算再换了！**\n\n好了，写完去睡觉啦 XD！\n\n----\n\n***2020.1.30\t23:12:33***\n\n全站由`github`迁移到`coding`，国内浏览速度得到大幅提升。（香港服务器就是香啊！）","source":"_posts/changeTheme.md","raw":"---\ntitle: 本站更换主题啦！\ndate: 2020-01-29 22:29:44\ntags: website\ncategories: 网站建设\n---\n\n故事要从四天前说起...\n\n那天，我像往常一样刷着网站，偶然发现了[DIYgod](https://diygod.me/)大佬的博客，看着这精美的主题，再回头审视一下自己使用的简陋到爆的`next`，不禁萌生了更换主题的想法。\n\n<!--more-->\n\n根据`footer`里的信息，我找到了这个主题`Sagiri`的托管地址，将其下载了下来，配置好`_config.yml`文件并`hexo s`，本以为事情就这样结束了。然并卵，我发现有很多功能都无法正常使用，正如他本人在[这篇文章](https://diygod.me/new-blog/)中写的一样：\n\n> 主题虽然开源了，但是属于自用性质的项目，很多应该做成可定制化的地方都没有做，从开源项目的视角来看做得并不好，而我目前又对制作主题并没有太高的兴致，所以使用之前还请慎重考虑\n\n然而这是后话了，当时的我并没有看到这些，于是头铁地开始了主题文件的增删改查之路（此处省略一万字）。\n\n----\n\n四天过去了，通过对文件的深度剖析（指删除很多本来就有的模块然后重新添加），我深刻地了解了`css`、`html`和`javascript`，明白了`hexo`主题的组织形式（并没有），于是准备记录一下这个主题部分特性的实现方式：\n\n1. 网页无刷新跳转/自动滚动到正文\n\n   使用`pjax`实现，主要参考[这篇文章](https://liuyib.github.io/2019/09/24/use-pjax-to-your-site/)。\n\n2. 根据网页状态动态修改标题\n\n   ```javascript\n   // cheat.js\n   var OriginTitle = document.title;\n   var titleTime;\n   document.addEventListener('visibilitychange', function () {\n       if (document.hidden) {\n           $('[rel=\"icon\"]').attr('href', \"/images/failure.ico\");\n           document.title = '╭(°A°`)╮ 页面崩溃啦 ~';\n           clearTimeout(titleTime);\n       }\n       else {\n           $('[rel=\"icon\"]').attr('href', \"/images/favicon.ico\");\n           document.title = '(ฅ>ω<*ฅ) 噫又好了~' + OriginTitle;\n           titleTime = setTimeout(function () {\n               document.title = OriginTitle;\n           }, 2000);\n       }\n   });\n   ```\n\n3. 随机的丝带背景\n\n   ```javascript\n   // evan-you.js\n   /*<canvas id=\"evanyou\"></canvas>*/\n   if (document.getElementById('evanyou')) {\n     var c = document.getElementById('evanyou'),\n       x = c.getContext('2d'),\n       pr = window.devicePixelRatio || 1,\n       w = window.innerWidth,\n       h = window.innerHeight,\n       f = 90,\n       q,\n       m = Math,\n       r = 0,\n       u = m.PI * 2,\n       v = m.cos,\n       z = m.random\n     c.width = w * pr\n     c.height = h * pr\n     x.scale(pr, pr)\n     x.globalAlpha = 0.6\n     function evanyou () {\n       x.clearRect(0, 0, w, h)\n       q = [{ x: 0, y: h * .7 + f }, { x: 0, y: h * .7 - f }]\n       while (q[1].x < w + f) d(q[0], q[1])\n     }\n     function d (i, j) {\n       x.beginPath()\n       x.moveTo(i.x, i.y)\n       x.lineTo(j.x, j.y)\n       var k = j.x + (z() * 2 - 0.25) * f,\n         n = y(j.y)\n       x.lineTo(k, n)\n       x.closePath()\n       r -= u / -50\n       x.fillStyle = '#' + (v(r) * 127 + 128 << 16 | v(r + u / 3) * 127 + 128 << 8 | v(r + u / 3 * 2) * 127 + 128).toString(16)\n       x.fill()\n       q[0] = q[1]\n       q[1] = { x: k, y: n }\n     }\n     function y (p) {\n       var t = p + (z() * 2 - 1.1) * f\n       return (t > h || t < 0) ? y(p) : t\n     }\n     document.onclick = evanyou\n     document.ontouchstart = evanyou\n     evanyou()\n   }\n   ```\n\n4. 点击的烟花效果\n\n   ```javascript\n   // fireworks.js\n   class Circle {\n     constructor({ origin, speed, color, angle, context }) {\n       this.origin = origin\n       this.position = { ...this.origin }\n       this.color = color\n       this.speed = speed\n       this.angle = angle\n       this.context = context\n       this.renderCount = 0\n     }\n   \n     draw() {\n       this.context.fillStyle = this.color\n       this.context.beginPath()\n       this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2)\n       this.context.fill()\n     }\n   \n     move() {\n       this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x\n       this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3)\n       this.renderCount++\n     }\n   }\n   \n   class Boom {\n     constructor ({ origin, context, circleCount = 16, area }) {\n       this.origin = origin\n       this.context = context\n       this.circleCount = circleCount\n       this.area = area\n       this.stop = false\n       this.circles = []\n     }\n   \n     randomArray(range) {\n       const length = range.length\n       const randomIndex = Math.floor(length * Math.random())\n       return range[randomIndex]\n     }\n   \n     randomColor() {\n       const range = ['8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\n       return '#' + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range)\n     }\n   \n     randomRange(start, end) {\n       return (end - start) * Math.random() + start\n     }\n   \n     init() {\n       for(let i = 0; i < this.circleCount; i++) {\n         const circle = new Circle({\n           context: this.context,\n           origin: this.origin,\n           color: this.randomColor(),\n           angle: this.randomRange(Math.PI - 1, Math.PI + 1),\n           speed: this.randomRange(1, 6)\n         })\n         this.circles.push(circle)\n       }\n     }\n   \n     move() {\n       this.circles.forEach((circle, index) => {\n         if (circle.position.x > this.area.width || circle.position.y > this.area.height) {\n           return this.circles.splice(index, 1)\n         }\n         circle.move()\n       })\n       if (this.circles.length == 0) {\n         this.stop = true\n       }\n     }\n   \n     draw() {\n       this.circles.forEach(circle => circle.draw())\n     }\n   }\n   \n   class CursorSpecialEffects {\n     constructor() {\n       this.computerCanvas = document.createElement('canvas')\n       this.renderCanvas = document.createElement('canvas')\n   \n       this.computerContext = this.computerCanvas.getContext('2d')\n       this.renderContext = this.renderCanvas.getContext('2d')\n   \n       this.globalWidth = window.innerWidth\n       this.globalHeight = window.innerHeight\n   \n       this.booms = []\n       this.running = false\n     }\n   \n     handleMouseDown(e) {\n       const boom = new Boom({\n         origin: { x: e.clientX, y: e.clientY },\n         context: this.computerContext,\n         area: {\n           width: this.globalWidth,\n           height: this.globalHeight\n         }\n       })\n       boom.init()\n       this.booms.push(boom)\n       this.running || this.run()\n     }\n   \n     handlePageHide() {\n       this.booms = []\n       this.running = false\n     }\n   \n     init() {\n       const style = this.renderCanvas.style\n       style.position = 'fixed'\n       style.top = style.left = 0\n       style.zIndex = '999999999999999999999999999999999999999999'\n       style.pointerEvents = 'none'\n   \n       style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth\n       style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight\n   \n       document.body.append(this.renderCanvas)\n   \n       window.addEventListener('mousedown', this.handleMouseDown.bind(this))\n       window.addEventListener('pagehide', this.handlePageHide.bind(this))\n     }\n   \n     run() {\n       this.running = true\n       if (this.booms.length == 0) {\n         return this.running = false\n       }\n   \n       requestAnimationFrame(this.run.bind(this))\n   \n       this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight)\n       this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight)\n   \n       this.booms.forEach((boom, index) => {\n         if (boom.stop) {\n           return this.booms.splice(index, 1)\n         }\n         boom.move()\n         boom.draw()\n       })\n       this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight)\n     }\n   }\n   \n   const cursorSpecialEffects = new CursorSpecialEffects()\n   cursorSpecialEffects.init()\n   ```\n\n5. 侧栏的固定\n\n   使用`affix`实现，主要参考[这篇文章](https://www.runoob.com/bootstrap/bootstrap-affix-plugin.html)。\n   \n6. `valine`评论系统支持`pjax`\n\n   参考[这个issue](https://github.com/xCss/Valine/issues/138)。\n\n----\n\n害，换个主题真的太难了，**一年之内不打算再换了！**\n\n好了，写完去睡觉啦 XD！\n\n----\n\n***2020.1.30\t23:12:33***\n\n全站由`github`迁移到`coding`，国内浏览速度得到大幅提升。（香港服务器就是香啊！）","slug":"changeTheme","published":1,"updated":"2020-02-28T04:05:16.933Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp6j001whpz6bzy4gdtw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>故事要从四天前说起…</p>\n<p>那天，我像往常一样刷着网站，偶然发现了<a href=\"https://diygod.me/\" target=\"_blank\" rel=\"noopener\">DIYgod</a>大佬的博客，看着这精美的主题，再回头审视一下自己使用的简陋到爆的<code>next</code>，不禁萌生了更换主题的想法。</p>\n<a id=\"more\"></a>\n\n<p>根据<code>footer</code>里的信息，我找到了这个主题<code>Sagiri</code>的托管地址，将其下载了下来，配置好<code>_config.yml</code>文件并<code>hexo s</code>，本以为事情就这样结束了。然并卵，我发现有很多功能都无法正常使用，正如他本人在<a href=\"https://diygod.me/new-blog/\" target=\"_blank\" rel=\"noopener\">这篇文章</a>中写的一样：</p>\n<blockquote>\n<p>主题虽然开源了，但是属于自用性质的项目，很多应该做成可定制化的地方都没有做，从开源项目的视角来看做得并不好，而我目前又对制作主题并没有太高的兴致，所以使用之前还请慎重考虑</p>\n</blockquote>\n<p>然而这是后话了，当时的我并没有看到这些，于是头铁地开始了主题文件的增删改查之路（此处省略一万字）。</p>\n<hr>\n<p>四天过去了，通过对文件的深度剖析（指删除很多本来就有的模块然后重新添加），我深刻地了解了<code>css</code>、<code>html</code>和<code>javascript</code>，明白了<code>hexo</code>主题的组织形式（并没有），于是准备记录一下这个主题部分特性的实现方式：</p>\n<ol>\n<li><p>网页无刷新跳转/自动滚动到正文</p>\n<p>使用<code>pjax</code>实现，主要参考<a href=\"https://liuyib.github.io/2019/09/24/use-pjax-to-your-site/\" target=\"_blank\" rel=\"noopener\">这篇文章</a>。</p>\n</li>\n<li><p>根据网页状态动态修改标题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// cheat.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> OriginTitle = <span class=\"built_in\">document</span>.title;</span><br><span class=\"line\"><span class=\"keyword\">var</span> titleTime;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'visibilitychange'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.hidden) &#123;</span><br><span class=\"line\">        $(<span class=\"string\">'[rel=\"icon\"]'</span>).attr(<span class=\"string\">'href'</span>, <span class=\"string\">\"/images/failure.ico\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = <span class=\"string\">'╭(°A°`)╮ 页面崩溃啦 ~'</span>;</span><br><span class=\"line\">        clearTimeout(titleTime);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        $(<span class=\"string\">'[rel=\"icon\"]'</span>).attr(<span class=\"string\">'href'</span>, <span class=\"string\">\"/images/favicon.ico\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = <span class=\"string\">'(ฅ&gt;ω&lt;*ฅ) 噫又好了~'</span> + OriginTitle;</span><br><span class=\"line\">        titleTime = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.title = OriginTitle;</span><br><span class=\"line\">        &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>随机的丝带背景</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// evan-you.js</span></span><br><span class=\"line\"><span class=\"comment\">/*&lt;canvas id=\"evanyou\"&gt;&lt;/canvas&gt;*/</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'evanyou'</span>)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'evanyou'</span>),</span><br><span class=\"line\">    x = c.getContext(<span class=\"string\">'2d'</span>),</span><br><span class=\"line\">    pr = <span class=\"built_in\">window</span>.devicePixelRatio || <span class=\"number\">1</span>,</span><br><span class=\"line\">    w = <span class=\"built_in\">window</span>.innerWidth,</span><br><span class=\"line\">    h = <span class=\"built_in\">window</span>.innerHeight,</span><br><span class=\"line\">    f = <span class=\"number\">90</span>,</span><br><span class=\"line\">    q,</span><br><span class=\"line\">    m = <span class=\"built_in\">Math</span>,</span><br><span class=\"line\">    r = <span class=\"number\">0</span>,</span><br><span class=\"line\">    u = m.PI * <span class=\"number\">2</span>,</span><br><span class=\"line\">    v = m.cos,</span><br><span class=\"line\">    z = m.random</span><br><span class=\"line\">  c.width = w * pr</span><br><span class=\"line\">  c.height = h * pr</span><br><span class=\"line\">  x.scale(pr, pr)</span><br><span class=\"line\">  x.globalAlpha = <span class=\"number\">0.6</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">evanyou</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    x.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, w, h)</span><br><span class=\"line\">    q = [&#123; <span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: h * <span class=\"number\">.7</span> + f &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: h * <span class=\"number\">.7</span> - f &#125;]</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (q[<span class=\"number\">1</span>].x &lt; w + f) d(q[<span class=\"number\">0</span>], q[<span class=\"number\">1</span>])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">d</span> (<span class=\"params\">i, j</span>) </span>&#123;</span><br><span class=\"line\">    x.beginPath()</span><br><span class=\"line\">    x.moveTo(i.x, i.y)</span><br><span class=\"line\">    x.lineTo(j.x, j.y)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> k = j.x + (z() * <span class=\"number\">2</span> - <span class=\"number\">0.25</span>) * f,</span><br><span class=\"line\">      n = y(j.y)</span><br><span class=\"line\">    x.lineTo(k, n)</span><br><span class=\"line\">    x.closePath()</span><br><span class=\"line\">    r -= u / <span class=\"number\">-50</span></span><br><span class=\"line\">    x.fillStyle = <span class=\"string\">'#'</span> + (v(r) * <span class=\"number\">127</span> + <span class=\"number\">128</span> &lt;&lt; <span class=\"number\">16</span> | v(r + u / <span class=\"number\">3</span>) * <span class=\"number\">127</span> + <span class=\"number\">128</span> &lt;&lt; <span class=\"number\">8</span> | v(r + u / <span class=\"number\">3</span> * <span class=\"number\">2</span>) * <span class=\"number\">127</span> + <span class=\"number\">128</span>).toString(<span class=\"number\">16</span>)</span><br><span class=\"line\">    x.fill()</span><br><span class=\"line\">    q[<span class=\"number\">0</span>] = q[<span class=\"number\">1</span>]</span><br><span class=\"line\">    q[<span class=\"number\">1</span>] = &#123; <span class=\"attr\">x</span>: k, <span class=\"attr\">y</span>: n &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> (<span class=\"params\">p</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> t = p + (z() * <span class=\"number\">2</span> - <span class=\"number\">1.1</span>) * f</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (t &gt; h || t &lt; <span class=\"number\">0</span>) ? y(p) : t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.onclick = evanyou</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.ontouchstart = evanyou</span><br><span class=\"line\">  evanyou()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击的烟花效果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// fireworks.js</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(&#123; origin, speed, color, angle, context &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.origin = origin</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.position = &#123; ...this.origin &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.color = color</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.speed = speed</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.angle = angle</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context = context</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderCount = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  draw() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context.fillStyle = <span class=\"keyword\">this</span>.color</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context.beginPath()</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context.arc(<span class=\"keyword\">this</span>.position.x, <span class=\"keyword\">this</span>.position.y, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"built_in\">Math</span>.PI * <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context.fill()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  move() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.position.x = (<span class=\"built_in\">Math</span>.sin(<span class=\"keyword\">this</span>.angle) * <span class=\"keyword\">this</span>.speed) + <span class=\"keyword\">this</span>.position.x</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.position.y = (<span class=\"built_in\">Math</span>.cos(<span class=\"keyword\">this</span>.angle) * <span class=\"keyword\">this</span>.speed) + <span class=\"keyword\">this</span>.position.y + (<span class=\"keyword\">this</span>.renderCount * <span class=\"number\">0.3</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderCount++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Boom</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> (&#123; origin, context, circleCount = <span class=\"number\">16</span>, area &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.origin = origin</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context = context</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.circleCount = circleCount</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.area = area</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.stop = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.circles = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  randomArray(range) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> length = range.length</span><br><span class=\"line\">    <span class=\"keyword\">const</span> randomIndex = <span class=\"built_in\">Math</span>.floor(length * <span class=\"built_in\">Math</span>.random())</span><br><span class=\"line\">    <span class=\"keyword\">return</span> range[randomIndex]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  randomColor() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> range = [<span class=\"string\">'8'</span>, <span class=\"string\">'9'</span>, <span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>, <span class=\"string\">'D'</span>, <span class=\"string\">'E'</span>, <span class=\"string\">'F'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'#'</span> + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  randomRange(start, end) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (end - start) * <span class=\"built_in\">Math</span>.random() + start</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  init() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.circleCount; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> circle = <span class=\"keyword\">new</span> Circle(&#123;</span><br><span class=\"line\">        context: <span class=\"keyword\">this</span>.context,</span><br><span class=\"line\">        origin: <span class=\"keyword\">this</span>.origin,</span><br><span class=\"line\">        color: <span class=\"keyword\">this</span>.randomColor(),</span><br><span class=\"line\">        angle: <span class=\"keyword\">this</span>.randomRange(<span class=\"built_in\">Math</span>.PI - <span class=\"number\">1</span>, <span class=\"built_in\">Math</span>.PI + <span class=\"number\">1</span>),</span><br><span class=\"line\">        speed: <span class=\"keyword\">this</span>.randomRange(<span class=\"number\">1</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.circles.push(circle)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  move() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.circles.forEach(<span class=\"function\">(<span class=\"params\">circle, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (circle.position.x &gt; <span class=\"keyword\">this</span>.area.width || circle.position.y &gt; <span class=\"keyword\">this</span>.area.height) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.circles.splice(index, <span class=\"number\">1</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      circle.move()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.circles.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.stop = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  draw() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.circles.forEach(<span class=\"function\"><span class=\"params\">circle</span> =&gt;</span> circle.draw())</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CursorSpecialEffects</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.computerCanvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderCanvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.computerContext = <span class=\"keyword\">this</span>.computerCanvas.getContext(<span class=\"string\">'2d'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderContext = <span class=\"keyword\">this</span>.renderCanvas.getContext(<span class=\"string\">'2d'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.globalWidth = <span class=\"built_in\">window</span>.innerWidth</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.globalHeight = <span class=\"built_in\">window</span>.innerHeight</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.booms = []</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.running = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleMouseDown(e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> boom = <span class=\"keyword\">new</span> Boom(&#123;</span><br><span class=\"line\">      origin: &#123; <span class=\"attr\">x</span>: e.clientX, <span class=\"attr\">y</span>: e.clientY &#125;,</span><br><span class=\"line\">      context: <span class=\"keyword\">this</span>.computerContext,</span><br><span class=\"line\">      area: &#123;</span><br><span class=\"line\">        width: <span class=\"keyword\">this</span>.globalWidth,</span><br><span class=\"line\">        height: <span class=\"keyword\">this</span>.globalHeight</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    boom.init()</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.booms.push(boom)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.running || <span class=\"keyword\">this</span>.run()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handlePageHide() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.booms = []</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.running = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  init() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> style = <span class=\"keyword\">this</span>.renderCanvas.style</span><br><span class=\"line\">    style.position = <span class=\"string\">'fixed'</span></span><br><span class=\"line\">    style.top = style.left = <span class=\"number\">0</span></span><br><span class=\"line\">    style.zIndex = <span class=\"string\">'999999999999999999999999999999999999999999'</span></span><br><span class=\"line\">    style.pointerEvents = <span class=\"string\">'none'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    style.width = <span class=\"keyword\">this</span>.renderCanvas.width = <span class=\"keyword\">this</span>.computerCanvas.width = <span class=\"keyword\">this</span>.globalWidth</span><br><span class=\"line\">    style.height = <span class=\"keyword\">this</span>.renderCanvas.height = <span class=\"keyword\">this</span>.computerCanvas.height = <span class=\"keyword\">this</span>.globalHeight</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.append(<span class=\"keyword\">this</span>.renderCanvas)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'mousedown'</span>, <span class=\"keyword\">this</span>.handleMouseDown.bind(<span class=\"keyword\">this</span>))</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'pagehide'</span>, <span class=\"keyword\">this</span>.handlePageHide.bind(<span class=\"keyword\">this</span>))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.running = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.booms.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.running = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    requestAnimationFrame(<span class=\"keyword\">this</span>.run.bind(<span class=\"keyword\">this</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.computerContext.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">this</span>.globalWidth, <span class=\"keyword\">this</span>.globalHeight)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderContext.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">this</span>.globalWidth, <span class=\"keyword\">this</span>.globalHeight)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.booms.forEach(<span class=\"function\">(<span class=\"params\">boom, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (boom.stop) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.booms.splice(index, <span class=\"number\">1</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      boom.move()</span><br><span class=\"line\">      boom.draw()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderContext.drawImage(<span class=\"keyword\">this</span>.computerCanvas, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">this</span>.globalWidth, <span class=\"keyword\">this</span>.globalHeight)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> cursorSpecialEffects = <span class=\"keyword\">new</span> CursorSpecialEffects()</span><br><span class=\"line\">cursorSpecialEffects.init()</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>侧栏的固定</p>\n<p>使用<code>affix</code>实现，主要参考<a href=\"https://www.runoob.com/bootstrap/bootstrap-affix-plugin.html\" target=\"_blank\" rel=\"noopener\">这篇文章</a>。</p>\n</li>\n<li><p><code>valine</code>评论系统支持<code>pjax</code></p>\n<p>参考<a href=\"https://github.com/xCss/Valine/issues/138\" target=\"_blank\" rel=\"noopener\">这个issue</a>。</p>\n</li>\n</ol>\n<hr>\n<p>害，换个主题真的太难了，<strong>一年之内不打算再换了！</strong></p>\n<p>好了，写完去睡觉啦 XD！</p>\n<hr>\n<p><strong><em>2020.1.30    23:12:33</em></strong></p>\n<p>全站由<code>github</code>迁移到<code>coding</code>，国内浏览速度得到大幅提升。（香港服务器就是香啊！）</p>\n","site":{"data":{}},"length":6025,"excerpt":"<p>故事要从四天前说起…</p>\n<p>那天，我像往常一样刷着网站，偶然发现了<a href=\"https://diygod.me/\" target=\"_blank\" rel=\"noopener\">DIYgod</a>大佬的博客，看着这精美的主题，再回头审视一下自己使用的简陋到爆的<code>next</code>，不禁萌生了更换主题的想法。</p>","more":"<p>根据<code>footer</code>里的信息，我找到了这个主题<code>Sagiri</code>的托管地址，将其下载了下来，配置好<code>_config.yml</code>文件并<code>hexo s</code>，本以为事情就这样结束了。然并卵，我发现有很多功能都无法正常使用，正如他本人在<a href=\"https://diygod.me/new-blog/\" target=\"_blank\" rel=\"noopener\">这篇文章</a>中写的一样：</p>\n<blockquote>\n<p>主题虽然开源了，但是属于自用性质的项目，很多应该做成可定制化的地方都没有做，从开源项目的视角来看做得并不好，而我目前又对制作主题并没有太高的兴致，所以使用之前还请慎重考虑</p>\n</blockquote>\n<p>然而这是后话了，当时的我并没有看到这些，于是头铁地开始了主题文件的增删改查之路（此处省略一万字）。</p>\n<hr>\n<p>四天过去了，通过对文件的深度剖析（指删除很多本来就有的模块然后重新添加），我深刻地了解了<code>css</code>、<code>html</code>和<code>javascript</code>，明白了<code>hexo</code>主题的组织形式（并没有），于是准备记录一下这个主题部分特性的实现方式：</p>\n<ol>\n<li><p>网页无刷新跳转/自动滚动到正文</p>\n<p>使用<code>pjax</code>实现，主要参考<a href=\"https://liuyib.github.io/2019/09/24/use-pjax-to-your-site/\" target=\"_blank\" rel=\"noopener\">这篇文章</a>。</p>\n</li>\n<li><p>根据网页状态动态修改标题</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// cheat.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> OriginTitle = <span class=\"built_in\">document</span>.title;</span><br><span class=\"line\"><span class=\"keyword\">var</span> titleTime;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">'visibilitychange'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.hidden) &#123;</span><br><span class=\"line\">        $(<span class=\"string\">'[rel=\"icon\"]'</span>).attr(<span class=\"string\">'href'</span>, <span class=\"string\">\"/images/failure.ico\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = <span class=\"string\">'╭(°A°`)╮ 页面崩溃啦 ~'</span>;</span><br><span class=\"line\">        clearTimeout(titleTime);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        $(<span class=\"string\">'[rel=\"icon\"]'</span>).attr(<span class=\"string\">'href'</span>, <span class=\"string\">\"/images/favicon.ico\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = <span class=\"string\">'(ฅ&gt;ω&lt;*ฅ) 噫又好了~'</span> + OriginTitle;</span><br><span class=\"line\">        titleTime = setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.title = OriginTitle;</span><br><span class=\"line\">        &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>随机的丝带背景</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// evan-you.js</span></span><br><span class=\"line\"><span class=\"comment\">/*&lt;canvas id=\"evanyou\"&gt;&lt;/canvas&gt;*/</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'evanyou'</span>)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> c = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'evanyou'</span>),</span><br><span class=\"line\">    x = c.getContext(<span class=\"string\">'2d'</span>),</span><br><span class=\"line\">    pr = <span class=\"built_in\">window</span>.devicePixelRatio || <span class=\"number\">1</span>,</span><br><span class=\"line\">    w = <span class=\"built_in\">window</span>.innerWidth,</span><br><span class=\"line\">    h = <span class=\"built_in\">window</span>.innerHeight,</span><br><span class=\"line\">    f = <span class=\"number\">90</span>,</span><br><span class=\"line\">    q,</span><br><span class=\"line\">    m = <span class=\"built_in\">Math</span>,</span><br><span class=\"line\">    r = <span class=\"number\">0</span>,</span><br><span class=\"line\">    u = m.PI * <span class=\"number\">2</span>,</span><br><span class=\"line\">    v = m.cos,</span><br><span class=\"line\">    z = m.random</span><br><span class=\"line\">  c.width = w * pr</span><br><span class=\"line\">  c.height = h * pr</span><br><span class=\"line\">  x.scale(pr, pr)</span><br><span class=\"line\">  x.globalAlpha = <span class=\"number\">0.6</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">evanyou</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    x.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, w, h)</span><br><span class=\"line\">    q = [&#123; <span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: h * <span class=\"number\">.7</span> + f &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">0</span>, <span class=\"attr\">y</span>: h * <span class=\"number\">.7</span> - f &#125;]</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (q[<span class=\"number\">1</span>].x &lt; w + f) d(q[<span class=\"number\">0</span>], q[<span class=\"number\">1</span>])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">d</span> (<span class=\"params\">i, j</span>) </span>&#123;</span><br><span class=\"line\">    x.beginPath()</span><br><span class=\"line\">    x.moveTo(i.x, i.y)</span><br><span class=\"line\">    x.lineTo(j.x, j.y)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> k = j.x + (z() * <span class=\"number\">2</span> - <span class=\"number\">0.25</span>) * f,</span><br><span class=\"line\">      n = y(j.y)</span><br><span class=\"line\">    x.lineTo(k, n)</span><br><span class=\"line\">    x.closePath()</span><br><span class=\"line\">    r -= u / <span class=\"number\">-50</span></span><br><span class=\"line\">    x.fillStyle = <span class=\"string\">'#'</span> + (v(r) * <span class=\"number\">127</span> + <span class=\"number\">128</span> &lt;&lt; <span class=\"number\">16</span> | v(r + u / <span class=\"number\">3</span>) * <span class=\"number\">127</span> + <span class=\"number\">128</span> &lt;&lt; <span class=\"number\">8</span> | v(r + u / <span class=\"number\">3</span> * <span class=\"number\">2</span>) * <span class=\"number\">127</span> + <span class=\"number\">128</span>).toString(<span class=\"number\">16</span>)</span><br><span class=\"line\">    x.fill()</span><br><span class=\"line\">    q[<span class=\"number\">0</span>] = q[<span class=\"number\">1</span>]</span><br><span class=\"line\">    q[<span class=\"number\">1</span>] = &#123; <span class=\"attr\">x</span>: k, <span class=\"attr\">y</span>: n &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> (<span class=\"params\">p</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> t = p + (z() * <span class=\"number\">2</span> - <span class=\"number\">1.1</span>) * f</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (t &gt; h || t &lt; <span class=\"number\">0</span>) ? y(p) : t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.onclick = evanyou</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.ontouchstart = evanyou</span><br><span class=\"line\">  evanyou()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>点击的烟花效果</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// fireworks.js</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(&#123; origin, speed, color, angle, context &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.origin = origin</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.position = &#123; ...this.origin &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.color = color</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.speed = speed</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.angle = angle</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context = context</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderCount = <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  draw() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context.fillStyle = <span class=\"keyword\">this</span>.color</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context.beginPath()</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context.arc(<span class=\"keyword\">this</span>.position.x, <span class=\"keyword\">this</span>.position.y, <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"built_in\">Math</span>.PI * <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context.fill()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  move() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.position.x = (<span class=\"built_in\">Math</span>.sin(<span class=\"keyword\">this</span>.angle) * <span class=\"keyword\">this</span>.speed) + <span class=\"keyword\">this</span>.position.x</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.position.y = (<span class=\"built_in\">Math</span>.cos(<span class=\"keyword\">this</span>.angle) * <span class=\"keyword\">this</span>.speed) + <span class=\"keyword\">this</span>.position.y + (<span class=\"keyword\">this</span>.renderCount * <span class=\"number\">0.3</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderCount++</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Boom</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> (&#123; origin, context, circleCount = <span class=\"number\">16</span>, area &#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.origin = origin</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.context = context</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.circleCount = circleCount</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.area = area</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.stop = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.circles = []</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  randomArray(range) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> length = range.length</span><br><span class=\"line\">    <span class=\"keyword\">const</span> randomIndex = <span class=\"built_in\">Math</span>.floor(length * <span class=\"built_in\">Math</span>.random())</span><br><span class=\"line\">    <span class=\"keyword\">return</span> range[randomIndex]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  randomColor() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> range = [<span class=\"string\">'8'</span>, <span class=\"string\">'9'</span>, <span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>, <span class=\"string\">'D'</span>, <span class=\"string\">'E'</span>, <span class=\"string\">'F'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'#'</span> + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range) + <span class=\"keyword\">this</span>.randomArray(range)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  randomRange(start, end) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (end - start) * <span class=\"built_in\">Math</span>.random() + start</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  init() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.circleCount; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> circle = <span class=\"keyword\">new</span> Circle(&#123;</span><br><span class=\"line\">        context: <span class=\"keyword\">this</span>.context,</span><br><span class=\"line\">        origin: <span class=\"keyword\">this</span>.origin,</span><br><span class=\"line\">        color: <span class=\"keyword\">this</span>.randomColor(),</span><br><span class=\"line\">        angle: <span class=\"keyword\">this</span>.randomRange(<span class=\"built_in\">Math</span>.PI - <span class=\"number\">1</span>, <span class=\"built_in\">Math</span>.PI + <span class=\"number\">1</span>),</span><br><span class=\"line\">        speed: <span class=\"keyword\">this</span>.randomRange(<span class=\"number\">1</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.circles.push(circle)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  move() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.circles.forEach(<span class=\"function\">(<span class=\"params\">circle, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (circle.position.x &gt; <span class=\"keyword\">this</span>.area.width || circle.position.y &gt; <span class=\"keyword\">this</span>.area.height) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.circles.splice(index, <span class=\"number\">1</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      circle.move()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.circles.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.stop = <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  draw() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.circles.forEach(<span class=\"function\"><span class=\"params\">circle</span> =&gt;</span> circle.draw())</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CursorSpecialEffects</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.computerCanvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderCanvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.computerContext = <span class=\"keyword\">this</span>.computerCanvas.getContext(<span class=\"string\">'2d'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderContext = <span class=\"keyword\">this</span>.renderCanvas.getContext(<span class=\"string\">'2d'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.globalWidth = <span class=\"built_in\">window</span>.innerWidth</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.globalHeight = <span class=\"built_in\">window</span>.innerHeight</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.booms = []</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.running = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handleMouseDown(e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> boom = <span class=\"keyword\">new</span> Boom(&#123;</span><br><span class=\"line\">      origin: &#123; <span class=\"attr\">x</span>: e.clientX, <span class=\"attr\">y</span>: e.clientY &#125;,</span><br><span class=\"line\">      context: <span class=\"keyword\">this</span>.computerContext,</span><br><span class=\"line\">      area: &#123;</span><br><span class=\"line\">        width: <span class=\"keyword\">this</span>.globalWidth,</span><br><span class=\"line\">        height: <span class=\"keyword\">this</span>.globalHeight</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    boom.init()</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.booms.push(boom)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.running || <span class=\"keyword\">this</span>.run()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  handlePageHide() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.booms = []</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.running = <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  init() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> style = <span class=\"keyword\">this</span>.renderCanvas.style</span><br><span class=\"line\">    style.position = <span class=\"string\">'fixed'</span></span><br><span class=\"line\">    style.top = style.left = <span class=\"number\">0</span></span><br><span class=\"line\">    style.zIndex = <span class=\"string\">'999999999999999999999999999999999999999999'</span></span><br><span class=\"line\">    style.pointerEvents = <span class=\"string\">'none'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    style.width = <span class=\"keyword\">this</span>.renderCanvas.width = <span class=\"keyword\">this</span>.computerCanvas.width = <span class=\"keyword\">this</span>.globalWidth</span><br><span class=\"line\">    style.height = <span class=\"keyword\">this</span>.renderCanvas.height = <span class=\"keyword\">this</span>.computerCanvas.height = <span class=\"keyword\">this</span>.globalHeight</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.append(<span class=\"keyword\">this</span>.renderCanvas)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'mousedown'</span>, <span class=\"keyword\">this</span>.handleMouseDown.bind(<span class=\"keyword\">this</span>))</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'pagehide'</span>, <span class=\"keyword\">this</span>.handlePageHide.bind(<span class=\"keyword\">this</span>))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  run() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.running = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.booms.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.running = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    requestAnimationFrame(<span class=\"keyword\">this</span>.run.bind(<span class=\"keyword\">this</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.computerContext.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">this</span>.globalWidth, <span class=\"keyword\">this</span>.globalHeight)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderContext.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">this</span>.globalWidth, <span class=\"keyword\">this</span>.globalHeight)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.booms.forEach(<span class=\"function\">(<span class=\"params\">boom, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (boom.stop) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.booms.splice(index, <span class=\"number\">1</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      boom.move()</span><br><span class=\"line\">      boom.draw()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.renderContext.drawImage(<span class=\"keyword\">this</span>.computerCanvas, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">this</span>.globalWidth, <span class=\"keyword\">this</span>.globalHeight)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> cursorSpecialEffects = <span class=\"keyword\">new</span> CursorSpecialEffects()</span><br><span class=\"line\">cursorSpecialEffects.init()</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>侧栏的固定</p>\n<p>使用<code>affix</code>实现，主要参考<a href=\"https://www.runoob.com/bootstrap/bootstrap-affix-plugin.html\" target=\"_blank\" rel=\"noopener\">这篇文章</a>。</p>\n</li>\n<li><p><code>valine</code>评论系统支持<code>pjax</code></p>\n<p>参考<a href=\"https://github.com/xCss/Valine/issues/138\" target=\"_blank\" rel=\"noopener\">这个issue</a>。</p>\n</li>\n</ol>\n<hr>\n<p>害，换个主题真的太难了，<strong>一年之内不打算再换了！</strong></p>\n<p>好了，写完去睡觉啦 XD！</p>\n<hr>\n<p><strong><em>2020.1.30    23:12:33</em></strong></p>\n<p>全站由<code>github</code>迁移到<code>coding</code>，国内浏览速度得到大幅提升。（香港服务器就是香啊！）</p>"},{"title":"php表单提交并自动发送邮件","date":"2019-10-29T13:41:34.000Z","_content":"\n最近在[html5up](https://html5up.net/)上淘了个主页模板，模板底有一个表单，今天在修改模板的时候，朋友提起可以配置表单实现提交表单时自动发送邮件通知，于是就萌生了这个想法，结果没想到一搞就是三四个小时（主要是因为网上的某些“教程”太坑人了！），所以记录一下配置过程给后来人参考。\n\n<!--more-->\n\n# 给服务器安装php,php-fpm\n\n作者使用的是ubuntu18.04，所以使用\n\n```bash\nsudo apt-get install php\nsudo apt-get install php-fpm\n```\n\n# web服务器添加php支持\n\n\n\n作者使用的是nginx，为支持php需要修改一下配置文件，网上不少教程说要改`nginx.conf`，但我发现我这里的配置文件和他们的有很大差异，后来实测修改`/etc/nginx/sites-available/default`有效。将文件与php有关部分修改为：\n\n```bash\n        # Add index.php to the list if you are using PHP\n        index index.html index.htm index.nginx-debian.html index.php;\n\n        server_name _;\n        \n\t\t# nginx不允许静态文件响应post请求，会出现405 not allowed提示，所以需要添加以下内容\n\t\t# 需要开启8080端口，或者可以修改为目前已经开启的端口（或许）\n        error_page  405 =200 @405;\n        location @405 {\n            proxy_method GET;\n            proxy_pass http://你的地址:8080;\n        }\n\n        location / {\n                # First attempt to serve request as file, then\n                # as directory, then fall back to displaying a 404.\n                try_files $uri $uri/ =404;\n        }\n\n        # pass PHP scripts to FastCGI server\n        #\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n\n                # With php-fpm (or other unix sockets):\n                # 这里需要把php7.2修改为安装php时显示的版本\n                fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;\n                # With php-cgi (or other tcp sockets):\n                # fastcgi_pass 127.0.0.1:9000;\n        }\n\n```\n\n# 修改表单所在的html文件\n\n接下来打开表单所在的html文件，修改form标签，例如我的：\n\n```html\n<!--其实粘贴这么多只是想说form标签需要加个action=\"mail.php\"啦（滑稽）-->\n<form method=\"post\" action=\"mail.php\">\n    <div class=\"fields\">\n        <div class=\"field half\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" />\n        </div>\n        <div class=\"field half\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" name=\"email\" id=\"email\" />\n        </div>\n        <div class=\"field\">\n            <label for=\"message\">Message</label>\n            <textarea name=\"message\" id=\"message\" rows=\"6\"></textarea>\n        </div>\n    </div>\n    <ul class=\"actions\">\n        <li><input type=\"submit\" value=\"Send Message\" class=\"primary\" /></li>\n        <li><input type=\"reset\" value=\"Clear\" /></li>\n    </ul>\n</form>\n```\n\n# 配置mail.php文件\n\nform提交将会调用mail.php文件，接下来就需要配置它了。我浏览了许多网站，发现网上大体只有两个模板，即[这个](https://jingyan.baidu.com/article/636f38bb482efcd6b8461019.html)和[这个](https://www.jb51.net/article/62543.htm)。但亲身体验后发现都！不！能！用！第一个是单纯的配置文件问题，我把各项修改好后还是不能用。（或许是因为我多删了点东西？）第二个则使用了php的mail()函数，不过很不幸的是，正如这篇[最后解决我问题的文章](https://www.jianshu.com/p/03e02c58200a)中写的一样：\n\n> PHP环境下，是提供了发送邮件的函数`mail()`的，不过该函数要求服务器支持sendmail或者必须设置一台不需要中继的邮件发送服务器，但现在要找到一台不需要身份验证的邮件发送中继几乎不可能，所以使用mail函数往往无法成功发送电子邮件。\n\nmail()函数确实无法成功发送邮件。这篇文章同样给出了一个解决办法，就是使用[PHPMailer](https://github.com/PHPMailer/PHPMailer)。\n\n将其`git clone`到服务器并解压，mail.php只需按照README.md中所给的Example进行微量修改，我的大概为：\n\n```php\n<?php\n// Import PHPMailer classes into the global namespace\n// These must be at the top of your script, not inside a function\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\SMTP;\nuse PHPMailer\\PHPMailer\\Exception;\n\n// 修改这三个文件的路径为服务器路径\nrequire './PHPMailer/src/Exception.php';\nrequire './PHPMailer/src/PHPMailer.php';\nrequire './PHPMailer/src/SMTP.php';\n\n// 这里将内容对应改成form标签中各项的名字\n$email=$_POST['email'];\n$name=$_POST['name'];\n$message=$_POST['message'];\n\n// Instantiation and passing `true` enables exceptions\n$mail = new PHPMailer(true);\n\n// 这里我使用的是qq邮箱，其它邮箱同理\ntry {\n    //Server settings\n    $mail->SMTPDebug = SMTP::DEBUG_SERVER;                      // Enable verbose debug output\n    $mail->isSMTP();                                            // Send using SMTP\n    $mail->Host       = 'smtp.qq.com';                    // Set the SMTP server to send through\n    $mail->SMTPAuth   = true;                                   // Enable SMTP authentication\n    $mail->Username   = '邮箱的用户名';                     // SMTP username\n    $mail->Password   = '邮箱的密码';                               // SMTP password\n//    $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` also accepted\n    $mail->SMTPSecure = 'ssl';\n    $mail->Port       = 465;                                    // TCP port to connect to\n\n    //Recipients\n    $mail->setFrom('邮箱的用户名', '随便填个昵称');\n    $mail->addAddress('发送到的邮箱', '随便填个昵称');     // Add a recipient\n    \n//\t后边的那些我不用，就注释掉了\n//    $mail->addAddress('ellen@example.com');               // Name is optional\n//    $mail->addReplyTo('info@example.com', 'Information');\n//    $mail->addCC('cc@example.com');\n//    $mail->addBCC('bcc@example.com');\n\n    // Attachments\n//    $mail->addAttachment('/var/tmp/file.tar.gz');         // Add attachments\n//    $mail->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name\n\n    // Content\n    $mail->isHTML(true);                                  // Set email format to HTML\n    $mail->Subject = \"An E-mail from $email\";\n    $mail->Body = \"This e-mail is written by $name : $message\";\n    \n    // 我在测试时，AltBody中的内容并不会在邮件中显示出来，目前暂时不清楚有什么用\n    $mail->AltBody = \"\";\n\n    $mail->send();\n    echo 'Message has been sent';\n} catch (Exception $e) {\n    echo \"Message could not be sent. Mailer Error: {$mail->ErrorInfo}\";\n}\n```\n\n# 提交不跳转方法\n\n经过以上配置之后，你的表单应该可以正常发送邮件了，唯一的不足是在点击提交之后会跳转出现一堆提示信息，影响观感，[这篇文章](https://segmentfault.com/a/1190000000461339)中给出了一种可行方法，即为`form`标签加入target属性并添加`iframe`标签。以我的表单为例，需要将`form`标签修改为：\n\n```html\n<form method=\"post\" action=\"mail.php\" target=\"id_iframe\">\n```\n\n并在其后添加：\n\n```html\n<iframe id=\"id_iframe\" name=\"id_iframe\" style=\"\"></iframe>\n```\n\n这样修改虽然有效，但会在点击提交之后出现一个简陋的框体，其中显示的内容就是之前跳转后的提示信息。这没有达到我们的目的，于是想到将`iframe`标签隐藏，也就是将其的高度和宽度设置为0：\n\n```html\n<iframe id=\"id_iframe\" name=\"id_iframe\" style=\"\" width=\"0\" height=\"0\"></iframe>\n```\n\n可这样又会出现一个问题，点击按钮之后邮件到底有没有发送成功是未知的，因为所有的提示信息都被隐藏掉了，那该怎么办呢？我想到的是，将原来php文件中的两个用于输出提示信息的`echo`修改成`echo \"<script>alert('内容')</script>\"`，也就是：\n\n```php\necho 'Message has been sent';\n// 替换为\necho \"<script>alert('Message has been sent')</script>\";\n\necho \"Message could not be sent. Mailer Error: {$mail->ErrorInfo}\";\n// 替换为\necho \"<script>alert('Message could not be sent.')</script>\";\n```\n\n这样的话就可以实现网页弹窗提示邮件发送结果而不跳转了。\n\n# 效果预览\n\n\n\n![填写表单](https://img.vim-cn.com/46/d7b3a55d08f29baa98472640716e9a8ae06907.jpg \"填写表单\")\n\n![点击提交](https://img.vim-cn.com/ea/1a881a1eb0565d390f224777de31823efaaeb4.jpg \"点击提交\")\n\n![收到邮件](https://img.vim-cn.com/53/10173e2b8b20b797906fa6d25ef0aa769439a8.jpg \"收到邮件\")\n\n# 结语\n\n总体来说，以上实现方式虽然可以正常使用，但是还有很大改进空间，比如提交不跳转的实现方式。不过毕竟自己没有系统学习过web方面的知识，也只能得过且过了。等什么时候能闲下来再考虑改进吧（笑）。也欢迎大家在评论里给我提建议吖！（话说这篇文章真的有人看吗？！）","source":"_posts/formSubmit.md","raw":"---\ntitle: php表单提交并自动发送邮件\ndate: 2019-10-29 21:41:34\ntags: [php,website]\ncategories: 网站建设\n---\n\n最近在[html5up](https://html5up.net/)上淘了个主页模板，模板底有一个表单，今天在修改模板的时候，朋友提起可以配置表单实现提交表单时自动发送邮件通知，于是就萌生了这个想法，结果没想到一搞就是三四个小时（主要是因为网上的某些“教程”太坑人了！），所以记录一下配置过程给后来人参考。\n\n<!--more-->\n\n# 给服务器安装php,php-fpm\n\n作者使用的是ubuntu18.04，所以使用\n\n```bash\nsudo apt-get install php\nsudo apt-get install php-fpm\n```\n\n# web服务器添加php支持\n\n\n\n作者使用的是nginx，为支持php需要修改一下配置文件，网上不少教程说要改`nginx.conf`，但我发现我这里的配置文件和他们的有很大差异，后来实测修改`/etc/nginx/sites-available/default`有效。将文件与php有关部分修改为：\n\n```bash\n        # Add index.php to the list if you are using PHP\n        index index.html index.htm index.nginx-debian.html index.php;\n\n        server_name _;\n        \n\t\t# nginx不允许静态文件响应post请求，会出现405 not allowed提示，所以需要添加以下内容\n\t\t# 需要开启8080端口，或者可以修改为目前已经开启的端口（或许）\n        error_page  405 =200 @405;\n        location @405 {\n            proxy_method GET;\n            proxy_pass http://你的地址:8080;\n        }\n\n        location / {\n                # First attempt to serve request as file, then\n                # as directory, then fall back to displaying a 404.\n                try_files $uri $uri/ =404;\n        }\n\n        # pass PHP scripts to FastCGI server\n        #\n        location ~ \\.php$ {\n                include snippets/fastcgi-php.conf;\n\n                # With php-fpm (or other unix sockets):\n                # 这里需要把php7.2修改为安装php时显示的版本\n                fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;\n                # With php-cgi (or other tcp sockets):\n                # fastcgi_pass 127.0.0.1:9000;\n        }\n\n```\n\n# 修改表单所在的html文件\n\n接下来打开表单所在的html文件，修改form标签，例如我的：\n\n```html\n<!--其实粘贴这么多只是想说form标签需要加个action=\"mail.php\"啦（滑稽）-->\n<form method=\"post\" action=\"mail.php\">\n    <div class=\"fields\">\n        <div class=\"field half\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" id=\"name\" />\n        </div>\n        <div class=\"field half\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" name=\"email\" id=\"email\" />\n        </div>\n        <div class=\"field\">\n            <label for=\"message\">Message</label>\n            <textarea name=\"message\" id=\"message\" rows=\"6\"></textarea>\n        </div>\n    </div>\n    <ul class=\"actions\">\n        <li><input type=\"submit\" value=\"Send Message\" class=\"primary\" /></li>\n        <li><input type=\"reset\" value=\"Clear\" /></li>\n    </ul>\n</form>\n```\n\n# 配置mail.php文件\n\nform提交将会调用mail.php文件，接下来就需要配置它了。我浏览了许多网站，发现网上大体只有两个模板，即[这个](https://jingyan.baidu.com/article/636f38bb482efcd6b8461019.html)和[这个](https://www.jb51.net/article/62543.htm)。但亲身体验后发现都！不！能！用！第一个是单纯的配置文件问题，我把各项修改好后还是不能用。（或许是因为我多删了点东西？）第二个则使用了php的mail()函数，不过很不幸的是，正如这篇[最后解决我问题的文章](https://www.jianshu.com/p/03e02c58200a)中写的一样：\n\n> PHP环境下，是提供了发送邮件的函数`mail()`的，不过该函数要求服务器支持sendmail或者必须设置一台不需要中继的邮件发送服务器，但现在要找到一台不需要身份验证的邮件发送中继几乎不可能，所以使用mail函数往往无法成功发送电子邮件。\n\nmail()函数确实无法成功发送邮件。这篇文章同样给出了一个解决办法，就是使用[PHPMailer](https://github.com/PHPMailer/PHPMailer)。\n\n将其`git clone`到服务器并解压，mail.php只需按照README.md中所给的Example进行微量修改，我的大概为：\n\n```php\n<?php\n// Import PHPMailer classes into the global namespace\n// These must be at the top of your script, not inside a function\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\SMTP;\nuse PHPMailer\\PHPMailer\\Exception;\n\n// 修改这三个文件的路径为服务器路径\nrequire './PHPMailer/src/Exception.php';\nrequire './PHPMailer/src/PHPMailer.php';\nrequire './PHPMailer/src/SMTP.php';\n\n// 这里将内容对应改成form标签中各项的名字\n$email=$_POST['email'];\n$name=$_POST['name'];\n$message=$_POST['message'];\n\n// Instantiation and passing `true` enables exceptions\n$mail = new PHPMailer(true);\n\n// 这里我使用的是qq邮箱，其它邮箱同理\ntry {\n    //Server settings\n    $mail->SMTPDebug = SMTP::DEBUG_SERVER;                      // Enable verbose debug output\n    $mail->isSMTP();                                            // Send using SMTP\n    $mail->Host       = 'smtp.qq.com';                    // Set the SMTP server to send through\n    $mail->SMTPAuth   = true;                                   // Enable SMTP authentication\n    $mail->Username   = '邮箱的用户名';                     // SMTP username\n    $mail->Password   = '邮箱的密码';                               // SMTP password\n//    $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` also accepted\n    $mail->SMTPSecure = 'ssl';\n    $mail->Port       = 465;                                    // TCP port to connect to\n\n    //Recipients\n    $mail->setFrom('邮箱的用户名', '随便填个昵称');\n    $mail->addAddress('发送到的邮箱', '随便填个昵称');     // Add a recipient\n    \n//\t后边的那些我不用，就注释掉了\n//    $mail->addAddress('ellen@example.com');               // Name is optional\n//    $mail->addReplyTo('info@example.com', 'Information');\n//    $mail->addCC('cc@example.com');\n//    $mail->addBCC('bcc@example.com');\n\n    // Attachments\n//    $mail->addAttachment('/var/tmp/file.tar.gz');         // Add attachments\n//    $mail->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name\n\n    // Content\n    $mail->isHTML(true);                                  // Set email format to HTML\n    $mail->Subject = \"An E-mail from $email\";\n    $mail->Body = \"This e-mail is written by $name : $message\";\n    \n    // 我在测试时，AltBody中的内容并不会在邮件中显示出来，目前暂时不清楚有什么用\n    $mail->AltBody = \"\";\n\n    $mail->send();\n    echo 'Message has been sent';\n} catch (Exception $e) {\n    echo \"Message could not be sent. Mailer Error: {$mail->ErrorInfo}\";\n}\n```\n\n# 提交不跳转方法\n\n经过以上配置之后，你的表单应该可以正常发送邮件了，唯一的不足是在点击提交之后会跳转出现一堆提示信息，影响观感，[这篇文章](https://segmentfault.com/a/1190000000461339)中给出了一种可行方法，即为`form`标签加入target属性并添加`iframe`标签。以我的表单为例，需要将`form`标签修改为：\n\n```html\n<form method=\"post\" action=\"mail.php\" target=\"id_iframe\">\n```\n\n并在其后添加：\n\n```html\n<iframe id=\"id_iframe\" name=\"id_iframe\" style=\"\"></iframe>\n```\n\n这样修改虽然有效，但会在点击提交之后出现一个简陋的框体，其中显示的内容就是之前跳转后的提示信息。这没有达到我们的目的，于是想到将`iframe`标签隐藏，也就是将其的高度和宽度设置为0：\n\n```html\n<iframe id=\"id_iframe\" name=\"id_iframe\" style=\"\" width=\"0\" height=\"0\"></iframe>\n```\n\n可这样又会出现一个问题，点击按钮之后邮件到底有没有发送成功是未知的，因为所有的提示信息都被隐藏掉了，那该怎么办呢？我想到的是，将原来php文件中的两个用于输出提示信息的`echo`修改成`echo \"<script>alert('内容')</script>\"`，也就是：\n\n```php\necho 'Message has been sent';\n// 替换为\necho \"<script>alert('Message has been sent')</script>\";\n\necho \"Message could not be sent. Mailer Error: {$mail->ErrorInfo}\";\n// 替换为\necho \"<script>alert('Message could not be sent.')</script>\";\n```\n\n这样的话就可以实现网页弹窗提示邮件发送结果而不跳转了。\n\n# 效果预览\n\n\n\n![填写表单](https://img.vim-cn.com/46/d7b3a55d08f29baa98472640716e9a8ae06907.jpg \"填写表单\")\n\n![点击提交](https://img.vim-cn.com/ea/1a881a1eb0565d390f224777de31823efaaeb4.jpg \"点击提交\")\n\n![收到邮件](https://img.vim-cn.com/53/10173e2b8b20b797906fa6d25ef0aa769439a8.jpg \"收到邮件\")\n\n# 结语\n\n总体来说，以上实现方式虽然可以正常使用，但是还有很大改进空间，比如提交不跳转的实现方式。不过毕竟自己没有系统学习过web方面的知识，也只能得过且过了。等什么时候能闲下来再考虑改进吧（笑）。也欢迎大家在评论里给我提建议吖！（话说这篇文章真的有人看吗？！）","slug":"formSubmit","published":1,"updated":"2020-02-04T13:45:14.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp6n001yhpz6d02sd0ff","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>最近在<a href=\"https://html5up.net/\" target=\"_blank\" rel=\"noopener\">html5up</a>上淘了个主页模板，模板底有一个表单，今天在修改模板的时候，朋友提起可以配置表单实现提交表单时自动发送邮件通知，于是就萌生了这个想法，结果没想到一搞就是三四个小时（主要是因为网上的某些“教程”太坑人了！），所以记录一下配置过程给后来人参考。</p>\n<a id=\"more\"></a>\n\n<h1 id=\"给服务器安装php-php-fpm\"><a href=\"#给服务器安装php-php-fpm\" class=\"headerlink\" title=\"给服务器安装php,php-fpm\"></a>给服务器安装php,php-fpm</h1><p>作者使用的是ubuntu18.04，所以使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php</span><br><span class=\"line\">sudo apt-get install php-fpm</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"web服务器添加php支持\"><a href=\"#web服务器添加php支持\" class=\"headerlink\" title=\"web服务器添加php支持\"></a>web服务器添加php支持</h1><p>作者使用的是nginx，为支持php需要修改一下配置文件，网上不少教程说要改<code>nginx.conf</code>，但我发现我这里的配置文件和他们的有很大差异，后来实测修改<code>/etc/nginx/sites-available/default</code>有效。将文件与php有关部分修改为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      <span class=\"comment\"># Add index.php to the list if you are using PHP</span></span><br><span class=\"line\">      index index.html index.htm index.nginx-debian.html index.php;</span><br><span class=\"line\"></span><br><span class=\"line\">      server_name _;</span><br><span class=\"line\">      </span><br><span class=\"line\"><span class=\"comment\"># nginx不允许静态文件响应post请求，会出现405 not allowed提示，所以需要添加以下内容</span></span><br><span class=\"line\"><span class=\"comment\"># 需要开启8080端口，或者可以修改为目前已经开启的端口（或许）</span></span><br><span class=\"line\">      error_page  405 =200 @405;</span><br><span class=\"line\">      location @405 &#123;</span><br><span class=\"line\">          proxy_method GET;</span><br><span class=\"line\">          proxy_pass http://你的地址:8080;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      location / &#123;</span><br><span class=\"line\">              <span class=\"comment\"># First attempt to serve request as file, then</span></span><br><span class=\"line\">              <span class=\"comment\"># as directory, then fall back to displaying a 404.</span></span><br><span class=\"line\">              try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ =404;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"># pass PHP scripts to FastCGI server</span></span><br><span class=\"line\">      <span class=\"comment\">#</span></span><br><span class=\"line\">      location ~ \\.php$ &#123;</span><br><span class=\"line\">              include snippets/fastcgi-php.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"comment\"># With php-fpm (or other unix sockets):</span></span><br><span class=\"line\">              <span class=\"comment\"># 这里需要把php7.2修改为安装php时显示的版本</span></span><br><span class=\"line\">              fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;</span><br><span class=\"line\">              <span class=\"comment\"># With php-cgi (or other tcp sockets):</span></span><br><span class=\"line\">              <span class=\"comment\"># fastcgi_pass 127.0.0.1:9000;</span></span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"修改表单所在的html文件\"><a href=\"#修改表单所在的html文件\" class=\"headerlink\" title=\"修改表单所在的html文件\"></a>修改表单所在的html文件</h1><p>接下来打开表单所在的html文件，修改form标签，例如我的：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--其实粘贴这么多只是想说form标签需要加个action=\"mail.php\"啦（滑稽）--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"mail.php\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fields\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"field half\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"name\"</span>&gt;</span>Name<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"name\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"field half\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"email\"</span>&gt;</span>Email<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"email\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"field\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"message\"</span>&gt;</span>Message<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">\"message\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"message\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"6\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"actions\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Send Message\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"primary\"</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"reset\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Clear\"</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置mail-php文件\"><a href=\"#配置mail-php文件\" class=\"headerlink\" title=\"配置mail.php文件\"></a>配置mail.php文件</h1><p>form提交将会调用mail.php文件，接下来就需要配置它了。我浏览了许多网站，发现网上大体只有两个模板，即<a href=\"https://jingyan.baidu.com/article/636f38bb482efcd6b8461019.html\" target=\"_blank\" rel=\"noopener\">这个</a>和<a href=\"https://www.jb51.net/article/62543.htm\" target=\"_blank\" rel=\"noopener\">这个</a>。但亲身体验后发现都！不！能！用！第一个是单纯的配置文件问题，我把各项修改好后还是不能用。（或许是因为我多删了点东西？）第二个则使用了php的mail()函数，不过很不幸的是，正如这篇<a href=\"https://www.jianshu.com/p/03e02c58200a\" target=\"_blank\" rel=\"noopener\">最后解决我问题的文章</a>中写的一样：</p>\n<blockquote>\n<p>PHP环境下，是提供了发送邮件的函数<code>mail()</code>的，不过该函数要求服务器支持sendmail或者必须设置一台不需要中继的邮件发送服务器，但现在要找到一台不需要身份验证的邮件发送中继几乎不可能，所以使用mail函数往往无法成功发送电子邮件。</p>\n</blockquote>\n<p>mail()函数确实无法成功发送邮件。这篇文章同样给出了一个解决办法，就是使用<a href=\"https://github.com/PHPMailer/PHPMailer\" target=\"_blank\" rel=\"noopener\">PHPMailer</a>。</p>\n<p>将其<code>git clone</code>到服务器并解压，mail.php只需按照README.md中所给的Example进行微量修改，我的大概为：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// Import PHPMailer classes into the global namespace</span></span><br><span class=\"line\"><span class=\"comment\">// These must be at the top of your script, not inside a function</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PHPMailer</span>\\<span class=\"title\">PHPMailer</span>\\<span class=\"title\">PHPMailer</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PHPMailer</span>\\<span class=\"title\">PHPMailer</span>\\<span class=\"title\">SMTP</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PHPMailer</span>\\<span class=\"title\">PHPMailer</span>\\<span class=\"title\">Exception</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改这三个文件的路径为服务器路径</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'./PHPMailer/src/Exception.php'</span>;</span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'./PHPMailer/src/PHPMailer.php'</span>;</span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'./PHPMailer/src/SMTP.php'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里将内容对应改成form标签中各项的名字</span></span><br><span class=\"line\">$email=$_POST[<span class=\"string\">'email'</span>];</span><br><span class=\"line\">$name=$_POST[<span class=\"string\">'name'</span>];</span><br><span class=\"line\">$message=$_POST[<span class=\"string\">'message'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Instantiation and passing `true` enables exceptions</span></span><br><span class=\"line\">$mail = <span class=\"keyword\">new</span> PHPMailer(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里我使用的是qq邮箱，其它邮箱同理</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Server settings</span></span><br><span class=\"line\">    $mail-&gt;SMTPDebug = SMTP::DEBUG_SERVER;                      <span class=\"comment\">// Enable verbose debug output</span></span><br><span class=\"line\">    $mail-&gt;isSMTP();                                            <span class=\"comment\">// Send using SMTP</span></span><br><span class=\"line\">    $mail-&gt;Host       = <span class=\"string\">'smtp.qq.com'</span>;                    <span class=\"comment\">// Set the SMTP server to send through</span></span><br><span class=\"line\">    $mail-&gt;SMTPAuth   = <span class=\"keyword\">true</span>;                                   <span class=\"comment\">// Enable SMTP authentication</span></span><br><span class=\"line\">    $mail-&gt;Username   = <span class=\"string\">'邮箱的用户名'</span>;                     <span class=\"comment\">// SMTP username</span></span><br><span class=\"line\">    $mail-&gt;Password   = <span class=\"string\">'邮箱的密码'</span>;                               <span class=\"comment\">// SMTP password</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` also accepted</span></span><br><span class=\"line\">    $mail-&gt;SMTPSecure = <span class=\"string\">'ssl'</span>;</span><br><span class=\"line\">    $mail-&gt;Port       = <span class=\"number\">465</span>;                                    <span class=\"comment\">// TCP port to connect to</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Recipients</span></span><br><span class=\"line\">    $mail-&gt;setFrom(<span class=\"string\">'邮箱的用户名'</span>, <span class=\"string\">'随便填个昵称'</span>);</span><br><span class=\"line\">    $mail-&gt;addAddress(<span class=\"string\">'发送到的邮箱'</span>, <span class=\"string\">'随便填个昵称'</span>);     <span class=\"comment\">// Add a recipient</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//\t后边的那些我不用，就注释掉了</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addAddress('ellen@example.com');               // Name is optional</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addReplyTo('info@example.com', 'Information');</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addCC('cc@example.com');</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addBCC('bcc@example.com');</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Attachments</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addAttachment('/var/tmp/file.tar.gz');         // Add attachments</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Content</span></span><br><span class=\"line\">    $mail-&gt;isHTML(<span class=\"keyword\">true</span>);                                  <span class=\"comment\">// Set email format to HTML</span></span><br><span class=\"line\">    $mail-&gt;Subject = <span class=\"string\">\"An E-mail from $email\"</span>;</span><br><span class=\"line\">    $mail-&gt;Body = <span class=\"string\">\"This e-mail is written by $name : $message\"</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 我在测试时，AltBody中的内容并不会在邮件中显示出来，目前暂时不清楚有什么用</span></span><br><span class=\"line\">    $mail-&gt;AltBody = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    $mail-&gt;send();</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Message has been sent'</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Message could not be sent. Mailer Error: &#123;$mail-&gt;ErrorInfo&#125;\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"提交不跳转方法\"><a href=\"#提交不跳转方法\" class=\"headerlink\" title=\"提交不跳转方法\"></a>提交不跳转方法</h1><p>经过以上配置之后，你的表单应该可以正常发送邮件了，唯一的不足是在点击提交之后会跳转出现一堆提示信息，影响观感，<a href=\"https://segmentfault.com/a/1190000000461339\" target=\"_blank\" rel=\"noopener\">这篇文章</a>中给出了一种可行方法，即为<code>form</code>标签加入target属性并添加<code>iframe</code>标签。以我的表单为例，需要将<code>form</code>标签修改为：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"mail.php\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"id_iframe\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>并在其后添加：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">id</span>=<span class=\"string\">\"id_iframe\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id_iframe\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这样修改虽然有效，但会在点击提交之后出现一个简陋的框体，其中显示的内容就是之前跳转后的提示信息。这没有达到我们的目的，于是想到将<code>iframe</code>标签隐藏，也就是将其的高度和宽度设置为0：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">id</span>=<span class=\"string\">\"id_iframe\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id_iframe\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"0\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可这样又会出现一个问题，点击按钮之后邮件到底有没有发送成功是未知的，因为所有的提示信息都被隐藏掉了，那该怎么办呢？我想到的是，将原来php文件中的两个用于输出提示信息的<code>echo</code>修改成<code>echo &quot;&lt;script&gt;alert(&#39;内容&#39;)&lt;/script&gt;&quot;</code>，也就是：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'Message has been sent'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 替换为</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;script&gt;alert('Message has been sent')&lt;/script&gt;\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"Message could not be sent. Mailer Error: &#123;$mail-&gt;ErrorInfo&#125;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 替换为</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;script&gt;alert('Message could not be sent.')&lt;/script&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>这样的话就可以实现网页弹窗提示邮件发送结果而不跳转了。</p>\n<h1 id=\"效果预览\"><a href=\"#效果预览\" class=\"headerlink\" title=\"效果预览\"></a>效果预览</h1><p><img src=\"https://img.vim-cn.com/46/d7b3a55d08f29baa98472640716e9a8ae06907.jpg\" alt=\"填写表单\" title=\"填写表单\"></p>\n<p><img src=\"https://img.vim-cn.com/ea/1a881a1eb0565d390f224777de31823efaaeb4.jpg\" alt=\"点击提交\" title=\"点击提交\"></p>\n<p><img src=\"https://img.vim-cn.com/53/10173e2b8b20b797906fa6d25ef0aa769439a8.jpg\" alt=\"收到邮件\" title=\"收到邮件\"></p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>总体来说，以上实现方式虽然可以正常使用，但是还有很大改进空间，比如提交不跳转的实现方式。不过毕竟自己没有系统学习过web方面的知识，也只能得过且过了。等什么时候能闲下来再考虑改进吧（笑）。也欢迎大家在评论里给我提建议吖！（话说这篇文章真的有人看吗？！）</p>\n","site":{"data":{}},"length":5239,"excerpt":"<p>最近在<a href=\"https://html5up.net/\" target=\"_blank\" rel=\"noopener\">html5up</a>上淘了个主页模板，模板底有一个表单，今天在修改模板的时候，朋友提起可以配置表单实现提交表单时自动发送邮件通知，于是就萌生了这个想法，结果没想到一搞就是三四个小时（主要是因为网上的某些“教程”太坑人了！），所以记录一下配置过程给后来人参考。</p>","more":"<h1 id=\"给服务器安装php-php-fpm\"><a href=\"#给服务器安装php-php-fpm\" class=\"headerlink\" title=\"给服务器安装php,php-fpm\"></a>给服务器安装php,php-fpm</h1><p>作者使用的是ubuntu18.04，所以使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php</span><br><span class=\"line\">sudo apt-get install php-fpm</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"web服务器添加php支持\"><a href=\"#web服务器添加php支持\" class=\"headerlink\" title=\"web服务器添加php支持\"></a>web服务器添加php支持</h1><p>作者使用的是nginx，为支持php需要修改一下配置文件，网上不少教程说要改<code>nginx.conf</code>，但我发现我这里的配置文件和他们的有很大差异，后来实测修改<code>/etc/nginx/sites-available/default</code>有效。将文件与php有关部分修改为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      <span class=\"comment\"># Add index.php to the list if you are using PHP</span></span><br><span class=\"line\">      index index.html index.htm index.nginx-debian.html index.php;</span><br><span class=\"line\"></span><br><span class=\"line\">      server_name _;</span><br><span class=\"line\">      </span><br><span class=\"line\"><span class=\"comment\"># nginx不允许静态文件响应post请求，会出现405 not allowed提示，所以需要添加以下内容</span></span><br><span class=\"line\"><span class=\"comment\"># 需要开启8080端口，或者可以修改为目前已经开启的端口（或许）</span></span><br><span class=\"line\">      error_page  405 =200 @405;</span><br><span class=\"line\">      location @405 &#123;</span><br><span class=\"line\">          proxy_method GET;</span><br><span class=\"line\">          proxy_pass http://你的地址:8080;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      location / &#123;</span><br><span class=\"line\">              <span class=\"comment\"># First attempt to serve request as file, then</span></span><br><span class=\"line\">              <span class=\"comment\"># as directory, then fall back to displaying a 404.</span></span><br><span class=\"line\">              try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ =404;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"># pass PHP scripts to FastCGI server</span></span><br><span class=\"line\">      <span class=\"comment\">#</span></span><br><span class=\"line\">      location ~ \\.php$ &#123;</span><br><span class=\"line\">              include snippets/fastcgi-php.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"comment\"># With php-fpm (or other unix sockets):</span></span><br><span class=\"line\">              <span class=\"comment\"># 这里需要把php7.2修改为安装php时显示的版本</span></span><br><span class=\"line\">              fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;</span><br><span class=\"line\">              <span class=\"comment\"># With php-cgi (or other tcp sockets):</span></span><br><span class=\"line\">              <span class=\"comment\"># fastcgi_pass 127.0.0.1:9000;</span></span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"修改表单所在的html文件\"><a href=\"#修改表单所在的html文件\" class=\"headerlink\" title=\"修改表单所在的html文件\"></a>修改表单所在的html文件</h1><p>接下来打开表单所在的html文件，修改form标签，例如我的：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--其实粘贴这么多只是想说form标签需要加个action=\"mail.php\"啦（滑稽）--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"mail.php\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fields\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"field half\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"name\"</span>&gt;</span>Name<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"name\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"field half\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"email\"</span>&gt;</span>Email<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"email\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"email\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"field\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"message\"</span>&gt;</span>Message<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">name</span>=<span class=\"string\">\"message\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"message\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"6\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"actions\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Send Message\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"primary\"</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"reset\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Clear\"</span> /&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置mail-php文件\"><a href=\"#配置mail-php文件\" class=\"headerlink\" title=\"配置mail.php文件\"></a>配置mail.php文件</h1><p>form提交将会调用mail.php文件，接下来就需要配置它了。我浏览了许多网站，发现网上大体只有两个模板，即<a href=\"https://jingyan.baidu.com/article/636f38bb482efcd6b8461019.html\" target=\"_blank\" rel=\"noopener\">这个</a>和<a href=\"https://www.jb51.net/article/62543.htm\" target=\"_blank\" rel=\"noopener\">这个</a>。但亲身体验后发现都！不！能！用！第一个是单纯的配置文件问题，我把各项修改好后还是不能用。（或许是因为我多删了点东西？）第二个则使用了php的mail()函数，不过很不幸的是，正如这篇<a href=\"https://www.jianshu.com/p/03e02c58200a\" target=\"_blank\" rel=\"noopener\">最后解决我问题的文章</a>中写的一样：</p>\n<blockquote>\n<p>PHP环境下，是提供了发送邮件的函数<code>mail()</code>的，不过该函数要求服务器支持sendmail或者必须设置一台不需要中继的邮件发送服务器，但现在要找到一台不需要身份验证的邮件发送中继几乎不可能，所以使用mail函数往往无法成功发送电子邮件。</p>\n</blockquote>\n<p>mail()函数确实无法成功发送邮件。这篇文章同样给出了一个解决办法，就是使用<a href=\"https://github.com/PHPMailer/PHPMailer\" target=\"_blank\" rel=\"noopener\">PHPMailer</a>。</p>\n<p>将其<code>git clone</code>到服务器并解压，mail.php只需按照README.md中所给的Example进行微量修改，我的大概为：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">// Import PHPMailer classes into the global namespace</span></span><br><span class=\"line\"><span class=\"comment\">// These must be at the top of your script, not inside a function</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PHPMailer</span>\\<span class=\"title\">PHPMailer</span>\\<span class=\"title\">PHPMailer</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PHPMailer</span>\\<span class=\"title\">PHPMailer</span>\\<span class=\"title\">SMTP</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">PHPMailer</span>\\<span class=\"title\">PHPMailer</span>\\<span class=\"title\">Exception</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修改这三个文件的路径为服务器路径</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'./PHPMailer/src/Exception.php'</span>;</span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'./PHPMailer/src/PHPMailer.php'</span>;</span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">'./PHPMailer/src/SMTP.php'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里将内容对应改成form标签中各项的名字</span></span><br><span class=\"line\">$email=$_POST[<span class=\"string\">'email'</span>];</span><br><span class=\"line\">$name=$_POST[<span class=\"string\">'name'</span>];</span><br><span class=\"line\">$message=$_POST[<span class=\"string\">'message'</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Instantiation and passing `true` enables exceptions</span></span><br><span class=\"line\">$mail = <span class=\"keyword\">new</span> PHPMailer(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这里我使用的是qq邮箱，其它邮箱同理</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Server settings</span></span><br><span class=\"line\">    $mail-&gt;SMTPDebug = SMTP::DEBUG_SERVER;                      <span class=\"comment\">// Enable verbose debug output</span></span><br><span class=\"line\">    $mail-&gt;isSMTP();                                            <span class=\"comment\">// Send using SMTP</span></span><br><span class=\"line\">    $mail-&gt;Host       = <span class=\"string\">'smtp.qq.com'</span>;                    <span class=\"comment\">// Set the SMTP server to send through</span></span><br><span class=\"line\">    $mail-&gt;SMTPAuth   = <span class=\"keyword\">true</span>;                                   <span class=\"comment\">// Enable SMTP authentication</span></span><br><span class=\"line\">    $mail-&gt;Username   = <span class=\"string\">'邮箱的用户名'</span>;                     <span class=\"comment\">// SMTP username</span></span><br><span class=\"line\">    $mail-&gt;Password   = <span class=\"string\">'邮箱的密码'</span>;                               <span class=\"comment\">// SMTP password</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` also accepted</span></span><br><span class=\"line\">    $mail-&gt;SMTPSecure = <span class=\"string\">'ssl'</span>;</span><br><span class=\"line\">    $mail-&gt;Port       = <span class=\"number\">465</span>;                                    <span class=\"comment\">// TCP port to connect to</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Recipients</span></span><br><span class=\"line\">    $mail-&gt;setFrom(<span class=\"string\">'邮箱的用户名'</span>, <span class=\"string\">'随便填个昵称'</span>);</span><br><span class=\"line\">    $mail-&gt;addAddress(<span class=\"string\">'发送到的邮箱'</span>, <span class=\"string\">'随便填个昵称'</span>);     <span class=\"comment\">// Add a recipient</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">//\t后边的那些我不用，就注释掉了</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addAddress('ellen@example.com');               // Name is optional</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addReplyTo('info@example.com', 'Information');</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addCC('cc@example.com');</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addBCC('bcc@example.com');</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Attachments</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addAttachment('/var/tmp/file.tar.gz');         // Add attachments</span></span><br><span class=\"line\"><span class=\"comment\">//    $mail-&gt;addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Content</span></span><br><span class=\"line\">    $mail-&gt;isHTML(<span class=\"keyword\">true</span>);                                  <span class=\"comment\">// Set email format to HTML</span></span><br><span class=\"line\">    $mail-&gt;Subject = <span class=\"string\">\"An E-mail from $email\"</span>;</span><br><span class=\"line\">    $mail-&gt;Body = <span class=\"string\">\"This e-mail is written by $name : $message\"</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 我在测试时，AltBody中的内容并不会在邮件中显示出来，目前暂时不清楚有什么用</span></span><br><span class=\"line\">    $mail-&gt;AltBody = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    $mail-&gt;send();</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Message has been sent'</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (<span class=\"keyword\">Exception</span> $e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"Message could not be sent. Mailer Error: &#123;$mail-&gt;ErrorInfo&#125;\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"提交不跳转方法\"><a href=\"#提交不跳转方法\" class=\"headerlink\" title=\"提交不跳转方法\"></a>提交不跳转方法</h1><p>经过以上配置之后，你的表单应该可以正常发送邮件了，唯一的不足是在点击提交之后会跳转出现一堆提示信息，影响观感，<a href=\"https://segmentfault.com/a/1190000000461339\" target=\"_blank\" rel=\"noopener\">这篇文章</a>中给出了一种可行方法，即为<code>form</code>标签加入target属性并添加<code>iframe</code>标签。以我的表单为例，需要将<code>form</code>标签修改为：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">action</span>=<span class=\"string\">\"mail.php\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"id_iframe\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>并在其后添加：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">id</span>=<span class=\"string\">\"id_iframe\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id_iframe\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这样修改虽然有效，但会在点击提交之后出现一个简陋的框体，其中显示的内容就是之前跳转后的提示信息。这没有达到我们的目的，于是想到将<code>iframe</code>标签隐藏，也就是将其的高度和宽度设置为0：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">id</span>=<span class=\"string\">\"id_iframe\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"id_iframe\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"0\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>可这样又会出现一个问题，点击按钮之后邮件到底有没有发送成功是未知的，因为所有的提示信息都被隐藏掉了，那该怎么办呢？我想到的是，将原来php文件中的两个用于输出提示信息的<code>echo</code>修改成<code>echo &quot;&lt;script&gt;alert(&#39;内容&#39;)&lt;/script&gt;&quot;</code>，也就是：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">'Message has been sent'</span>;</span><br><span class=\"line\"><span class=\"comment\">// 替换为</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;script&gt;alert('Message has been sent')&lt;/script&gt;\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"Message could not be sent. Mailer Error: &#123;$mail-&gt;ErrorInfo&#125;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 替换为</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;script&gt;alert('Message could not be sent.')&lt;/script&gt;\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>这样的话就可以实现网页弹窗提示邮件发送结果而不跳转了。</p>\n<h1 id=\"效果预览\"><a href=\"#效果预览\" class=\"headerlink\" title=\"效果预览\"></a>效果预览</h1><p><img src=\"https://img.vim-cn.com/46/d7b3a55d08f29baa98472640716e9a8ae06907.jpg\" alt=\"填写表单\" title=\"填写表单\"></p>\n<p><img src=\"https://img.vim-cn.com/ea/1a881a1eb0565d390f224777de31823efaaeb4.jpg\" alt=\"点击提交\" title=\"点击提交\"></p>\n<p><img src=\"https://img.vim-cn.com/53/10173e2b8b20b797906fa6d25ef0aa769439a8.jpg\" alt=\"收到邮件\" title=\"收到邮件\"></p>\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>总体来说，以上实现方式虽然可以正常使用，但是还有很大改进空间，比如提交不跳转的实现方式。不过毕竟自己没有系统学习过web方面的知识，也只能得过且过了。等什么时候能闲下来再考虑改进吧（笑）。也欢迎大家在评论里给我提建议吖！（话说这篇文章真的有人看吗？！）</p>"},{"title":"medum-一款命令行待办事项管理器","date":"2020-05-23T15:09:29.000Z","_content":"\n前几天整了一个命令行待办事项管理器：[medum](https://github.com/amtoaer/medum)。注意到自己已经有一阵子没发过文章了，正好今晚有空，把它拿出来随便聊聊，顺便水一篇233（（\n\n## 名称由来\n\n这个项目叫做`medum`，为什么呢？\n\n因为它的开发目的是防止我忘记`ddl`，所以从一开始，它就是作为一个备忘录（memorandum）而被设计的。我从*memorandum*这个单词中取了前两个和后三个字母进行拼接，于是`medum`诞生了。（好随意啊XD\n\n<!--more-->\n\n## 代码结构\n\n具体的开发初衷已经写在了`README.md`里，所以接下来就说说代码结构吧。\n\n下面是所有的代码文件：\n\n```bash\n.\n├── config\n│   └── config.go\n├── main.go\n├── output\n│   └── output.go\n├── path\n│   └── path.go\n├── public\n│   └── public.go\n├── sqlite\n│   └── sqlite.go\n└── text\n    └── text.go\n```\n\n每个模块的功能如下：\n\n+   `path.go`：负责获取配置文件夹路径，配置文件路径和sqlite数据库路径。\n+   `config.go`：负责读取配置文件，并在配置文件不存在的情况下写入默认配置。\n+   `public.go`：存放公共的结构体，包括在多个文件进行引用的`Configuration`（配置文件）、`Event`（事项）。\n+   `sqlite.go`：sqlite数据库的打开，插入，更新，查询，删除功能的实现。\n+   `text.go`：存放该程序近乎所有的文本信息（包括报错、提醒以及sql语句）。\n+   `output.go`：将配置文件的颜色映射为函数，对彩色输出函数的反射调用进行一层封装。\n\n## 设计思路\n\n1.  首先从功能出发，既然要读取文件，那么获取路径是必须的，于是首先考虑实现`path.go`：\n\n    ```go\n    // path.go\n    func GetPath() string { //获取文件夹路径，路径为~/.medum\n    \tpath, err := homedir.Dir()\n    \tif err != nil {\n    \t\tfmt.Printf(text.HomedirError, err)\n    \t\tos.Exit(1)\n    \t}\n    \treturn filepath.Join(path, \".medum\")\n    }\n    // 后面获取配置文件和数据的路径很简单，在文件夹路径后加文件名就可以\n    ```\n\n    \n\n2.  有了路径，接下来就是要到路径中读取文件啦，但文件读入到哪儿呢？为了让内容有处可去，应该先实现一个配置文件的结构体。考虑到配置文件自定义的是颜色，必定需要被输出模块读取，所以将其分离放在`public.go`里，接着再写`config.go`：\n\n    ```go\n    // public.go\n    type Configuration struct {\n    \tNumberColor string\n    \tEventColor  string\n    \tTimeColor   string\n    }\n    ```\n\n    ```go\n    // config.go\n    func ReadConfig() *public.Configuration {\n    \tconfigPath := path.GetConfigPath()\n    \t// 检测配置文件是否存在，不存在则写入默认配置\n    \tif _, err := os.Stat(configPath); err != nil && !os.IsExist(err) {\n    \t\twriteInitConfig(configPath)\n    \t}\n        // ...\n    \tdecoder := json.NewDecoder(file)\n    \tconf := new(public.Configuration)\n        // 将文件读取到conf中\n    \terr = decoder.Decode(conf)\n        // ...\n    \treturn conf\n        \n    func writeInitConfig(configPath string) {\n        // 首先看文件夹是否存在，如果不存在则新建\n    \ttmp := path.GetPath()\n    \tif _, err := os.Stat(tmp); !os.IsExist(err) {\n    \t\tos.Mkdir(tmp, os.FileMode(0777))\n    \t}\n        // 接着新建配置文件\n    \tfile, err := os.Create(configPath)\n    \t// 创建默认配置\n    \tconf := public.Configuration{\n    \t\tNumberColor: \"red\",\n    \t\tEventColor:  \"blue\",\n    \t\tTimeColor:   \"yellow\",\n    \t}\n        // 写入\n    \tencoder := json.NewEncoder(file)\n    \tencoder.Encode(conf)\n    }\n    ```\n\n3.  实现了配置文件的读取，紧接着就是数据的操作了，考虑实现`sqlite.go`，但为了方便修改，尽量将所有的文本内容与逻辑分离，需要先写`text.go`，但在这之前，还要先考虑好事件结构体的内容，所以最终顺序是`public.go`->`text.go`->`sqlite.go`：\n\n    ```go\n    // public.go\n    // 包括id，事件内容，开始结束日期，当前状态\n    type Event struct {\n    \tID           int\n    \tEventContent string\n    \tBeginDate    int64\n    \tEndDate      int64\n    \tIsEnd        uint8\n    }\n    ```\n\n    ```go\n    // text.go\n    const (\n        // 创建表，其中id自增，event为事件名，开始日期结束日期用时间戳存储。\n        // 状态标记方面，一个事件应该有未开始，正在进行，结束三个状态，故isEnd可取0,1,2，对应三种状态\n    \tCreateTable = `create table if not exists eventList(\n    \t\tid integer primary key autoincrement,\n    \t\tevent varchar(100) not null,\n    \t\tbeginDate unsigned bigint not null,\n    \t\tendDate unsigned bigint not null,\n    \t\tisEnd smallint default 1 not null\n    \t);`\n        // 插入一行\n    \tInsertRow      = `insert into eventList (event,beginDate,endDate) values (?,?,?);`\n        // 当前时间大于结束时间则标记超时\n    \tMarkOutdate    = `update eventList set isEnd=2 where ?>endDate;`\n        // 当前时间小于开始时间则标记未开始\n    \tMarkNotStart   = `update eventList set isEnd=0 where ?<beginDate;`\n        // 介于开始结束之间标记正在进行\n    \tMarkInProgress = `update eventList set isEnd=1 where ? between beginDate and endDate;`\n        // 得到所有的事件，按事件状态，结束日期排序\n    \tQueryRow       = `select * from eventList order by isEnd desc,endDate`\n        // 删除超时事件\n    \tDeleteOutDate  = `delete from eventList where isEnd=2`\n        // 对于完成了的事件，通过id删除\n    \tDeleteID       = `delete from eventList where id=?`\n    )\n    ```\n\n    ```go\n    // sqlite.go\n    // 打开数据库\n    func openSqliteDB() *sql.DB {\n    \tdb, err := sql.Open(\"sqlite3\", path.GetDataPath())\n    \tif err != nil {\n    \t\tfmt.Printf(text.OpenDBError, err)\n    \t\tos.Exit(1)\n    \t}\n    \tdb.Exec(text.CreateTable)\n    \treturn db\n    }\n    // 剩余函数逻辑类似，取其中之一举例：\n    func InsertSqliteDB(eventContent string, beginDate, endDate time.Time) error {\n        // 打开数据库\n    \tdb := openSqliteDB()\n        // 结束时关闭\n    \tdefer db.Close()\n        // 执行语句\n    \t_, err := db.Exec(text.InsertRow, eventContent, beginDate.Unix(), endDate.Unix())\n    \treturn err\n    }\n    ```\n\n4.  接下来考虑实现`output.go`：\n\n    ```go\n    // output.go\n    // 支持的所有颜色（采用map[string]interface{}存储）\n    var funcs = map[string]interface{}{\n    \t\"red\":       color.New(color.FgRed),\n    \t\"blue\":      color.New(color.FgBlue),\n    \t\"cyan\":      color.New(color.FgCyan),\n    \t\"green\":     color.New(color.FgGreen),\n    \t\"yellow\":    color.New(color.FgYellow),\n    \t\"magenta\":   color.New(color.FgMagenta),\n    \t\"white\":     color.New(color.FgWhite),\n    \t\"black\":     color.New(color.FgBlack),\n    \t\"hired\":     color.New(color.FgHiRed),\n    \t\"hiblue\":    color.New(color.FgHiBlue),\n    \t\"hicyan\":    color.New(color.FgHiCyan),\n    \t\"higreen\":   color.New(color.FgHiGreen),\n    \t\"hiyellow\":  color.New(color.FgHiYellow),\n    \t\"himagenta\": color.New(color.FgHiMagenta),\n    \t\"hiwhite\":   color.New(color.FgHiWhite),\n    \t\"hiblack\":   color.New(color.FgHiBlack),\n    }\n    // 使用reflect包进行动态调用\n    func call(m map[string]interface{}, color string, params ...interface{}) {\n    \tfunction := reflect.ValueOf(m[color]).MethodByName(\"Printf\")\n    \tin := make([]reflect.Value, len(params))\n    \tfor index, param := range params {\n    \t\tin[index] = reflect.ValueOf(param)\n    \t}\n    \tfunction.Call(in)\n    }\n    \n    // 将call进行一层封装，对外公开Call函数\n    func Call(color string, params ...interface{}) {\n    \tcall(funcs, color, params...)\n    }\n    \n    ```\n\n5.  万事俱备，最后只需要在主函数中完成调用逻辑即可（当然还需要补全一些错误输出、给用户的提示等等，不过那些已经很简单了）：\n\n    ```go\n    // main.go\n    // 接受的命令行参数\n    var (\n    \tbegin  string\n    \tend    string\n    \tname   string\n    \tremove bool\n    \tdone   int\n    )\n    \n    func main() {\n    \tapp := &cli.App{\n    \t\t// 省略掉参数绑定等流程\n    \t\tAction: func(c *cli.Context) error {\n                // 读取配置文件\n    \t\t\tconf := *config.ReadConfig()\n    \t\t\tif remove {\n                    // -r：首先标记过期事件，接着删除之\n    \t\t\t\tsqlite.UpdateSqliteDB(text.MarkOutdate)\n    \t\t\t\terr := sqlite.DeleteOutDate()\n    \t\t\t\tif err != nil {\n    \t\t\t\t\tfmt.Printf(text.DeleteOutdateError, err)\n    \t\t\t\t\tos.Exit(1)\n    \t\t\t\t}\n    \t\t\t\tfmt.Println(text.DeleteOutdateSuccess)\n    \t\t\t} else if done != 0 {\n                    // -d int： 直接删除该id\n    \t\t\t\terr := sqlite.DeleteID(done)\n    \t\t\t\tif err != nil {\n    \t\t\t\t\tfmt.Printf(text.DeleteIDError, err)\n    \t\t\t\t\tos.Exit(1)\n    \t\t\t\t}\n    \t\t\t\tfmt.Println(text.DeleteIDSuccess)\n    \t\t\t} else {\n    \t\t\t\tif len(end) == 0 { \n                      // 如果没有-d，打印事件列表\n                      // 这里只标记进行中和超时，是因为在插入事件时已经标记了是否未开始，时间顺序流动，不可能从开始变为未开始\n    \t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkInProgress)\n    \t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkOutdate)\n    \t\t\t\t\t// ...省略输出部分\n    \t\t\t\t\t}\n    \t\t\t\t} else { \n                    // 如果存在-e，则解析结束时间，开始事件如果有就解析，没有默认为当前时间\n    \t\t\t\t\tvar beginTime, endTime time.Time\n    \t\t\t\t\tendTime = handleString(end)\n    \t\t\t\t\tif len(begin) == 0 {\n    \t\t\t\t\t\tbeginTime = time.Now()\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\tbeginTime = handleString(begin)\n    \t\t\t\t\t}\n    \t\t\t\t\tif beginTime.Unix() >= endTime.Unix() {\n    \t\t\t\t\t\tfmt.Println(text.TimeError)\n    \t\t\t\t\t\tos.Exit(1)\n    \t\t\t\t\t}\n                    // 将输入事件插入\n    \t\t\t\t\terr := sqlite.InsertSqliteDB(name, beginTime, endTime)\n    \t\t\t\t\tif err != nil {\n    \t\t\t\t\t\tfmt.Printf(text.InsertDBError, err)\n    \t\t\t\t\t}\n                    // 标记未开始\n    \t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkNotStart)\n    \t\t\t\t\tfmt.Println(text.InsertSuccess)\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\treturn nil\n    \t\t}}\n    \terr := app.Run(os.Args)\n    \tif err != nil {\n    \t\tlog.Fatal(err)\n    \t}\n    }\n    func handleString(tm string) time.Time {\n        // 时间字符串转time.Time，只接受month.day.hour.minute格式\n    \ttmp := strings.Split(tm, \".\")\n        // 长度不为4则退出\n    \tif len(tmp) != 4 {\n    \t\tfmt.Println(text.LengthError)\n    \t\tos.Exit(1)\n    \t} else {\n            // 补全0，例如将5.20.12.0补全为05.20.12.00，防止解析错误\n    \t\tfor index := range tmp { \n    \t\t\tif len(tmp[index]) == 1 {\n    \t\t\t\ttmp[index] = \"0\" + tmp[index]\n    \t\t\t}\n    \t\t}\n    \t\tstdString := fmt.Sprintf(text.MyTime, strconv.Itoa(time.Now().Year()), tmp[0], tmp[1], tmp[2], tmp[3])\n    \t\tresult, err := time.ParseInLocation(text.StandardTime, stdString, time.Now().Local().Location())\n    \t\tif err != nil {\n    \t\t\tfmt.Printf(text.ParamError, err)\n    \t\t\tos.Exit(1)\n    \t\t}\n    \t\treturn result\n    \t}\n    \t//useless line, just to prevent warning\n    \treturn time.Now()\n    }\n    \n    func formatTime(begin, end int64, IsEnd uint8) string {\n        // 将时间转换成%s time remaining/%s time beginning格式，其中的%s调用下面的formatTimeString函数获取\n    \tnow := time.Now()\n    \tif IsEnd == 0 {\n    \t\tbeginTime := time.Unix(begin, 0)\n    \t\tdur := beginTime.Sub(now)\n    \t\treturn fmt.Sprintf(text.TimeBeginning, formatTimeString(dur.Minutes()))\n    \t} else if IsEnd == 1 {\n    \t\tendTime := time.Unix(end, 0)\n    \t\tdur := endTime.Sub(now)\n    \t\treturn fmt.Sprintf(text.TimeRemaining, formatTimeString(dur.Minutes()))\n    \t} else {\n    \t\treturn fmt.Sprintf(text.TimeRemaining, \"no time\")\n    \t}\n    }\n    \n    func formatTimeString(min float64) string {\n        // 获取天/小时/分钟\n    \tvar tmp string\n    \tif min > 1440 {\n    \t\ttmp = strconv.Itoa(int(min/1440)) + \" days\"\n    \t} else if min > 60 {\n    \t\ttmp = strconv.Itoa(int((min / 60))) + \" hours\"\n    \t} else {\n    \t\ttmp = strconv.Itoa(int(min)) + \" minutes\"\n    \t}\n    \treturn tmp\n    }\n    ```\n\n这样下来，预想的功能就实现的差不多了，任务成功完成。\n\n## 结束语\n\nokk，这样就结束啦，算是写了个小总结吧。\n\n代码基本全程都有注释（不过为了符合`golang`的规范，使用的是塑料英语XD），觉得自己代码写的还是蛮易读的，欢迎大家阅读给出建议哦！","source":"_posts/medum.md","raw":"---\ntitle: medum-一款命令行待办事项管理器\ndate: 2020-05-23 23:09:29\ntags: [go]\ncategories: 开发记录\n---\n\n前几天整了一个命令行待办事项管理器：[medum](https://github.com/amtoaer/medum)。注意到自己已经有一阵子没发过文章了，正好今晚有空，把它拿出来随便聊聊，顺便水一篇233（（\n\n## 名称由来\n\n这个项目叫做`medum`，为什么呢？\n\n因为它的开发目的是防止我忘记`ddl`，所以从一开始，它就是作为一个备忘录（memorandum）而被设计的。我从*memorandum*这个单词中取了前两个和后三个字母进行拼接，于是`medum`诞生了。（好随意啊XD\n\n<!--more-->\n\n## 代码结构\n\n具体的开发初衷已经写在了`README.md`里，所以接下来就说说代码结构吧。\n\n下面是所有的代码文件：\n\n```bash\n.\n├── config\n│   └── config.go\n├── main.go\n├── output\n│   └── output.go\n├── path\n│   └── path.go\n├── public\n│   └── public.go\n├── sqlite\n│   └── sqlite.go\n└── text\n    └── text.go\n```\n\n每个模块的功能如下：\n\n+   `path.go`：负责获取配置文件夹路径，配置文件路径和sqlite数据库路径。\n+   `config.go`：负责读取配置文件，并在配置文件不存在的情况下写入默认配置。\n+   `public.go`：存放公共的结构体，包括在多个文件进行引用的`Configuration`（配置文件）、`Event`（事项）。\n+   `sqlite.go`：sqlite数据库的打开，插入，更新，查询，删除功能的实现。\n+   `text.go`：存放该程序近乎所有的文本信息（包括报错、提醒以及sql语句）。\n+   `output.go`：将配置文件的颜色映射为函数，对彩色输出函数的反射调用进行一层封装。\n\n## 设计思路\n\n1.  首先从功能出发，既然要读取文件，那么获取路径是必须的，于是首先考虑实现`path.go`：\n\n    ```go\n    // path.go\n    func GetPath() string { //获取文件夹路径，路径为~/.medum\n    \tpath, err := homedir.Dir()\n    \tif err != nil {\n    \t\tfmt.Printf(text.HomedirError, err)\n    \t\tos.Exit(1)\n    \t}\n    \treturn filepath.Join(path, \".medum\")\n    }\n    // 后面获取配置文件和数据的路径很简单，在文件夹路径后加文件名就可以\n    ```\n\n    \n\n2.  有了路径，接下来就是要到路径中读取文件啦，但文件读入到哪儿呢？为了让内容有处可去，应该先实现一个配置文件的结构体。考虑到配置文件自定义的是颜色，必定需要被输出模块读取，所以将其分离放在`public.go`里，接着再写`config.go`：\n\n    ```go\n    // public.go\n    type Configuration struct {\n    \tNumberColor string\n    \tEventColor  string\n    \tTimeColor   string\n    }\n    ```\n\n    ```go\n    // config.go\n    func ReadConfig() *public.Configuration {\n    \tconfigPath := path.GetConfigPath()\n    \t// 检测配置文件是否存在，不存在则写入默认配置\n    \tif _, err := os.Stat(configPath); err != nil && !os.IsExist(err) {\n    \t\twriteInitConfig(configPath)\n    \t}\n        // ...\n    \tdecoder := json.NewDecoder(file)\n    \tconf := new(public.Configuration)\n        // 将文件读取到conf中\n    \terr = decoder.Decode(conf)\n        // ...\n    \treturn conf\n        \n    func writeInitConfig(configPath string) {\n        // 首先看文件夹是否存在，如果不存在则新建\n    \ttmp := path.GetPath()\n    \tif _, err := os.Stat(tmp); !os.IsExist(err) {\n    \t\tos.Mkdir(tmp, os.FileMode(0777))\n    \t}\n        // 接着新建配置文件\n    \tfile, err := os.Create(configPath)\n    \t// 创建默认配置\n    \tconf := public.Configuration{\n    \t\tNumberColor: \"red\",\n    \t\tEventColor:  \"blue\",\n    \t\tTimeColor:   \"yellow\",\n    \t}\n        // 写入\n    \tencoder := json.NewEncoder(file)\n    \tencoder.Encode(conf)\n    }\n    ```\n\n3.  实现了配置文件的读取，紧接着就是数据的操作了，考虑实现`sqlite.go`，但为了方便修改，尽量将所有的文本内容与逻辑分离，需要先写`text.go`，但在这之前，还要先考虑好事件结构体的内容，所以最终顺序是`public.go`->`text.go`->`sqlite.go`：\n\n    ```go\n    // public.go\n    // 包括id，事件内容，开始结束日期，当前状态\n    type Event struct {\n    \tID           int\n    \tEventContent string\n    \tBeginDate    int64\n    \tEndDate      int64\n    \tIsEnd        uint8\n    }\n    ```\n\n    ```go\n    // text.go\n    const (\n        // 创建表，其中id自增，event为事件名，开始日期结束日期用时间戳存储。\n        // 状态标记方面，一个事件应该有未开始，正在进行，结束三个状态，故isEnd可取0,1,2，对应三种状态\n    \tCreateTable = `create table if not exists eventList(\n    \t\tid integer primary key autoincrement,\n    \t\tevent varchar(100) not null,\n    \t\tbeginDate unsigned bigint not null,\n    \t\tendDate unsigned bigint not null,\n    \t\tisEnd smallint default 1 not null\n    \t);`\n        // 插入一行\n    \tInsertRow      = `insert into eventList (event,beginDate,endDate) values (?,?,?);`\n        // 当前时间大于结束时间则标记超时\n    \tMarkOutdate    = `update eventList set isEnd=2 where ?>endDate;`\n        // 当前时间小于开始时间则标记未开始\n    \tMarkNotStart   = `update eventList set isEnd=0 where ?<beginDate;`\n        // 介于开始结束之间标记正在进行\n    \tMarkInProgress = `update eventList set isEnd=1 where ? between beginDate and endDate;`\n        // 得到所有的事件，按事件状态，结束日期排序\n    \tQueryRow       = `select * from eventList order by isEnd desc,endDate`\n        // 删除超时事件\n    \tDeleteOutDate  = `delete from eventList where isEnd=2`\n        // 对于完成了的事件，通过id删除\n    \tDeleteID       = `delete from eventList where id=?`\n    )\n    ```\n\n    ```go\n    // sqlite.go\n    // 打开数据库\n    func openSqliteDB() *sql.DB {\n    \tdb, err := sql.Open(\"sqlite3\", path.GetDataPath())\n    \tif err != nil {\n    \t\tfmt.Printf(text.OpenDBError, err)\n    \t\tos.Exit(1)\n    \t}\n    \tdb.Exec(text.CreateTable)\n    \treturn db\n    }\n    // 剩余函数逻辑类似，取其中之一举例：\n    func InsertSqliteDB(eventContent string, beginDate, endDate time.Time) error {\n        // 打开数据库\n    \tdb := openSqliteDB()\n        // 结束时关闭\n    \tdefer db.Close()\n        // 执行语句\n    \t_, err := db.Exec(text.InsertRow, eventContent, beginDate.Unix(), endDate.Unix())\n    \treturn err\n    }\n    ```\n\n4.  接下来考虑实现`output.go`：\n\n    ```go\n    // output.go\n    // 支持的所有颜色（采用map[string]interface{}存储）\n    var funcs = map[string]interface{}{\n    \t\"red\":       color.New(color.FgRed),\n    \t\"blue\":      color.New(color.FgBlue),\n    \t\"cyan\":      color.New(color.FgCyan),\n    \t\"green\":     color.New(color.FgGreen),\n    \t\"yellow\":    color.New(color.FgYellow),\n    \t\"magenta\":   color.New(color.FgMagenta),\n    \t\"white\":     color.New(color.FgWhite),\n    \t\"black\":     color.New(color.FgBlack),\n    \t\"hired\":     color.New(color.FgHiRed),\n    \t\"hiblue\":    color.New(color.FgHiBlue),\n    \t\"hicyan\":    color.New(color.FgHiCyan),\n    \t\"higreen\":   color.New(color.FgHiGreen),\n    \t\"hiyellow\":  color.New(color.FgHiYellow),\n    \t\"himagenta\": color.New(color.FgHiMagenta),\n    \t\"hiwhite\":   color.New(color.FgHiWhite),\n    \t\"hiblack\":   color.New(color.FgHiBlack),\n    }\n    // 使用reflect包进行动态调用\n    func call(m map[string]interface{}, color string, params ...interface{}) {\n    \tfunction := reflect.ValueOf(m[color]).MethodByName(\"Printf\")\n    \tin := make([]reflect.Value, len(params))\n    \tfor index, param := range params {\n    \t\tin[index] = reflect.ValueOf(param)\n    \t}\n    \tfunction.Call(in)\n    }\n    \n    // 将call进行一层封装，对外公开Call函数\n    func Call(color string, params ...interface{}) {\n    \tcall(funcs, color, params...)\n    }\n    \n    ```\n\n5.  万事俱备，最后只需要在主函数中完成调用逻辑即可（当然还需要补全一些错误输出、给用户的提示等等，不过那些已经很简单了）：\n\n    ```go\n    // main.go\n    // 接受的命令行参数\n    var (\n    \tbegin  string\n    \tend    string\n    \tname   string\n    \tremove bool\n    \tdone   int\n    )\n    \n    func main() {\n    \tapp := &cli.App{\n    \t\t// 省略掉参数绑定等流程\n    \t\tAction: func(c *cli.Context) error {\n                // 读取配置文件\n    \t\t\tconf := *config.ReadConfig()\n    \t\t\tif remove {\n                    // -r：首先标记过期事件，接着删除之\n    \t\t\t\tsqlite.UpdateSqliteDB(text.MarkOutdate)\n    \t\t\t\terr := sqlite.DeleteOutDate()\n    \t\t\t\tif err != nil {\n    \t\t\t\t\tfmt.Printf(text.DeleteOutdateError, err)\n    \t\t\t\t\tos.Exit(1)\n    \t\t\t\t}\n    \t\t\t\tfmt.Println(text.DeleteOutdateSuccess)\n    \t\t\t} else if done != 0 {\n                    // -d int： 直接删除该id\n    \t\t\t\terr := sqlite.DeleteID(done)\n    \t\t\t\tif err != nil {\n    \t\t\t\t\tfmt.Printf(text.DeleteIDError, err)\n    \t\t\t\t\tos.Exit(1)\n    \t\t\t\t}\n    \t\t\t\tfmt.Println(text.DeleteIDSuccess)\n    \t\t\t} else {\n    \t\t\t\tif len(end) == 0 { \n                      // 如果没有-d，打印事件列表\n                      // 这里只标记进行中和超时，是因为在插入事件时已经标记了是否未开始，时间顺序流动，不可能从开始变为未开始\n    \t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkInProgress)\n    \t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkOutdate)\n    \t\t\t\t\t// ...省略输出部分\n    \t\t\t\t\t}\n    \t\t\t\t} else { \n                    // 如果存在-e，则解析结束时间，开始事件如果有就解析，没有默认为当前时间\n    \t\t\t\t\tvar beginTime, endTime time.Time\n    \t\t\t\t\tendTime = handleString(end)\n    \t\t\t\t\tif len(begin) == 0 {\n    \t\t\t\t\t\tbeginTime = time.Now()\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\tbeginTime = handleString(begin)\n    \t\t\t\t\t}\n    \t\t\t\t\tif beginTime.Unix() >= endTime.Unix() {\n    \t\t\t\t\t\tfmt.Println(text.TimeError)\n    \t\t\t\t\t\tos.Exit(1)\n    \t\t\t\t\t}\n                    // 将输入事件插入\n    \t\t\t\t\terr := sqlite.InsertSqliteDB(name, beginTime, endTime)\n    \t\t\t\t\tif err != nil {\n    \t\t\t\t\t\tfmt.Printf(text.InsertDBError, err)\n    \t\t\t\t\t}\n                    // 标记未开始\n    \t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkNotStart)\n    \t\t\t\t\tfmt.Println(text.InsertSuccess)\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\treturn nil\n    \t\t}}\n    \terr := app.Run(os.Args)\n    \tif err != nil {\n    \t\tlog.Fatal(err)\n    \t}\n    }\n    func handleString(tm string) time.Time {\n        // 时间字符串转time.Time，只接受month.day.hour.minute格式\n    \ttmp := strings.Split(tm, \".\")\n        // 长度不为4则退出\n    \tif len(tmp) != 4 {\n    \t\tfmt.Println(text.LengthError)\n    \t\tos.Exit(1)\n    \t} else {\n            // 补全0，例如将5.20.12.0补全为05.20.12.00，防止解析错误\n    \t\tfor index := range tmp { \n    \t\t\tif len(tmp[index]) == 1 {\n    \t\t\t\ttmp[index] = \"0\" + tmp[index]\n    \t\t\t}\n    \t\t}\n    \t\tstdString := fmt.Sprintf(text.MyTime, strconv.Itoa(time.Now().Year()), tmp[0], tmp[1], tmp[2], tmp[3])\n    \t\tresult, err := time.ParseInLocation(text.StandardTime, stdString, time.Now().Local().Location())\n    \t\tif err != nil {\n    \t\t\tfmt.Printf(text.ParamError, err)\n    \t\t\tos.Exit(1)\n    \t\t}\n    \t\treturn result\n    \t}\n    \t//useless line, just to prevent warning\n    \treturn time.Now()\n    }\n    \n    func formatTime(begin, end int64, IsEnd uint8) string {\n        // 将时间转换成%s time remaining/%s time beginning格式，其中的%s调用下面的formatTimeString函数获取\n    \tnow := time.Now()\n    \tif IsEnd == 0 {\n    \t\tbeginTime := time.Unix(begin, 0)\n    \t\tdur := beginTime.Sub(now)\n    \t\treturn fmt.Sprintf(text.TimeBeginning, formatTimeString(dur.Minutes()))\n    \t} else if IsEnd == 1 {\n    \t\tendTime := time.Unix(end, 0)\n    \t\tdur := endTime.Sub(now)\n    \t\treturn fmt.Sprintf(text.TimeRemaining, formatTimeString(dur.Minutes()))\n    \t} else {\n    \t\treturn fmt.Sprintf(text.TimeRemaining, \"no time\")\n    \t}\n    }\n    \n    func formatTimeString(min float64) string {\n        // 获取天/小时/分钟\n    \tvar tmp string\n    \tif min > 1440 {\n    \t\ttmp = strconv.Itoa(int(min/1440)) + \" days\"\n    \t} else if min > 60 {\n    \t\ttmp = strconv.Itoa(int((min / 60))) + \" hours\"\n    \t} else {\n    \t\ttmp = strconv.Itoa(int(min)) + \" minutes\"\n    \t}\n    \treturn tmp\n    }\n    ```\n\n这样下来，预想的功能就实现的差不多了，任务成功完成。\n\n## 结束语\n\nokk，这样就结束啦，算是写了个小总结吧。\n\n代码基本全程都有注释（不过为了符合`golang`的规范，使用的是塑料英语XD），觉得自己代码写的还是蛮易读的，欢迎大家阅读给出建议哦！","slug":"medum","published":1,"updated":"2020-05-23T16:41:37.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckawlrp6r0021hpz6h28egtkh","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><p>前几天整了一个命令行待办事项管理器：<a href=\"https://github.com/amtoaer/medum\" target=\"_blank\" rel=\"noopener\">medum</a>。注意到自己已经有一阵子没发过文章了，正好今晚有空，把它拿出来随便聊聊，顺便水一篇233（（</p>\n<h2 id=\"名称由来\"><a href=\"#名称由来\" class=\"headerlink\" title=\"名称由来\"></a>名称由来</h2><p>这个项目叫做<code>medum</code>，为什么呢？</p>\n<p>因为它的开发目的是防止我忘记<code>ddl</code>，所以从一开始，它就是作为一个备忘录（memorandum）而被设计的。我从<em>memorandum</em>这个单词中取了前两个和后三个字母进行拼接，于是<code>medum</code>诞生了。（好随意啊XD</p>\n<a id=\"more\"></a>\n\n<h2 id=\"代码结构\"><a href=\"#代码结构\" class=\"headerlink\" title=\"代码结构\"></a>代码结构</h2><p>具体的开发初衷已经写在了<code>README.md</code>里，所以接下来就说说代码结构吧。</p>\n<p>下面是所有的代码文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── config</span><br><span class=\"line\">│   └── config.go</span><br><span class=\"line\">├── main.go</span><br><span class=\"line\">├── output</span><br><span class=\"line\">│   └── output.go</span><br><span class=\"line\">├── path</span><br><span class=\"line\">│   └── path.go</span><br><span class=\"line\">├── public</span><br><span class=\"line\">│   └── public.go</span><br><span class=\"line\">├── sqlite</span><br><span class=\"line\">│   └── sqlite.go</span><br><span class=\"line\">└── text</span><br><span class=\"line\">    └── text.go</span><br></pre></td></tr></table></figure>\n\n<p>每个模块的功能如下：</p>\n<ul>\n<li><code>path.go</code>：负责获取配置文件夹路径，配置文件路径和sqlite数据库路径。</li>\n<li><code>config.go</code>：负责读取配置文件，并在配置文件不存在的情况下写入默认配置。</li>\n<li><code>public.go</code>：存放公共的结构体，包括在多个文件进行引用的<code>Configuration</code>（配置文件）、<code>Event</code>（事项）。</li>\n<li><code>sqlite.go</code>：sqlite数据库的打开，插入，更新，查询，删除功能的实现。</li>\n<li><code>text.go</code>：存放该程序近乎所有的文本信息（包括报错、提醒以及sql语句）。</li>\n<li><code>output.go</code>：将配置文件的颜色映射为函数，对彩色输出函数的反射调用进行一层封装。</li>\n</ul>\n<h2 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><ol>\n<li><p>首先从功能出发，既然要读取文件，那么获取路径是必须的，于是首先考虑实现<code>path.go</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// path.go</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GetPath</span><span class=\"params\">()</span> <span class=\"title\">string</span></span> &#123; <span class=\"comment\">//获取文件夹路径，路径为~/.medum</span></span><br><span class=\"line\">\tpath, err := homedir.Dir()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Printf(text.HomedirError, err)</span><br><span class=\"line\">\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> filepath.Join(path, <span class=\"string\">\".medum\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 后面获取配置文件和数据的路径很简单，在文件夹路径后加文件名就可以</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>有了路径，接下来就是要到路径中读取文件啦，但文件读入到哪儿呢？为了让内容有处可去，应该先实现一个配置文件的结构体。考虑到配置文件自定义的是颜色，必定需要被输出模块读取，所以将其分离放在<code>public.go</code>里，接着再写<code>config.go</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// public.go</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Configuration <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tNumberColor <span class=\"keyword\">string</span></span><br><span class=\"line\">\tEventColor  <span class=\"keyword\">string</span></span><br><span class=\"line\">\tTimeColor   <span class=\"keyword\">string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// config.go</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ReadConfig</span><span class=\"params\">()</span> *<span class=\"title\">public</span>.<span class=\"title\">Configuration</span></span> &#123;</span><br><span class=\"line\">\tconfigPath := path.GetConfigPath()</span><br><span class=\"line\">\t<span class=\"comment\">// 检测配置文件是否存在，不存在则写入默认配置</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> _, err := os.Stat(configPath); err != <span class=\"literal\">nil</span> &amp;&amp; !os.IsExist(err) &#123;</span><br><span class=\"line\">\t\twriteInitConfig(configPath)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">\tdecoder := json.NewDecoder(file)</span><br><span class=\"line\">\tconf := <span class=\"built_in\">new</span>(public.Configuration)</span><br><span class=\"line\">    <span class=\"comment\">// 将文件读取到conf中</span></span><br><span class=\"line\">\terr = decoder.Decode(conf)</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> conf</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">writeInitConfig</span><span class=\"params\">(configPath <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 首先看文件夹是否存在，如果不存在则新建</span></span><br><span class=\"line\">\ttmp := path.GetPath()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> _, err := os.Stat(tmp); !os.IsExist(err) &#123;</span><br><span class=\"line\">\t\tos.Mkdir(tmp, os.FileMode(<span class=\"number\">0777</span>))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 接着新建配置文件</span></span><br><span class=\"line\">\tfile, err := os.Create(configPath)</span><br><span class=\"line\">\t<span class=\"comment\">// 创建默认配置</span></span><br><span class=\"line\">\tconf := public.Configuration&#123;</span><br><span class=\"line\">\t\tNumberColor: <span class=\"string\">\"red\"</span>,</span><br><span class=\"line\">\t\tEventColor:  <span class=\"string\">\"blue\"</span>,</span><br><span class=\"line\">\t\tTimeColor:   <span class=\"string\">\"yellow\"</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 写入</span></span><br><span class=\"line\">\tencoder := json.NewEncoder(file)</span><br><span class=\"line\">\tencoder.Encode(conf)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>实现了配置文件的读取，紧接着就是数据的操作了，考虑实现<code>sqlite.go</code>，但为了方便修改，尽量将所有的文本内容与逻辑分离，需要先写<code>text.go</code>，但在这之前，还要先考虑好事件结构体的内容，所以最终顺序是<code>public.go</code>-&gt;<code>text.go</code>-&gt;<code>sqlite.go</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// public.go</span></span><br><span class=\"line\"><span class=\"comment\">// 包括id，事件内容，开始结束日期，当前状态</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Event <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tID           <span class=\"keyword\">int</span></span><br><span class=\"line\">\tEventContent <span class=\"keyword\">string</span></span><br><span class=\"line\">\tBeginDate    <span class=\"keyword\">int64</span></span><br><span class=\"line\">\tEndDate      <span class=\"keyword\">int64</span></span><br><span class=\"line\">\tIsEnd        <span class=\"keyword\">uint8</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// text.go</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">    <span class=\"comment\">// 创建表，其中id自增，event为事件名，开始日期结束日期用时间戳存储。</span></span><br><span class=\"line\">    <span class=\"comment\">// 状态标记方面，一个事件应该有未开始，正在进行，结束三个状态，故isEnd可取0,1,2，对应三种状态</span></span><br><span class=\"line\">\tCreateTable = <span class=\"string\">`create table if not exists eventList(</span></span><br><span class=\"line\"><span class=\"string\">\t\tid integer primary key autoincrement,</span></span><br><span class=\"line\"><span class=\"string\">\t\tevent varchar(100) not null,</span></span><br><span class=\"line\"><span class=\"string\">\t\tbeginDate unsigned bigint not null,</span></span><br><span class=\"line\"><span class=\"string\">\t\tendDate unsigned bigint not null,</span></span><br><span class=\"line\"><span class=\"string\">\t\tisEnd smallint default 1 not null</span></span><br><span class=\"line\"><span class=\"string\">\t);`</span></span><br><span class=\"line\">    <span class=\"comment\">// 插入一行</span></span><br><span class=\"line\">\tInsertRow      = <span class=\"string\">`insert into eventList (event,beginDate,endDate) values (?,?,?);`</span></span><br><span class=\"line\">    <span class=\"comment\">// 当前时间大于结束时间则标记超时</span></span><br><span class=\"line\">\tMarkOutdate    = <span class=\"string\">`update eventList set isEnd=2 where ?&gt;endDate;`</span></span><br><span class=\"line\">    <span class=\"comment\">// 当前时间小于开始时间则标记未开始</span></span><br><span class=\"line\">\tMarkNotStart   = <span class=\"string\">`update eventList set isEnd=0 where ?&lt;beginDate;`</span></span><br><span class=\"line\">    <span class=\"comment\">// 介于开始结束之间标记正在进行</span></span><br><span class=\"line\">\tMarkInProgress = <span class=\"string\">`update eventList set isEnd=1 where ? between beginDate and endDate;`</span></span><br><span class=\"line\">    <span class=\"comment\">// 得到所有的事件，按事件状态，结束日期排序</span></span><br><span class=\"line\">\tQueryRow       = <span class=\"string\">`select * from eventList order by isEnd desc,endDate`</span></span><br><span class=\"line\">    <span class=\"comment\">// 删除超时事件</span></span><br><span class=\"line\">\tDeleteOutDate  = <span class=\"string\">`delete from eventList where isEnd=2`</span></span><br><span class=\"line\">    <span class=\"comment\">// 对于完成了的事件，通过id删除</span></span><br><span class=\"line\">\tDeleteID       = <span class=\"string\">`delete from eventList where id=?`</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// sqlite.go</span></span><br><span class=\"line\"><span class=\"comment\">// 打开数据库</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">openSqliteDB</span><span class=\"params\">()</span> *<span class=\"title\">sql</span>.<span class=\"title\">DB</span></span> &#123;</span><br><span class=\"line\">\tdb, err := sql.Open(<span class=\"string\">\"sqlite3\"</span>, path.GetDataPath())</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Printf(text.OpenDBError, err)</span><br><span class=\"line\">\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdb.Exec(text.CreateTable)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> db</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 剩余函数逻辑类似，取其中之一举例：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">InsertSqliteDB</span><span class=\"params\">(eventContent <span class=\"keyword\">string</span>, beginDate, endDate time.Time)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 打开数据库</span></span><br><span class=\"line\">\tdb := openSqliteDB()</span><br><span class=\"line\">    <span class=\"comment\">// 结束时关闭</span></span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> db.Close()</span><br><span class=\"line\">    <span class=\"comment\">// 执行语句</span></span><br><span class=\"line\">\t_, err := db.Exec(text.InsertRow, eventContent, beginDate.Unix(), endDate.Unix())</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接下来考虑实现<code>output.go</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// output.go</span></span><br><span class=\"line\"><span class=\"comment\">// 支持的所有颜色（采用map[string]interface&#123;&#125;存储）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> funcs = <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"red\"</span>:       color.New(color.FgRed),</span><br><span class=\"line\">\t<span class=\"string\">\"blue\"</span>:      color.New(color.FgBlue),</span><br><span class=\"line\">\t<span class=\"string\">\"cyan\"</span>:      color.New(color.FgCyan),</span><br><span class=\"line\">\t<span class=\"string\">\"green\"</span>:     color.New(color.FgGreen),</span><br><span class=\"line\">\t<span class=\"string\">\"yellow\"</span>:    color.New(color.FgYellow),</span><br><span class=\"line\">\t<span class=\"string\">\"magenta\"</span>:   color.New(color.FgMagenta),</span><br><span class=\"line\">\t<span class=\"string\">\"white\"</span>:     color.New(color.FgWhite),</span><br><span class=\"line\">\t<span class=\"string\">\"black\"</span>:     color.New(color.FgBlack),</span><br><span class=\"line\">\t<span class=\"string\">\"hired\"</span>:     color.New(color.FgHiRed),</span><br><span class=\"line\">\t<span class=\"string\">\"hiblue\"</span>:    color.New(color.FgHiBlue),</span><br><span class=\"line\">\t<span class=\"string\">\"hicyan\"</span>:    color.New(color.FgHiCyan),</span><br><span class=\"line\">\t<span class=\"string\">\"higreen\"</span>:   color.New(color.FgHiGreen),</span><br><span class=\"line\">\t<span class=\"string\">\"hiyellow\"</span>:  color.New(color.FgHiYellow),</span><br><span class=\"line\">\t<span class=\"string\">\"himagenta\"</span>: color.New(color.FgHiMagenta),</span><br><span class=\"line\">\t<span class=\"string\">\"hiwhite\"</span>:   color.New(color.FgHiWhite),</span><br><span class=\"line\">\t<span class=\"string\">\"hiblack\"</span>:   color.New(color.FgHiBlack),</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 使用reflect包进行动态调用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">call</span><span class=\"params\">(m <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;, color <span class=\"keyword\">string</span>, params ...<span class=\"keyword\">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class=\"line\">\tfunction := reflect.ValueOf(m[color]).MethodByName(<span class=\"string\">\"Printf\"</span>)</span><br><span class=\"line\">\tin := <span class=\"built_in\">make</span>([]reflect.Value, <span class=\"built_in\">len</span>(params))</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> index, param := <span class=\"keyword\">range</span> params &#123;</span><br><span class=\"line\">\t\tin[index] = reflect.ValueOf(param)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfunction.Call(in)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将call进行一层封装，对外公开Call函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Call</span><span class=\"params\">(color <span class=\"keyword\">string</span>, params ...<span class=\"keyword\">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class=\"line\">\tcall(funcs, color, params...)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>万事俱备，最后只需要在主函数中完成调用逻辑即可（当然还需要补全一些错误输出、给用户的提示等等，不过那些已经很简单了）：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// main.go</span></span><br><span class=\"line\"><span class=\"comment\">// 接受的命令行参数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tbegin  <span class=\"keyword\">string</span></span><br><span class=\"line\">\tend    <span class=\"keyword\">string</span></span><br><span class=\"line\">\tname   <span class=\"keyword\">string</span></span><br><span class=\"line\">\tremove <span class=\"keyword\">bool</span></span><br><span class=\"line\">\tdone   <span class=\"keyword\">int</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tapp := &amp;cli.App&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 省略掉参数绑定等流程</span></span><br><span class=\"line\">\t\tAction: <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *cli.Context)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 读取配置文件</span></span><br><span class=\"line\">\t\t\tconf := *config.ReadConfig()</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> remove &#123;</span><br><span class=\"line\">                <span class=\"comment\">// -r：首先标记过期事件，接着删除之</span></span><br><span class=\"line\">\t\t\t\tsqlite.UpdateSqliteDB(text.MarkOutdate)</span><br><span class=\"line\">\t\t\t\terr := sqlite.DeleteOutDate()</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(text.DeleteOutdateError, err)</span><br><span class=\"line\">\t\t\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tfmt.Println(text.DeleteOutdateSuccess)</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> done != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// -d int： 直接删除该id</span></span><br><span class=\"line\">\t\t\t\terr := sqlite.DeleteID(done)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(text.DeleteIDError, err)</span><br><span class=\"line\">\t\t\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tfmt.Println(text.DeleteIDSuccess)</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(end) == <span class=\"number\">0</span> &#123; </span><br><span class=\"line\">                  <span class=\"comment\">// 如果没有-d，打印事件列表</span></span><br><span class=\"line\">                  <span class=\"comment\">// 这里只标记进行中和超时，是因为在插入事件时已经标记了是否未开始，时间顺序流动，不可能从开始变为未开始</span></span><br><span class=\"line\">\t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkInProgress)</span><br><span class=\"line\">\t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkOutdate)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// ...省略输出部分</span></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">                <span class=\"comment\">// 如果存在-e，则解析结束时间，开始事件如果有就解析，没有默认为当前时间</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> beginTime, endTime time.Time</span><br><span class=\"line\">\t\t\t\t\tendTime = handleString(end)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(begin) == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tbeginTime = time.Now()</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tbeginTime = handleString(begin)</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> beginTime.Unix() &gt;= endTime.Unix() &#123;</span><br><span class=\"line\">\t\t\t\t\t\tfmt.Println(text.TimeError)</span><br><span class=\"line\">\t\t\t\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">                <span class=\"comment\">// 将输入事件插入</span></span><br><span class=\"line\">\t\t\t\t\terr := sqlite.InsertSqliteDB(name, beginTime, endTime)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tfmt.Printf(text.InsertDBError, err)</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">                <span class=\"comment\">// 标记未开始</span></span><br><span class=\"line\">\t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkNotStart)</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(text.InsertSuccess)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t\t&#125;&#125;</span><br><span class=\"line\">\terr := app.Run(os.Args)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatal(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">handleString</span><span class=\"params\">(tm <span class=\"keyword\">string</span>)</span> <span class=\"title\">time</span>.<span class=\"title\">Time</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 时间字符串转time.Time，只接受month.day.hour.minute格式</span></span><br><span class=\"line\">\ttmp := strings.Split(tm, <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 长度不为4则退出</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(tmp) != <span class=\"number\">4</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(text.LengthError)</span><br><span class=\"line\">\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 补全0，例如将5.20.12.0补全为05.20.12.00，防止解析错误</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> index := <span class=\"keyword\">range</span> tmp &#123; </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(tmp[index]) == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t\t\ttmp[index] = <span class=\"string\">\"0\"</span> + tmp[index]</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tstdString := fmt.Sprintf(text.MyTime, strconv.Itoa(time.Now().Year()), tmp[<span class=\"number\">0</span>], tmp[<span class=\"number\">1</span>], tmp[<span class=\"number\">2</span>], tmp[<span class=\"number\">3</span>])</span><br><span class=\"line\">\t\tresult, err := time.ParseInLocation(text.StandardTime, stdString, time.Now().Local().Location())</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\tfmt.Printf(text.ParamError, err)</span><br><span class=\"line\">\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> result</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//useless line, just to prevent warning</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> time.Now()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">formatTime</span><span class=\"params\">(begin, end <span class=\"keyword\">int64</span>, IsEnd <span class=\"keyword\">uint8</span>)</span> <span class=\"title\">string</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将时间转换成%s time remaining/%s time beginning格式，其中的%s调用下面的formatTimeString函数获取</span></span><br><span class=\"line\">\tnow := time.Now()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> IsEnd == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tbeginTime := time.Unix(begin, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\tdur := beginTime.Sub(now)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> fmt.Sprintf(text.TimeBeginning, formatTimeString(dur.Minutes()))</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> IsEnd == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\tendTime := time.Unix(end, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\tdur := endTime.Sub(now)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> fmt.Sprintf(text.TimeRemaining, formatTimeString(dur.Minutes()))</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> fmt.Sprintf(text.TimeRemaining, <span class=\"string\">\"no time\"</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">formatTimeString</span><span class=\"params\">(min <span class=\"keyword\">float64</span>)</span> <span class=\"title\">string</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取天/小时/分钟</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> tmp <span class=\"keyword\">string</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> min &gt; <span class=\"number\">1440</span> &#123;</span><br><span class=\"line\">\t\ttmp = strconv.Itoa(<span class=\"keyword\">int</span>(min/<span class=\"number\">1440</span>)) + <span class=\"string\">\" days\"</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> min &gt; <span class=\"number\">60</span> &#123;</span><br><span class=\"line\">\t\ttmp = strconv.Itoa(<span class=\"keyword\">int</span>((min / <span class=\"number\">60</span>))) + <span class=\"string\">\" hours\"</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\ttmp = strconv.Itoa(<span class=\"keyword\">int</span>(min)) + <span class=\"string\">\" minutes\"</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>这样下来，预想的功能就实现的差不多了，任务成功完成。</p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>okk，这样就结束啦，算是写了个小总结吧。</p>\n<p>代码基本全程都有注释（不过为了符合<code>golang</code>的规范，使用的是塑料英语XD），觉得自己代码写的还是蛮易读的，欢迎大家阅读给出建议哦！</p>\n","site":{"data":{}},"length":7837,"excerpt":"<p>前几天整了一个命令行待办事项管理器：<a href=\"https://github.com/amtoaer/medum\" target=\"_blank\" rel=\"noopener\">medum</a>。注意到自己已经有一阵子没发过文章了，正好今晚有空，把它拿出来随便聊聊，顺便水一篇233（（</p>\n<h2 id=\"名称由来\"><a href=\"#名称由来\" class=\"headerlink\" title=\"名称由来\"></a>名称由来</h2><p>这个项目叫做<code>medum</code>，为什么呢？</p>\n<p>因为它的开发目的是防止我忘记<code>ddl</code>，所以从一开始，它就是作为一个备忘录（memorandum）而被设计的。我从<em>memorandum</em>这个单词中取了前两个和后三个字母进行拼接，于是<code>medum</code>诞生了。（好随意啊XD</p>","more":"<h2 id=\"代码结构\"><a href=\"#代码结构\" class=\"headerlink\" title=\"代码结构\"></a>代码结构</h2><p>具体的开发初衷已经写在了<code>README.md</code>里，所以接下来就说说代码结构吧。</p>\n<p>下面是所有的代码文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── config</span><br><span class=\"line\">│   └── config.go</span><br><span class=\"line\">├── main.go</span><br><span class=\"line\">├── output</span><br><span class=\"line\">│   └── output.go</span><br><span class=\"line\">├── path</span><br><span class=\"line\">│   └── path.go</span><br><span class=\"line\">├── public</span><br><span class=\"line\">│   └── public.go</span><br><span class=\"line\">├── sqlite</span><br><span class=\"line\">│   └── sqlite.go</span><br><span class=\"line\">└── text</span><br><span class=\"line\">    └── text.go</span><br></pre></td></tr></table></figure>\n\n<p>每个模块的功能如下：</p>\n<ul>\n<li><code>path.go</code>：负责获取配置文件夹路径，配置文件路径和sqlite数据库路径。</li>\n<li><code>config.go</code>：负责读取配置文件，并在配置文件不存在的情况下写入默认配置。</li>\n<li><code>public.go</code>：存放公共的结构体，包括在多个文件进行引用的<code>Configuration</code>（配置文件）、<code>Event</code>（事项）。</li>\n<li><code>sqlite.go</code>：sqlite数据库的打开，插入，更新，查询，删除功能的实现。</li>\n<li><code>text.go</code>：存放该程序近乎所有的文本信息（包括报错、提醒以及sql语句）。</li>\n<li><code>output.go</code>：将配置文件的颜色映射为函数，对彩色输出函数的反射调用进行一层封装。</li>\n</ul>\n<h2 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><ol>\n<li><p>首先从功能出发，既然要读取文件，那么获取路径是必须的，于是首先考虑实现<code>path.go</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// path.go</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">GetPath</span><span class=\"params\">()</span> <span class=\"title\">string</span></span> &#123; <span class=\"comment\">//获取文件夹路径，路径为~/.medum</span></span><br><span class=\"line\">\tpath, err := homedir.Dir()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Printf(text.HomedirError, err)</span><br><span class=\"line\">\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> filepath.Join(path, <span class=\"string\">\".medum\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 后面获取配置文件和数据的路径很简单，在文件夹路径后加文件名就可以</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>有了路径，接下来就是要到路径中读取文件啦，但文件读入到哪儿呢？为了让内容有处可去，应该先实现一个配置文件的结构体。考虑到配置文件自定义的是颜色，必定需要被输出模块读取，所以将其分离放在<code>public.go</code>里，接着再写<code>config.go</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// public.go</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Configuration <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tNumberColor <span class=\"keyword\">string</span></span><br><span class=\"line\">\tEventColor  <span class=\"keyword\">string</span></span><br><span class=\"line\">\tTimeColor   <span class=\"keyword\">string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// config.go</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ReadConfig</span><span class=\"params\">()</span> *<span class=\"title\">public</span>.<span class=\"title\">Configuration</span></span> &#123;</span><br><span class=\"line\">\tconfigPath := path.GetConfigPath()</span><br><span class=\"line\">\t<span class=\"comment\">// 检测配置文件是否存在，不存在则写入默认配置</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> _, err := os.Stat(configPath); err != <span class=\"literal\">nil</span> &amp;&amp; !os.IsExist(err) &#123;</span><br><span class=\"line\">\t\twriteInitConfig(configPath)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">\tdecoder := json.NewDecoder(file)</span><br><span class=\"line\">\tconf := <span class=\"built_in\">new</span>(public.Configuration)</span><br><span class=\"line\">    <span class=\"comment\">// 将文件读取到conf中</span></span><br><span class=\"line\">\terr = decoder.Decode(conf)</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> conf</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">writeInitConfig</span><span class=\"params\">(configPath <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 首先看文件夹是否存在，如果不存在则新建</span></span><br><span class=\"line\">\ttmp := path.GetPath()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> _, err := os.Stat(tmp); !os.IsExist(err) &#123;</span><br><span class=\"line\">\t\tos.Mkdir(tmp, os.FileMode(<span class=\"number\">0777</span>))</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 接着新建配置文件</span></span><br><span class=\"line\">\tfile, err := os.Create(configPath)</span><br><span class=\"line\">\t<span class=\"comment\">// 创建默认配置</span></span><br><span class=\"line\">\tconf := public.Configuration&#123;</span><br><span class=\"line\">\t\tNumberColor: <span class=\"string\">\"red\"</span>,</span><br><span class=\"line\">\t\tEventColor:  <span class=\"string\">\"blue\"</span>,</span><br><span class=\"line\">\t\tTimeColor:   <span class=\"string\">\"yellow\"</span>,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"comment\">// 写入</span></span><br><span class=\"line\">\tencoder := json.NewEncoder(file)</span><br><span class=\"line\">\tencoder.Encode(conf)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>实现了配置文件的读取，紧接着就是数据的操作了，考虑实现<code>sqlite.go</code>，但为了方便修改，尽量将所有的文本内容与逻辑分离，需要先写<code>text.go</code>，但在这之前，还要先考虑好事件结构体的内容，所以最终顺序是<code>public.go</code>-&gt;<code>text.go</code>-&gt;<code>sqlite.go</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// public.go</span></span><br><span class=\"line\"><span class=\"comment\">// 包括id，事件内容，开始结束日期，当前状态</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Event <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tID           <span class=\"keyword\">int</span></span><br><span class=\"line\">\tEventContent <span class=\"keyword\">string</span></span><br><span class=\"line\">\tBeginDate    <span class=\"keyword\">int64</span></span><br><span class=\"line\">\tEndDate      <span class=\"keyword\">int64</span></span><br><span class=\"line\">\tIsEnd        <span class=\"keyword\">uint8</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// text.go</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> (</span><br><span class=\"line\">    <span class=\"comment\">// 创建表，其中id自增，event为事件名，开始日期结束日期用时间戳存储。</span></span><br><span class=\"line\">    <span class=\"comment\">// 状态标记方面，一个事件应该有未开始，正在进行，结束三个状态，故isEnd可取0,1,2，对应三种状态</span></span><br><span class=\"line\">\tCreateTable = <span class=\"string\">`create table if not exists eventList(</span></span><br><span class=\"line\"><span class=\"string\">\t\tid integer primary key autoincrement,</span></span><br><span class=\"line\"><span class=\"string\">\t\tevent varchar(100) not null,</span></span><br><span class=\"line\"><span class=\"string\">\t\tbeginDate unsigned bigint not null,</span></span><br><span class=\"line\"><span class=\"string\">\t\tendDate unsigned bigint not null,</span></span><br><span class=\"line\"><span class=\"string\">\t\tisEnd smallint default 1 not null</span></span><br><span class=\"line\"><span class=\"string\">\t);`</span></span><br><span class=\"line\">    <span class=\"comment\">// 插入一行</span></span><br><span class=\"line\">\tInsertRow      = <span class=\"string\">`insert into eventList (event,beginDate,endDate) values (?,?,?);`</span></span><br><span class=\"line\">    <span class=\"comment\">// 当前时间大于结束时间则标记超时</span></span><br><span class=\"line\">\tMarkOutdate    = <span class=\"string\">`update eventList set isEnd=2 where ?&gt;endDate;`</span></span><br><span class=\"line\">    <span class=\"comment\">// 当前时间小于开始时间则标记未开始</span></span><br><span class=\"line\">\tMarkNotStart   = <span class=\"string\">`update eventList set isEnd=0 where ?&lt;beginDate;`</span></span><br><span class=\"line\">    <span class=\"comment\">// 介于开始结束之间标记正在进行</span></span><br><span class=\"line\">\tMarkInProgress = <span class=\"string\">`update eventList set isEnd=1 where ? between beginDate and endDate;`</span></span><br><span class=\"line\">    <span class=\"comment\">// 得到所有的事件，按事件状态，结束日期排序</span></span><br><span class=\"line\">\tQueryRow       = <span class=\"string\">`select * from eventList order by isEnd desc,endDate`</span></span><br><span class=\"line\">    <span class=\"comment\">// 删除超时事件</span></span><br><span class=\"line\">\tDeleteOutDate  = <span class=\"string\">`delete from eventList where isEnd=2`</span></span><br><span class=\"line\">    <span class=\"comment\">// 对于完成了的事件，通过id删除</span></span><br><span class=\"line\">\tDeleteID       = <span class=\"string\">`delete from eventList where id=?`</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// sqlite.go</span></span><br><span class=\"line\"><span class=\"comment\">// 打开数据库</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">openSqliteDB</span><span class=\"params\">()</span> *<span class=\"title\">sql</span>.<span class=\"title\">DB</span></span> &#123;</span><br><span class=\"line\">\tdb, err := sql.Open(<span class=\"string\">\"sqlite3\"</span>, path.GetDataPath())</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tfmt.Printf(text.OpenDBError, err)</span><br><span class=\"line\">\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdb.Exec(text.CreateTable)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> db</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 剩余函数逻辑类似，取其中之一举例：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">InsertSqliteDB</span><span class=\"params\">(eventContent <span class=\"keyword\">string</span>, beginDate, endDate time.Time)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 打开数据库</span></span><br><span class=\"line\">\tdb := openSqliteDB()</span><br><span class=\"line\">    <span class=\"comment\">// 结束时关闭</span></span><br><span class=\"line\">\t<span class=\"keyword\">defer</span> db.Close()</span><br><span class=\"line\">    <span class=\"comment\">// 执行语句</span></span><br><span class=\"line\">\t_, err := db.Exec(text.InsertRow, eventContent, beginDate.Unix(), endDate.Unix())</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接下来考虑实现<code>output.go</code>：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// output.go</span></span><br><span class=\"line\"><span class=\"comment\">// 支持的所有颜色（采用map[string]interface&#123;&#125;存储）</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> funcs = <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;&#123;</span><br><span class=\"line\">\t<span class=\"string\">\"red\"</span>:       color.New(color.FgRed),</span><br><span class=\"line\">\t<span class=\"string\">\"blue\"</span>:      color.New(color.FgBlue),</span><br><span class=\"line\">\t<span class=\"string\">\"cyan\"</span>:      color.New(color.FgCyan),</span><br><span class=\"line\">\t<span class=\"string\">\"green\"</span>:     color.New(color.FgGreen),</span><br><span class=\"line\">\t<span class=\"string\">\"yellow\"</span>:    color.New(color.FgYellow),</span><br><span class=\"line\">\t<span class=\"string\">\"magenta\"</span>:   color.New(color.FgMagenta),</span><br><span class=\"line\">\t<span class=\"string\">\"white\"</span>:     color.New(color.FgWhite),</span><br><span class=\"line\">\t<span class=\"string\">\"black\"</span>:     color.New(color.FgBlack),</span><br><span class=\"line\">\t<span class=\"string\">\"hired\"</span>:     color.New(color.FgHiRed),</span><br><span class=\"line\">\t<span class=\"string\">\"hiblue\"</span>:    color.New(color.FgHiBlue),</span><br><span class=\"line\">\t<span class=\"string\">\"hicyan\"</span>:    color.New(color.FgHiCyan),</span><br><span class=\"line\">\t<span class=\"string\">\"higreen\"</span>:   color.New(color.FgHiGreen),</span><br><span class=\"line\">\t<span class=\"string\">\"hiyellow\"</span>:  color.New(color.FgHiYellow),</span><br><span class=\"line\">\t<span class=\"string\">\"himagenta\"</span>: color.New(color.FgHiMagenta),</span><br><span class=\"line\">\t<span class=\"string\">\"hiwhite\"</span>:   color.New(color.FgHiWhite),</span><br><span class=\"line\">\t<span class=\"string\">\"hiblack\"</span>:   color.New(color.FgHiBlack),</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 使用reflect包进行动态调用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">call</span><span class=\"params\">(m <span class=\"keyword\">map</span>[<span class=\"keyword\">string</span>]<span class=\"keyword\">interface</span>&#123;&#125;, color <span class=\"keyword\">string</span>, params ...<span class=\"keyword\">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class=\"line\">\tfunction := reflect.ValueOf(m[color]).MethodByName(<span class=\"string\">\"Printf\"</span>)</span><br><span class=\"line\">\tin := <span class=\"built_in\">make</span>([]reflect.Value, <span class=\"built_in\">len</span>(params))</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> index, param := <span class=\"keyword\">range</span> params &#123;</span><br><span class=\"line\">\t\tin[index] = reflect.ValueOf(param)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfunction.Call(in)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 将call进行一层封装，对外公开Call函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Call</span><span class=\"params\">(color <span class=\"keyword\">string</span>, params ...<span class=\"keyword\">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class=\"line\">\tcall(funcs, color, params...)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>万事俱备，最后只需要在主函数中完成调用逻辑即可（当然还需要补全一些错误输出、给用户的提示等等，不过那些已经很简单了）：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// main.go</span></span><br><span class=\"line\"><span class=\"comment\">// 接受的命令行参数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> (</span><br><span class=\"line\">\tbegin  <span class=\"keyword\">string</span></span><br><span class=\"line\">\tend    <span class=\"keyword\">string</span></span><br><span class=\"line\">\tname   <span class=\"keyword\">string</span></span><br><span class=\"line\">\tremove <span class=\"keyword\">bool</span></span><br><span class=\"line\">\tdone   <span class=\"keyword\">int</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tapp := &amp;cli.App&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 省略掉参数绑定等流程</span></span><br><span class=\"line\">\t\tAction: <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *cli.Context)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 读取配置文件</span></span><br><span class=\"line\">\t\t\tconf := *config.ReadConfig()</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> remove &#123;</span><br><span class=\"line\">                <span class=\"comment\">// -r：首先标记过期事件，接着删除之</span></span><br><span class=\"line\">\t\t\t\tsqlite.UpdateSqliteDB(text.MarkOutdate)</span><br><span class=\"line\">\t\t\t\terr := sqlite.DeleteOutDate()</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(text.DeleteOutdateError, err)</span><br><span class=\"line\">\t\t\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tfmt.Println(text.DeleteOutdateSuccess)</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> done != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// -d int： 直接删除该id</span></span><br><span class=\"line\">\t\t\t\terr := sqlite.DeleteID(done)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t\tfmt.Printf(text.DeleteIDError, err)</span><br><span class=\"line\">\t\t\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tfmt.Println(text.DeleteIDSuccess)</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(end) == <span class=\"number\">0</span> &#123; </span><br><span class=\"line\">                  <span class=\"comment\">// 如果没有-d，打印事件列表</span></span><br><span class=\"line\">                  <span class=\"comment\">// 这里只标记进行中和超时，是因为在插入事件时已经标记了是否未开始，时间顺序流动，不可能从开始变为未开始</span></span><br><span class=\"line\">\t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkInProgress)</span><br><span class=\"line\">\t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkOutdate)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"comment\">// ...省略输出部分</span></span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">                <span class=\"comment\">// 如果存在-e，则解析结束时间，开始事件如果有就解析，没有默认为当前时间</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> beginTime, endTime time.Time</span><br><span class=\"line\">\t\t\t\t\tendTime = handleString(end)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(begin) == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tbeginTime = time.Now()</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tbeginTime = handleString(begin)</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> beginTime.Unix() &gt;= endTime.Unix() &#123;</span><br><span class=\"line\">\t\t\t\t\t\tfmt.Println(text.TimeError)</span><br><span class=\"line\">\t\t\t\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">                <span class=\"comment\">// 将输入事件插入</span></span><br><span class=\"line\">\t\t\t\t\terr := sqlite.InsertSqliteDB(name, beginTime, endTime)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tfmt.Printf(text.InsertDBError, err)</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">                <span class=\"comment\">// 标记未开始</span></span><br><span class=\"line\">\t\t\t\t\tsqlite.UpdateSqliteDB(text.MarkNotStart)</span><br><span class=\"line\">\t\t\t\t\tfmt.Println(text.InsertSuccess)</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t\t&#125;&#125;</span><br><span class=\"line\">\terr := app.Run(os.Args)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tlog.Fatal(err)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">handleString</span><span class=\"params\">(tm <span class=\"keyword\">string</span>)</span> <span class=\"title\">time</span>.<span class=\"title\">Time</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 时间字符串转time.Time，只接受month.day.hour.minute格式</span></span><br><span class=\"line\">\ttmp := strings.Split(tm, <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 长度不为4则退出</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(tmp) != <span class=\"number\">4</span> &#123;</span><br><span class=\"line\">\t\tfmt.Println(text.LengthError)</span><br><span class=\"line\">\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 补全0，例如将5.20.12.0补全为05.20.12.00，防止解析错误</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> index := <span class=\"keyword\">range</span> tmp &#123; </span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(tmp[index]) == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\t\t\ttmp[index] = <span class=\"string\">\"0\"</span> + tmp[index]</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tstdString := fmt.Sprintf(text.MyTime, strconv.Itoa(time.Now().Year()), tmp[<span class=\"number\">0</span>], tmp[<span class=\"number\">1</span>], tmp[<span class=\"number\">2</span>], tmp[<span class=\"number\">3</span>])</span><br><span class=\"line\">\t\tresult, err := time.ParseInLocation(text.StandardTime, stdString, time.Now().Local().Location())</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\tfmt.Printf(text.ParamError, err)</span><br><span class=\"line\">\t\t\tos.Exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> result</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//useless line, just to prevent warning</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> time.Now()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">formatTime</span><span class=\"params\">(begin, end <span class=\"keyword\">int64</span>, IsEnd <span class=\"keyword\">uint8</span>)</span> <span class=\"title\">string</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将时间转换成%s time remaining/%s time beginning格式，其中的%s调用下面的formatTimeString函数获取</span></span><br><span class=\"line\">\tnow := time.Now()</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> IsEnd == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">\t\tbeginTime := time.Unix(begin, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\tdur := beginTime.Sub(now)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> fmt.Sprintf(text.TimeBeginning, formatTimeString(dur.Minutes()))</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> IsEnd == <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">\t\tendTime := time.Unix(end, <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\tdur := endTime.Sub(now)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> fmt.Sprintf(text.TimeRemaining, formatTimeString(dur.Minutes()))</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> fmt.Sprintf(text.TimeRemaining, <span class=\"string\">\"no time\"</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">formatTimeString</span><span class=\"params\">(min <span class=\"keyword\">float64</span>)</span> <span class=\"title\">string</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取天/小时/分钟</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> tmp <span class=\"keyword\">string</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> min &gt; <span class=\"number\">1440</span> &#123;</span><br><span class=\"line\">\t\ttmp = strconv.Itoa(<span class=\"keyword\">int</span>(min/<span class=\"number\">1440</span>)) + <span class=\"string\">\" days\"</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> min &gt; <span class=\"number\">60</span> &#123;</span><br><span class=\"line\">\t\ttmp = strconv.Itoa(<span class=\"keyword\">int</span>((min / <span class=\"number\">60</span>))) + <span class=\"string\">\" hours\"</span></span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\ttmp = strconv.Itoa(<span class=\"keyword\">int</span>(min)) + <span class=\"string\">\" minutes\"</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tmp</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>这样下来，预想的功能就实现的差不多了，任务成功完成。</p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>okk，这样就结束啦，算是写了个小总结吧。</p>\n<p>代码基本全程都有注释（不过为了符合<code>golang</code>的规范，使用的是塑料英语XD），觉得自己代码写的还是蛮易读的，欢迎大家阅读给出建议哦！</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckawlroyu0000hpz6dd9f1gk3","category_id":"ckawlrozr0004hpz6chsl5jef","_id":"ckawlrp0m000hhpz6gfhtc4uj"},{"post_id":"ckawlrozi0002hpz61vwt6a2b","category_id":"ckawlrozr0004hpz6chsl5jef","_id":"ckawlrp0u000mhpz68i2ifu9q"},{"post_id":"ckawlrp0i000fhpz66io50qrt","category_id":"ckawlrozr0004hpz6chsl5jef","_id":"ckawlrp0z000rhpz69gkhbnia"},{"post_id":"ckawlrozx0006hpz6esy322wq","category_id":"ckawlrp0k000ghpz614l6arsh","_id":"ckawlrp11000shpz6a4nu4afo"},{"post_id":"ckawlrp020008hpz63sqkbjd8","category_id":"ckawlrp0v000ohpz6bkhe23m9","_id":"ckawlrp14000xhpz6aifnggjr"},{"post_id":"ckawlrp06000ahpz69qb6hsik","category_id":"ckawlrp11000thpz654tg19nf","_id":"ckawlrp190013hpz6e7bg6jvv"},{"post_id":"ckawlrp0f000ehpz6dn25cgq7","category_id":"ckawlrp0k000ghpz614l6arsh","_id":"ckawlrp1c0015hpz6d3759zv4"},{"post_id":"ckawlrp0p000jhpz60qyhfpuj","category_id":"ckawlrp180012hpz6e4d9ckc8","_id":"ckawlrp1g001ahpz63qo3bwfe"},{"post_id":"ckawlrp0s000lhpz65g4l6s3t","category_id":"ckawlrp0v000ohpz6bkhe23m9","_id":"ckawlrp1j001ehpz6eew2ac23"},{"post_id":"ckawlrp0x000qhpz69tjrhqwf","category_id":"ckawlrp11000thpz654tg19nf","_id":"ckawlrp1m001hhpz627tuf5xg"},{"post_id":"ckawlrp6h001vhpz695wu07x4","category_id":"ckawlrp0v000ohpz6bkhe23m9","_id":"ckawlrp6s0022hpz6dbl135ey"},{"post_id":"ckawlrp6r0021hpz6h28egtkh","category_id":"ckawlrp0k000ghpz614l6arsh","_id":"ckawlrp6x0027hpz66rne2njq"},{"post_id":"ckawlrp6j001whpz6bzy4gdtw","category_id":"ckawlrp6q001zhpz6b5pw6tnb","_id":"ckawlrp710029hpz6ajxo7401"},{"post_id":"ckawlrp6n001yhpz6d02sd0ff","category_id":"ckawlrp6q001zhpz6b5pw6tnb","_id":"ckawlrp73002chpz6d7i78db9"}],"PostTag":[{"post_id":"ckawlroyu0000hpz6dd9f1gk3","tag_id":"ckawlrozv0005hpz6dpc2htzd","_id":"ckawlrp0q000khpz69buv09dd"},{"post_id":"ckawlroyu0000hpz6dd9f1gk3","tag_id":"ckawlrp08000chpz606akagx3","_id":"ckawlrp0u000nhpz6cit3bhsz"},{"post_id":"ckawlrp0x000qhpz69tjrhqwf","tag_id":"ckawlrp08000chpz606akagx3","_id":"ckawlrp12000vhpz6bpp78lyy"},{"post_id":"ckawlrp0x000qhpz69tjrhqwf","tag_id":"ckawlrp0w000phpz6a9l1dcse","_id":"ckawlrp14000whpz63l2sdp73"},{"post_id":"ckawlrozi0002hpz61vwt6a2b","tag_id":"ckawlrp08000chpz606akagx3","_id":"ckawlrp15000yhpz62eu7dkmx"},{"post_id":"ckawlrozi0002hpz61vwt6a2b","tag_id":"ckawlrp0w000phpz6a9l1dcse","_id":"ckawlrp170011hpz62ktebsud"},{"post_id":"ckawlrozx0006hpz6esy322wq","tag_id":"ckawlrp12000uhpz648g0byn6","_id":"ckawlrp1f0018hpz683rqd7vv"},{"post_id":"ckawlrozx0006hpz6esy322wq","tag_id":"ckawlrp150010hpz69hhxegur","_id":"ckawlrp1g001bhpz696cn9qfb"},{"post_id":"ckawlrozx0006hpz6esy322wq","tag_id":"ckawlrp190014hpz6d9473f3l","_id":"ckawlrp1i001dhpz6bn1e4tss"},{"post_id":"ckawlrp020008hpz63sqkbjd8","tag_id":"ckawlrp08000chpz606akagx3","_id":"ckawlrp1l001ghpz6g3trebjz"},{"post_id":"ckawlrp020008hpz63sqkbjd8","tag_id":"ckawlrp1h001chpz697e9aey4","_id":"ckawlrp1m001ihpz63m8j9i71"},{"post_id":"ckawlrp06000ahpz69qb6hsik","tag_id":"ckawlrp1k001fhpz6gi5o36pj","_id":"ckawlrp1p001khpz6gb8e126r"},{"post_id":"ckawlrp0f000ehpz6dn25cgq7","tag_id":"ckawlrp1k001fhpz6gi5o36pj","_id":"ckawlrp1t001nhpz61914gx5z"},{"post_id":"ckawlrp0f000ehpz6dn25cgq7","tag_id":"ckawlrp1h001chpz697e9aey4","_id":"ckawlrp1w001ohpz6d9fo0gjs"},{"post_id":"ckawlrp0i000fhpz66io50qrt","tag_id":"ckawlrp0w000phpz6a9l1dcse","_id":"ckawlrp1y001qhpz62pqcaqn0"},{"post_id":"ckawlrp0i000fhpz66io50qrt","tag_id":"ckawlrp08000chpz606akagx3","_id":"ckawlrp1z001rhpz680zk3e2v"},{"post_id":"ckawlrp0p000jhpz60qyhfpuj","tag_id":"ckawlrp1w001phpz6br9p629j","_id":"ckawlrp21001thpz64vqyc2f0"},{"post_id":"ckawlrp0s000lhpz65g4l6s3t","tag_id":"ckawlrp1z001shpz6721khpqq","_id":"ckawlrp22001uhpz65puehqvc"},{"post_id":"ckawlrp6j001whpz6bzy4gdtw","tag_id":"ckawlrp12000uhpz648g0byn6","_id":"ckawlrp6q0020hpz63zffbpc9"},{"post_id":"ckawlrp6r0021hpz6h28egtkh","tag_id":"ckawlrp150010hpz69hhxegur","_id":"ckawlrp6v0024hpz6fbbp8ebg"},{"post_id":"ckawlrp6h001vhpz695wu07x4","tag_id":"ckawlrp08000chpz606akagx3","_id":"ckawlrp6x0026hpz66d4xcb46"},{"post_id":"ckawlrp6h001vhpz695wu07x4","tag_id":"ckawlrp6l001xhpz67vho6s9t","_id":"ckawlrp710028hpz616wmddzb"},{"post_id":"ckawlrp6n001yhpz6d02sd0ff","tag_id":"ckawlrp6u0023hpz6gqis9jhw","_id":"ckawlrp72002ahpz6d71e1k3l"},{"post_id":"ckawlrp6n001yhpz6d02sd0ff","tag_id":"ckawlrp12000uhpz648g0byn6","_id":"ckawlrp73002bhpz6704s8nxj"}],"Tag":[{"name":"windows","_id":"ckawlrozv0005hpz6dpc2htzd"},{"name":"linux","_id":"ckawlrp08000chpz606akagx3"},{"name":"manjaro","_id":"ckawlrp0w000phpz6a9l1dcse"},{"name":"website","_id":"ckawlrp12000uhpz648g0byn6"},{"name":"go","_id":"ckawlrp150010hpz69hhxegur"},{"name":"Vue.js","_id":"ckawlrp190014hpz6d9473f3l"},{"name":"image","_id":"ckawlrp1h001chpz697e9aey4"},{"name":"python","_id":"ckawlrp1k001fhpz6gi5o36pj"},{"name":"study","_id":"ckawlrp1w001phpz6br9p629j"},{"name":"rss","_id":"ckawlrp1z001shpz6721khpqq"},{"name":"onedrive","_id":"ckawlrp6l001xhpz67vho6s9t"},{"name":"php","_id":"ckawlrp6u0023hpz6gqis9jhw"}]}}