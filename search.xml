<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>一个简单的命令行图床上传工具</title>
    <url>/uploadImage/</url>
    <content><![CDATA[<p>昨天使用<a href="https://pic.suo.dog" target="_blank" rel="noopener">缩狗图床</a><code>api</code>写了个<a href="https://github.com/jeasonlau/python-scripts/blob/master/imagehost.py" target="_blank" rel="noopener">命令行图床上传工具</a>，支持指定使用的图床，支持单文件/多文件/多目录（非递归）上传。虽然代码很简单，但还是准备记录一下（因为想水篇文章XD</p>
<a id="more"></a>

<h2 id="获取api"><a href="#获取api" class="headerlink" title="获取api"></a>获取api</h2><p>既然要使用<code>api</code>，当然要获取<code>api</code>啦，首先看一下网站源码（此处只摘录了有用部分）：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--图床的选择--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bodyer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"keke"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"1688"</span>&gt;</span>阿里图床<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"keke"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"tieba"</span>&gt;</span>百度图床<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"keke"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"360"</span>&gt;</span>360图床<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"keke"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"taobao"</span>&gt;</span>淘宝图床<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"keke"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"smms"</span>&gt;</span>SM.MS图床<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"keke"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"sohu"</span>&gt;</span>搜狐图床<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"keke"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"jd"</span>&gt;</span>京东图床<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--图片的上传--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> imagesUpload = <span class="function"><span class="keyword">function</span> <span class="params">(files)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        a = $(<span class="string">'input:radio:checked'</span>).val();</span></span><br><span class="line"><span class="javascript">        $(files).each(<span class="function"><span class="keyword">function</span> (<span class="params">key, value</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                uurrll = <span class="string">'https://pic.suo.dog/api/tc.php?type='</span> + a + <span class="string">'&amp;echo=imgurl'</span></span></span><br><span class="line"><span class="actionscript">                image_form = <span class="keyword">new</span> FormData();</span></span><br><span class="line"><span class="actionscript">                image_form.append(<span class="string">"file"</span>, value);</span></span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line">                    url: uurrll,</span><br><span class="line"><span class="actionscript">                    type: <span class="string">'POST'</span>,</span></span><br><span class="line">                    data: image_form,</span><br><span class="line"><span class="actionscript">                    contentType: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">                    cache: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">                    processData: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">async</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">                    success: <span class="function"><span class="keyword">function</span> <span class="params">(data)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">if</span> (<span class="keyword">typeof</span> (data) == <span class="string">'string'</span>) &#123;</span></span><br><span class="line">                            imgurl = data</span><br><span class="line"><span class="actionscript">                        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line">                            imgurl = data.imgurl</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="actionscript">                    error: <span class="function"><span class="keyword">function</span> <span class="params">(XMLResponse)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                        alert(<span class="string">"error:"</span> + XMLResponse.responseText);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;, 100);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上面的代码还是很清楚的，用选择器获取当前选中<code>radio</code>的<code>value</code>，使用其拼接需要请求的<code>api</code>，接着用<code>ajax</code>将文件数据<code>post</code>到<code>api</code>，成功后返回图片的地址。</p>
<h2 id="开始编写"><a href="#开始编写" class="headerlink" title="开始编写"></a>开始编写</h2><p>有了<code>api</code>，接下来就很简单了，基本思路就是：</p>
<ol>
<li>打开文件</li>
<li>使用<code>requests</code>进行<code>post</code></li>
<li>输出返回的图片<code>url</code></li>
</ol>
<hr>
<p>使用了<code>requests</code>/<code>click</code>/<code>os</code>三个包。缺少的包可以使用<code>sudo pip install 包名</code>安装。</p>
<p>首先将允许的图片文件拓展名和<code>api</code>地址设置为全局变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这里列举了几种常见的图片格式，其它格式可以修改后自行测试</span></span><br><span class="line">allowedExtension = [<span class="string">'.jpeg'</span>, <span class="string">'.bmp'</span>, <span class="string">'.jpg'</span>, <span class="string">'.png'</span>, <span class="string">'.webp'</span>]</span><br><span class="line">url = <span class="string">''</span></span><br></pre></td></tr></table></figure>

<p>接着使用<code>click</code>为<code>main</code>函数增加命令行参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@click.command()</span></span><br><span class="line"><span class="meta">@click.option('--type', '-t', default='1688', type=click.Choice(['1688', 'tieba', '360', 'taobao', 'smms', 'sohu', 'jd']), help='image hosting service.')</span></span><br><span class="line"><span class="meta">@click.argument('paths', nargs=-1, type=click.Path(exists=True, readable=True))</span></span><br></pre></td></tr></table></figure>

<p><code>--type/-t option</code>用于指定使用的图床，限制了图床的选择范围，默认使用阿里图床，<code>paths argument</code>接受多个路径参数，在此处保证了目录存在并可读。</p>
<p>然后是<code>main</code>函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(type, paths)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> url</span><br><span class="line">    url = <span class="string">'https://pic.suo.dog/api/tc.php?type=&#123;&#125;&amp;echo=imgurl'</span>.format(type)</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    print(<span class="string">'\033[33m开始上传...\033[0m'</span>)</span><br><span class="line">    <span class="keyword">for</span> path <span class="keyword">in</span> paths:</span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(path):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> path.endswith(<span class="string">'/'</span>):</span><br><span class="line">                path += <span class="string">'/'</span></span><br><span class="line">            items = os.listdir(path)</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">                <span class="keyword">if</span> os.path.isfile(path + item):</span><br><span class="line">                    count += uploadFile(path + item)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            count += uploadFile(path)</span><br><span class="line">    print(<span class="string">'\033[33m上传完成，共上传&#123;&#125;张图片!\033[0m'</span>.format(count))</span><br></pre></td></tr></table></figure>

<blockquote>
<p>类似于<code>\033[33m开始上传...\033[0m</code>的格式是为了实现彩色输出，详情见<a href="https://www.liuhaolin.com/linux/318.html" target="_blank" rel="noopener">该文章</a>。</p>
</blockquote>
<p>使用获取到的<code>type</code>组成<code>url</code>，使用<code>count</code>标记上传图片的张数，遍历所有的路径参数，如果该路径参数为目录，则尝试上传该目录的所有文件，如果该路径参数为文件，则直接尝试上传该文件。最后输出上传的图片张数。</p>
<p>之后是核心的上传函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uploadFile</span><span class="params">(file)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> os.path.splitext(file)[<span class="number">-1</span>] <span class="keyword">in</span> allowedExtension:</span><br><span class="line">        postContent = &#123;<span class="string">'file'</span>: open(file, <span class="string">'rb'</span>)&#125;</span><br><span class="line">        <span class="keyword">with</span> requests.post(url, files=postContent) <span class="keyword">as</span> response:</span><br><span class="line">            print(<span class="string">'\033[31m&#123;&#125;\033[0m : \033[4;32m&#123;&#125;\033[0m'</span>.format(</span><br><span class="line">                os.path.basename(file), response.text))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>判断拓展名是否允许，如果允许则将该文件用二进制打开，<code>post</code>给<code>api</code>，输出文件名和上传的地址，返回<code>1</code>，否则返回<code>0</code>。</p>
<p>最后的内容就不用说了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<h2 id="使用截图"><a href="#使用截图" class="headerlink" title="使用截图"></a>使用截图</h2><blockquote>
<p>该截图同样使用该工具上传（使用<code>阿里图床/--type 1688</code>）</p>
</blockquote>
<p><img src="https://ae01.alicdn.com/kf/U7999450fd3164007a8ced5305332715ep.png" alt=""></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>啊，没想到这么几行代码居然能水这么长一篇文章！（滑稽</p>
<p>目前<code>1688</code>图床可以正常使用，其它图床没有测试，如果有什么问题的话可以反馈给我。</p>
]]></content>
      <categories>
        <category>开发记录</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>image</tag>
      </tags>
  </entry>
  <entry>
    <title>大二下学期即将开始啦！</title>
    <url>/newTerm/</url>
    <content><![CDATA[<p>又是好长一段时间过去了！</p>
<p>这些天因为病毒侵袭一直宅在家里。浑浑噩噩地度过了难熬的寒假，总算是盼来了新学期！（不是</p>
<a id="more"></a>

<h2 id="课表"><a href="#课表" class="headerlink" title="课表"></a>课表</h2><p>说到新学期，第一想到的当然是新课表啦。下面是我的课表：</p>
<p><img src="https://img.vim-cn.com/69/abce7696755d9da5a5d400bd7fb37c0f35cc38.jpg" alt="001"></p>
<p><img src="https://img.vim-cn.com/51/eba042ce6f689a3c7a748f68f28fc8eec72c06.jpg" alt="002"></p>
<h2 id="授课"><a href="#授课" class="headerlink" title="授课"></a>授课</h2><p>因为病毒的影响，前几周只能老老实实在家里上网课了。大概就是这些，目前还有几门课没有通知，先不管啦…</p>
<table>
<thead>
<tr>
<th>科目</th>
<th>授课方式</th>
<th>具体内容</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>人工智能</td>
<td>MOOC+BB+QQ群</td>
<td>参见BB平台</td>
<td>无</td>
</tr>
<tr>
<td>数字逻辑与数字系统</td>
<td>雨课堂直播+MOOC+BB+QQ群</td>
<td>参见BB平台</td>
<td>需要提前安装Altera Quartus 13.1或更高版本</td>
</tr>
<tr>
<td>算法设计与分析</td>
<td>未知</td>
<td>无</td>
<td>无</td>
</tr>
<tr>
<td>汇编语言程序设计</td>
<td>BB+QQ群</td>
<td>参见BB平台</td>
<td>记得按时提交作业（平时成绩50分，作业占很大比例）</td>
</tr>
<tr>
<td>编译原理</td>
<td>未知</td>
<td>无</td>
<td>无</td>
</tr>
<tr>
<td>形势与政策</td>
<td>优课堂</td>
<td>无</td>
<td>作业要写2000字时事评论（纸版），返校后上交</td>
</tr>
<tr>
<td>思想政治理论实践课</td>
<td>未知</td>
<td>无</td>
<td>无</td>
</tr>
<tr>
<td>体育（羽毛球）</td>
<td>MOOC+体适能训练</td>
<td>无</td>
<td>MOOC为《八法五步拳》</td>
</tr>
</tbody></table>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>明天就要上课了，就目前来看，网课属实不大方便。一方面老师需要花费额外时间熟悉平台使用，另一方面，学生们需要时刻关注这些平台，平台过于分散也给学生们带来了很大的困扰。</p>
<p>希望疫情快快结束，大家能尽快回归到自己的日常生活吧。</p>
]]></content>
      <categories>
        <category>生活点滴</category>
      </categories>
      <tags>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title>RSSHub+Bot实现RSS订阅</title>
    <url>/yourRssBot/</url>
    <content><![CDATA[<p>最近开始使用<code>RSS</code>，真的是<strong>high到不行</strong>！</p>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>什么是<code>RSS</code>？引用维基百科上的定义：</p>
<blockquote>
<p><strong>RSS</strong>（<strong>简易信息聚合</strong>）是一种消息来源格式规范，用以<strong>聚合经常发布更新数据的网站</strong>，例如博客文章、新闻、音频或视频的网摘。RSS文件（或称做摘要、网络摘要、或频更新，提供到频道）包含全文或是节录的文字，再加上发布者所订阅之网摘数据和授权的元数据。</p>
</blockquote>
<p>在这个信息碎片化的时代，兴趣算法大行其道，我们逐渐失去了自己选择信息的权力。如果你也像我一样对此感到厌倦，也许回归<code>RSS</code>会是个更好的选择。<code>RSS</code>能让你自由地订阅信息来源，可以避免无关信息的干扰，节省你宝贵的时间。</p>
<a id="more"></a>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用<code>RSS</code>，你需要可订阅的源和RSS阅读器。</p>
<ol>
<li><p>订阅源</p>
<p>很遗憾，现如今很多网站都没有对<code>RSS</code>提供支持，这里就要提到<a href="https://github.com/diygod" target="_blank" rel="noopener">DIYgod</a>大佬发起的项目<a href="https://github.com/DIYgod/RSSHub" target="_blank" rel="noopener">RSSHub</a>了。</p>
<blockquote>
<p>RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容。</p>
</blockquote>
<p>用户可以选择使用<code>RSSHub</code>官方的<code>demo</code>，或者选择自行部署，具体请参阅<a href="https://docs.rsshub.app/" target="_blank" rel="noopener">文档</a>。</p>
</li>
<li><p>阅读器</p>
<p>同理，现如今优秀的RSS阅读器也如凤毛麟角，具体到<code>linux</code>平台更是少之又少，我试用了很多款都没有找到满意的。于是转变思路选择了<code>telegram bot</code>，原因主要有两点：</p>
<ul>
<li><p><strong>可以多平台使用</strong></p>
</li>
<li><p><strong>可以实时更新</strong></p>
</li>
</ul>
</li>
</ol>
<p>去查找相关教程，发现了<code>go</code>实现的<a href="https://github.com/indes/flowerss-bot" target="_blank" rel="noopener"><code>flowerss-bot</code></a>，同样支持使用<code>demo</code>或自行部署，但试用后发现其<code>demo</code>更新频率很低，于是转而手动部署（顺便还能利用上我的闲置服务器）。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><blockquote>
<p>体验：订阅肺炎辟谣网站，还没听到谣言就收到了辟谣推送 (๑•̀ㅂ•́)و✧</p>
</blockquote>
<p>使用截图：</p>
<p><img src="https://img.vim-cn.com/20/7cfc5776d8cd86c0372009dd0b846715a3384b.png" alt="帮助"></p>
<p><img src="https://img.vim-cn.com/09/ab2658f7df2c569c273eadeb58d885817d21a2.png" alt="推送"></p>
]]></content>
      <categories>
        <category>便捷使用</category>
      </categories>
      <tags>
        <tag>rss</tag>
      </tags>
  </entry>
  <entry>
    <title>马原毛概刷题工具(WEB VERSION)</title>
    <url>/questionTest/</url>
    <content><![CDATA[<p>考试之前临时赶工做了个马原刷题工具，考试后有了时间顺便把它拓展成了<a href="https://github.com/jeasonlau/Question-test" target="_blank" rel="noopener">马原毛概刷题工具</a>，添加了随机刷题，考试模拟，错题本等功能，但平心而论，<code>python</code>的命令行程序还是不太易于使用，于是考虑将其改为网页版本，目前<a href="https://github.com/jeasonlau/Question-test-web" target="_blank" rel="noopener">该项目</a>已经开源在了github（在此前并没有接触过前端，所以可能会有很多不足之处）。</p>
<a id="more"></a>

<h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><p>后端使用<code>go</code>的轻量web框架<code>gin</code>，<a href="https://github.com/jeasonlau/Question-test-web/blob/master/back-end/main.go" target="_blank" rel="noopener">代码在这儿</a>！</p>
<p>其通过读取当前目录的<code>mayuan.json/maogai.json</code>，根据不同的路由返回不同的结果：</p>
<table>
<thead>
<tr>
<th align="center">访问地址</th>
<th align="center">返回结果</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/:subject/position/:num</td>
<td align="center">返回该subject位置为num的题目</td>
</tr>
<tr>
<td align="center">/:subject/random/</td>
<td align="center">返回该subject随机一道题目</td>
</tr>
<tr>
<td align="center">/:subject/random/radio</td>
<td align="center">返回该subject随机一道单选题目</td>
</tr>
<tr>
<td align="center">/:subject/random/checkbox</td>
<td align="center">返回该subject随机一道多选题目</td>
</tr>
</tbody></table>
<h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>前端使用<code>vue.js</code>，准备学习的时候，在官方文档中发现了这句话：</p>
<blockquote>
<p>官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的。</p>
</blockquote>
<p>而我对前端知识一无所知，于是先去<code>freecodecamp</code>学习了<code>HTML</code>基础和前几节<code>CSS</code>（因为<code>CSS</code>内容实在是太多了！），然后去<code>廖雪峰教程</code>把<code>JavaScript</code>学到了函数部分，之后一边参考官方文档学习一边上手开发。</p>
<hr>
<p>首先使用<code>webpack</code>脚手架创建<code>vue</code>项目，接着安装并引入<code>muse-ui</code>组件库。</p>
<ol>
<li><p>路由</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> index <span class="keyword">from</span> <span class="string">'../components/index'</span></span><br><span class="line"><span class="keyword">import</span> temp <span class="keyword">from</span> <span class="string">'../components/temp'</span></span><br><span class="line"><span class="keyword">import</span> exam <span class="keyword">from</span> <span class="string">'../components/exam'</span></span><br><span class="line"><span class="keyword">import</span> order <span class="keyword">from</span> <span class="string">'../components/order'</span></span><br><span class="line"><span class="keyword">import</span> about <span class="keyword">from</span> <span class="string">'../components/about'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'index'</span>,</span><br><span class="line">      component: index</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/马原'</span>,</span><br><span class="line">      name: <span class="string">'mayuan'</span>,</span><br><span class="line">      component: temp</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/毛概'</span>,</span><br><span class="line">      name: <span class="string">'maogai'</span>,</span><br><span class="line">      component: temp</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/马原/顺序刷题'</span>,</span><br><span class="line">      name: <span class="string">'mayuanorder'</span>,</span><br><span class="line">      component: order</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/毛概/顺序刷题'</span>,</span><br><span class="line">      name: <span class="string">'maogaiorder'</span>,</span><br><span class="line">      component: order</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/马原/考试模拟'</span>,</span><br><span class="line">      name: <span class="string">'mayuanexam'</span>,</span><br><span class="line">      component: exam</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/毛概/考试模拟'</span>,</span><br><span class="line">      name: <span class="string">'maogaiexam'</span>,</span><br><span class="line">      component: exam</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/关于'</span>,</span><br><span class="line">      name: <span class="string">'about'</span>,</span><br><span class="line">      component: about</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>组件</p>
<ul>
<li><p><code>App.vue</code>中写入通用的顶栏，侧边栏等内容，监听路由变化修改标题。</p>
</li>
<li><p><code>index.vue</code>和<code>about.vue</code>使用纯<code>HTML/CSS</code>写成。</p>
</li>
<li><p><code>temp.vue</code>用于选择刷题方式。</p>
</li>
<li><p><code>order.vue</code>为顺序刷题界面，使用<code>mu-pagination</code>进行翻页，<code>exam.vue</code>为考试模拟界面，使用<code>mu-load-more</code>实现题目部分加载。</p>
</li>
<li><p><code>question.vue</code>为单位题目，是<code>order.vue</code>和<code>exam.vue</code>的子组件，监听<code>props</code>中<code>num</code>的变化，调用<code>getQuestion()</code>加载相应题目并判断是单选还是多选。在选择选项时使用<code>ifRight()</code>判断答案是否正确。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ifRight</span></span><br><span class="line">ifRight: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> answer</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.isRadio === <span class="literal">false</span>) &#123;<span class="comment">// 多选将答案array排序并链接为字符串</span></span><br><span class="line">          answer = <span class="keyword">this</span>.yourAnswer.sort().join(<span class="string">""</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">// 单选直接获取</span></span><br><span class="line">          answer = <span class="keyword">this</span>.yourAnswer</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (answer === <span class="keyword">this</span>.question[<span class="string">"Answer"</span>]) &#123;</span><br><span class="line">          <span class="keyword">this</span>.isRight = <span class="literal">true</span></span><br><span class="line">          <span class="keyword">let</span> that = <span class="keyword">this</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.timer)</span><br><span class="line">            clearTimeout(<span class="keyword">this</span>.timer)</span><br><span class="line">          <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">// 显示2s的通知</span></span><br><span class="line">            that.isRight = <span class="literal">false</span></span><br><span class="line">          &#125;, <span class="number">2000</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.isRight = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">// getQuestion</span></span><br><span class="line">getQuestion () &#123;</span><br><span class="line">    <span class="keyword">this</span>.yourAnswer=[]</span><br><span class="line">    <span class="comment">//根据父组件的path和当前num获取要请求的地址</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.type === <span class="string">"/马原/顺序刷题"</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.url = <span class="string">"https://.../api/mayuan/position/"</span> + (<span class="keyword">this</span>.num - <span class="number">1</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.type === <span class="string">"/毛概/顺序刷题"</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.url = <span class="string">"https://.../api/maogai/position/"</span> + (<span class="keyword">this</span>.num - <span class="number">1</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.type === <span class="string">"/马原/考试模拟"</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.num &lt;= <span class="number">40</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.url = <span class="string">"https://.../api/mayuan/random/radio"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.url= <span class="string">"https://.../api/mayuan/random/checkbox"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.type === <span class="string">"/毛概/考试模拟"</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.num &lt;= <span class="number">40</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.url = <span class="string">"https://.../api/maogai/random/radio"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.url = <span class="string">"https://.../api/maogai/random/checkbox"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    axios<span class="comment">// 使用axios请求api获取题目</span></span><br><span class="line">        .get(<span class="keyword">this</span>.url)</span><br><span class="line">        .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.question = response.data</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.question[<span class="string">'Answer'</span>].length &gt; <span class="number">1</span>) &#123;<span class="comment">// 判断是单选还是多选</span></span><br><span class="line">            <span class="keyword">this</span>.isRadio = <span class="literal">false</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.isRadio = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>在部署的时候遇到了不少问题。</p>
<p>开始在本地调试时发现无法加载出题目。查看<code>chrome console</code>中的错误信息，查询后发现是因为后端没有配置跨域，于是在后端路由中加上了：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">c.Writer.Header().Set(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>)</span><br></pre></td></tr></table></figure>

<p>调试正常，但部署到<code>github pages</code>后发现仍然无法加载，查看错误信息，得知在<code>https</code>网页中不能加载<code>http</code>资源，于是任务变成了给<code>gin</code>加上<code>https</code>。</p>
<p>查阅发现一般方法是申请子域名和免费证书，但我懒得整那么多了，正好手头有个<code>https</code>域名，直接给<code>nginx</code>的当前<code>server</code>块配个反向代理：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">location</span> /api&#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:8080;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后在<code>github pages</code>中请求这个地址，但是不知道是不是因为中间隔了个<code>nginx</code>，又出现了跨域问题，一时没有查到解决方法，所以不得已把前端也部署在了<code>nginx</code>上，问题解决（唯一问题是我的服务器没有备案，所以只能手动输入端口访问）。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue.js官方文档</a></li>
<li><a href="https://muse-ui.org/#/zh-CN/installation" target="_blank" rel="noopener">Muse-UI官方文档</a></li>
<li><a href="https://github.com/gin-gonic/gin/blob/master/README.md" target="_blank" rel="noopener">Gin.README.md</a></li>
<li><a href="https://neumathe.xyz/" target="_blank" rel="noopener">扶朕起来朕还能学</a></li>
</ul>
]]></content>
      <categories>
        <category>开发记录</category>
      </categories>
      <tags>
        <tag>website</tag>
        <tag>go</tag>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>本站更换主题啦！</title>
    <url>/changeTheme/</url>
    <content><![CDATA[<p>故事要从四天前说起…</p>
<p>那天，我像往常一样刷着网站，偶然发现了<a href="https://diygod.me/" target="_blank" rel="noopener">DIYgod</a>大佬的博客，看着这精美的主题，再回头审视一下自己使用的简陋到爆的<code>next</code>，不禁萌生了更换主题的想法。</p>
<a id="more"></a>

<p>根据<code>footer</code>里的信息，我找到了这个主题<code>Sagiri</code>的托管地址，将其下载了下来，配置好<code>_config.yml</code>文件并<code>hexo s</code>，本以为事情就这样结束了。然并卵，我发现有很多功能都无法正常使用，正如他本人在<a href="https://diygod.me/new-blog/" target="_blank" rel="noopener">这篇文章</a>中写的一样：</p>
<blockquote>
<p>主题虽然开源了，但是属于自用性质的项目，很多应该做成可定制化的地方都没有做，从开源项目的视角来看做得并不好，而我目前又对制作主题并没有太高的兴致，所以使用之前还请慎重考虑</p>
</blockquote>
<p>然而这是后话了，当时的我并没有看到这些，于是头铁地开始了主题文件的增删改查之路（此处省略一万字）。</p>
<hr>
<p>四天过去了，通过对文件的深度剖析（指删除很多本来就有的模块然后重新添加），我深刻地了解了<code>css</code>、<code>html</code>和<code>javascript</code>，明白了<code>hexo</code>主题的组织形式（并没有），于是准备记录一下这个主题部分特性的实现方式：</p>
<ol>
<li><p>网页无刷新跳转/自动滚动到正文</p>
<p>使用<code>pjax</code>实现，主要参考<a href="https://liuyib.github.io/2019/09/24/use-pjax-to-your-site/" target="_blank" rel="noopener">这篇文章</a>。</p>
</li>
<li><p>根据网页状态动态修改标题</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// cheat.js</span></span><br><span class="line"><span class="keyword">var</span> OriginTitle = <span class="built_in">document</span>.title;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">        $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"/images/failure.ico"</span>);</span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">'╭(°A°`)╮ 页面崩溃啦 ~'</span>;</span><br><span class="line">        clearTimeout(titleTime);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"/images/favicon.ico"</span>);</span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">'(ฅ&gt;ω&lt;*ฅ) 噫又好了~'</span> + OriginTitle;</span><br><span class="line">        titleTime = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.title = OriginTitle;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>随机的丝带背景</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// evan-you.js</span></span><br><span class="line"><span class="comment">/*&lt;canvas id="evanyou"&gt;&lt;/canvas&gt;*/</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">'evanyou'</span>)) &#123;</span><br><span class="line">  <span class="keyword">var</span> c = <span class="built_in">document</span>.getElementById(<span class="string">'evanyou'</span>),</span><br><span class="line">    x = c.getContext(<span class="string">'2d'</span>),</span><br><span class="line">    pr = <span class="built_in">window</span>.devicePixelRatio || <span class="number">1</span>,</span><br><span class="line">    w = <span class="built_in">window</span>.innerWidth,</span><br><span class="line">    h = <span class="built_in">window</span>.innerHeight,</span><br><span class="line">    f = <span class="number">90</span>,</span><br><span class="line">    q,</span><br><span class="line">    m = <span class="built_in">Math</span>,</span><br><span class="line">    r = <span class="number">0</span>,</span><br><span class="line">    u = m.PI * <span class="number">2</span>,</span><br><span class="line">    v = m.cos,</span><br><span class="line">    z = m.random</span><br><span class="line">  c.width = w * pr</span><br><span class="line">  c.height = h * pr</span><br><span class="line">  x.scale(pr, pr)</span><br><span class="line">  x.globalAlpha = <span class="number">0.6</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">evanyou</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    x.clearRect(<span class="number">0</span>, <span class="number">0</span>, w, h)</span><br><span class="line">    q = [&#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: h * <span class="number">.7</span> + f &#125;, &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: h * <span class="number">.7</span> - f &#125;]</span><br><span class="line">    <span class="keyword">while</span> (q[<span class="number">1</span>].x &lt; w + f) d(q[<span class="number">0</span>], q[<span class="number">1</span>])</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">d</span> (<span class="params">i, j</span>) </span>&#123;</span><br><span class="line">    x.beginPath()</span><br><span class="line">    x.moveTo(i.x, i.y)</span><br><span class="line">    x.lineTo(j.x, j.y)</span><br><span class="line">    <span class="keyword">var</span> k = j.x + (z() * <span class="number">2</span> - <span class="number">0.25</span>) * f,</span><br><span class="line">      n = y(j.y)</span><br><span class="line">    x.lineTo(k, n)</span><br><span class="line">    x.closePath()</span><br><span class="line">    r -= u / <span class="number">-50</span></span><br><span class="line">    x.fillStyle = <span class="string">'#'</span> + (v(r) * <span class="number">127</span> + <span class="number">128</span> &lt;&lt; <span class="number">16</span> | v(r + u / <span class="number">3</span>) * <span class="number">127</span> + <span class="number">128</span> &lt;&lt; <span class="number">8</span> | v(r + u / <span class="number">3</span> * <span class="number">2</span>) * <span class="number">127</span> + <span class="number">128</span>).toString(<span class="number">16</span>)</span><br><span class="line">    x.fill()</span><br><span class="line">    q[<span class="number">0</span>] = q[<span class="number">1</span>]</span><br><span class="line">    q[<span class="number">1</span>] = &#123; <span class="attr">x</span>: k, <span class="attr">y</span>: n &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">y</span> (<span class="params">p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = p + (z() * <span class="number">2</span> - <span class="number">1.1</span>) * f</span><br><span class="line">    <span class="keyword">return</span> (t &gt; h || t &lt; <span class="number">0</span>) ? y(p) : t</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.onclick = evanyou</span><br><span class="line">  <span class="built_in">document</span>.ontouchstart = evanyou</span><br><span class="line">  evanyou()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>点击的烟花效果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// fireworks.js</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(&#123; origin, speed, color, angle, context &#125;) &#123;</span><br><span class="line">    <span class="keyword">this</span>.origin = origin</span><br><span class="line">    <span class="keyword">this</span>.position = &#123; ...this.origin &#125;</span><br><span class="line">    <span class="keyword">this</span>.color = color</span><br><span class="line">    <span class="keyword">this</span>.speed = speed</span><br><span class="line">    <span class="keyword">this</span>.angle = angle</span><br><span class="line">    <span class="keyword">this</span>.context = context</span><br><span class="line">    <span class="keyword">this</span>.renderCount = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    <span class="keyword">this</span>.context.fillStyle = <span class="keyword">this</span>.color</span><br><span class="line">    <span class="keyword">this</span>.context.beginPath()</span><br><span class="line">    <span class="keyword">this</span>.context.arc(<span class="keyword">this</span>.position.x, <span class="keyword">this</span>.position.y, <span class="number">2</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">this</span>.context.fill()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    <span class="keyword">this</span>.position.x = (<span class="built_in">Math</span>.sin(<span class="keyword">this</span>.angle) * <span class="keyword">this</span>.speed) + <span class="keyword">this</span>.position.x</span><br><span class="line">    <span class="keyword">this</span>.position.y = (<span class="built_in">Math</span>.cos(<span class="keyword">this</span>.angle) * <span class="keyword">this</span>.speed) + <span class="keyword">this</span>.position.y + (<span class="keyword">this</span>.renderCount * <span class="number">0.3</span>)</span><br><span class="line">    <span class="keyword">this</span>.renderCount++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boom</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span> (&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;) &#123;</span><br><span class="line">    <span class="keyword">this</span>.origin = origin</span><br><span class="line">    <span class="keyword">this</span>.context = context</span><br><span class="line">    <span class="keyword">this</span>.circleCount = circleCount</span><br><span class="line">    <span class="keyword">this</span>.area = area</span><br><span class="line">    <span class="keyword">this</span>.stop = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">this</span>.circles = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomArray(range) &#123;</span><br><span class="line">    <span class="keyword">const</span> length = range.length</span><br><span class="line">    <span class="keyword">const</span> randomIndex = <span class="built_in">Math</span>.floor(length * <span class="built_in">Math</span>.random())</span><br><span class="line">    <span class="keyword">return</span> range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomColor() &#123;</span><br><span class="line">    <span class="keyword">const</span> range = [<span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'#'</span> + <span class="keyword">this</span>.randomArray(range) + <span class="keyword">this</span>.randomArray(range) + <span class="keyword">this</span>.randomArray(range) + <span class="keyword">this</span>.randomArray(range) + <span class="keyword">this</span>.randomArray(range) + <span class="keyword">this</span>.randomArray(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomRange(start, end) &#123;</span><br><span class="line">    <span class="keyword">return</span> (end - start) * <span class="built_in">Math</span>.random() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.circleCount; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> circle = <span class="keyword">new</span> Circle(&#123;</span><br><span class="line">        context: <span class="keyword">this</span>.context,</span><br><span class="line">        origin: <span class="keyword">this</span>.origin,</span><br><span class="line">        color: <span class="keyword">this</span>.randomColor(),</span><br><span class="line">        angle: <span class="keyword">this</span>.randomRange(<span class="built_in">Math</span>.PI - <span class="number">1</span>, <span class="built_in">Math</span>.PI + <span class="number">1</span>),</span><br><span class="line">        speed: <span class="keyword">this</span>.randomRange(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">this</span>.circles.push(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    <span class="keyword">this</span>.circles.forEach(<span class="function">(<span class="params">circle, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (circle.position.x &gt; <span class="keyword">this</span>.area.width || circle.position.y &gt; <span class="keyword">this</span>.area.height) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.circles.splice(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      circle.move()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.circles.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.stop = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    <span class="keyword">this</span>.circles.forEach(<span class="function"><span class="params">circle</span> =&gt;</span> circle.draw())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CursorSpecialEffects</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">this</span>.computerCanvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>)</span><br><span class="line">    <span class="keyword">this</span>.renderCanvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.computerContext = <span class="keyword">this</span>.computerCanvas.getContext(<span class="string">'2d'</span>)</span><br><span class="line">    <span class="keyword">this</span>.renderContext = <span class="keyword">this</span>.renderCanvas.getContext(<span class="string">'2d'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.globalWidth = <span class="built_in">window</span>.innerWidth</span><br><span class="line">    <span class="keyword">this</span>.globalHeight = <span class="built_in">window</span>.innerHeight</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.booms = []</span><br><span class="line">    <span class="keyword">this</span>.running = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleMouseDown(e) &#123;</span><br><span class="line">    <span class="keyword">const</span> boom = <span class="keyword">new</span> Boom(&#123;</span><br><span class="line">      origin: &#123; <span class="attr">x</span>: e.clientX, <span class="attr">y</span>: e.clientY &#125;,</span><br><span class="line">      context: <span class="keyword">this</span>.computerContext,</span><br><span class="line">      area: &#123;</span><br><span class="line">        width: <span class="keyword">this</span>.globalWidth,</span><br><span class="line">        height: <span class="keyword">this</span>.globalHeight</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom.init()</span><br><span class="line">    <span class="keyword">this</span>.booms.push(boom)</span><br><span class="line">    <span class="keyword">this</span>.running || <span class="keyword">this</span>.run()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlePageHide() &#123;</span><br><span class="line">    <span class="keyword">this</span>.booms = []</span><br><span class="line">    <span class="keyword">this</span>.running = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    <span class="keyword">const</span> style = <span class="keyword">this</span>.renderCanvas.style</span><br><span class="line">    style.position = <span class="string">'fixed'</span></span><br><span class="line">    style.top = style.left = <span class="number">0</span></span><br><span class="line">    style.zIndex = <span class="string">'999999999999999999999999999999999999999999'</span></span><br><span class="line">    style.pointerEvents = <span class="string">'none'</span></span><br><span class="line"></span><br><span class="line">    style.width = <span class="keyword">this</span>.renderCanvas.width = <span class="keyword">this</span>.computerCanvas.width = <span class="keyword">this</span>.globalWidth</span><br><span class="line">    style.height = <span class="keyword">this</span>.renderCanvas.height = <span class="keyword">this</span>.computerCanvas.height = <span class="keyword">this</span>.globalHeight</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.body.append(<span class="keyword">this</span>.renderCanvas)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'mousedown'</span>, <span class="keyword">this</span>.handleMouseDown.bind(<span class="keyword">this</span>))</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'pagehide'</span>, <span class="keyword">this</span>.handlePageHide.bind(<span class="keyword">this</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  run() &#123;</span><br><span class="line">    <span class="keyword">this</span>.running = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.booms.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.running = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requestAnimationFrame(<span class="keyword">this</span>.run.bind(<span class="keyword">this</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.computerContext.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.globalWidth, <span class="keyword">this</span>.globalHeight)</span><br><span class="line">    <span class="keyword">this</span>.renderContext.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.globalWidth, <span class="keyword">this</span>.globalHeight)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.booms.forEach(<span class="function">(<span class="params">boom, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (boom.stop) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.booms.splice(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      boom.move()</span><br><span class="line">      boom.draw()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">this</span>.renderContext.drawImage(<span class="keyword">this</span>.computerCanvas, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.globalWidth, <span class="keyword">this</span>.globalHeight)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cursorSpecialEffects = <span class="keyword">new</span> CursorSpecialEffects()</span><br><span class="line">cursorSpecialEffects.init()</span><br></pre></td></tr></table></figure>
</li>
<li><p>侧栏的固定</p>
<p>使用<code>affix</code>实现，主要参考<a href="https://www.runoob.com/bootstrap/bootstrap-affix-plugin.html" target="_blank" rel="noopener">这篇文章</a>。</p>
</li>
<li><p><code>valine</code>评论系统支持<code>pjax</code></p>
<p>参考<a href="https://github.com/xCss/Valine/issues/138" target="_blank" rel="noopener">这个issue</a>。</p>
</li>
</ol>
<hr>
<p>害，换个主题真的太难了，<strong>一年之内不打算再换了！</strong></p>
<p>好了，写完去睡觉啦 XD！</p>
<hr>
<p><strong><em>2020.1.30    23:12:33</em></strong></p>
<p>全站由<code>github</code>迁移到<code>coding</code>，国内浏览速度得到大幅提升。（香港服务器就是香啊！）</p>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>website</tag>
      </tags>
  </entry>
  <entry>
    <title>ManjaroWPS切换中文问题</title>
    <url>/wpsChangeLanguage/</url>
    <content><![CDATA[<blockquote>
<p><code>wps</code>在前几天更新之后，界面语言变成了英文，本来没有很太在意，觉得可能过几天更新就好了，但等了几天好像并没有更新的迹象，于是寻找方法进行修复…</p>
</blockquote>
<a id="more"></a>

<ol>
<li><p>首先打开<a href="https://aur.archlinux.org" target="_blank" rel="noopener">AUR仓库</a>，查看<code>wps-office</code>有关的包，发现了<code>wps-office-cn</code></p>
</li>
<li><p>查看其依赖，发现了<code>wps-office-mui-zh-cn (optional) – zh_CN support for WPS Office</code></p>
</li>
<li><p>得到修复方法，即手动安装语言包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yay -S wps-office-mui-zh-cn</span><br></pre></td></tr></table></figure>

<p>重新打开<code>wps</code>，不出意外的话应该已经修复成功了（因为<code>wps</code>优先使用系统语言），如果没有成功的话，手动点击右上角的<code>A</code>图标，在里面选择中文语言包进行切换即可。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>python中文字符串居中问题</title>
    <url>/stringCenter/</url>
    <content><![CDATA[<p>最近在实现一个小功能的时候遇到了问题：字符串的居中输出。</p>
<p>虽然python有内置的字符串方法<code>string.center()</code>，使字符串可以居中输出，但它并不能顺利地处理中文字符串，一直无法达到让中文字符串居中的效果。</p>
<a id="more"></a>

<p>后来我突然醒悟，是不是因为python字符串长度的问题？用以下代码测试：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1=<span class="string">'哈哈哈'</span></span><br><span class="line">str2=<span class="string">'hhh'</span></span><br><span class="line">print(len(str1),<span class="string">'+'</span>,len(str2))</span><br></pre></td></tr></table></figure>

<p>输出结果居然是<code>3+3</code>，也就是说python将一个汉字/字母都记作一个字符，但其实它们的宽度并不相同。这样计算的话必然会导致无法正常居中，关键是要把汉字区别出来，于是我手动写了个居中函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strCenter</span><span class="params">(str, len)</span>:</span></span><br><span class="line">    lst = list(str)</span><br><span class="line">    length = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> lst:</span><br><span class="line">        <span class="keyword">if</span> item <span class="keyword">in</span> string.printable:</span><br><span class="line">            length += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            length += <span class="number">2</span></span><br><span class="line">    count = int((len - length) / <span class="number">2</span>)</span><br><span class="line">    result = count * <span class="string">' '</span> + str + count * <span class="string">' '</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>

<p>就可以正常居中啦！</p>
<p>追加以下内容测试一下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="string">'哈a哈a哈a哈a'</span></span><br><span class="line">b = <span class="string">'12345678901234567890'</span></span><br><span class="line">print(a.center(<span class="number">20</span>))</span><br><span class="line">print(b.center(<span class="number">20</span>))</span><br><span class="line">print(<span class="number">20</span> * <span class="string">'-'</span>)</span><br><span class="line">print(strCenter(a, <span class="number">20</span>))</span><br><span class="line">print(strCenter(b, <span class="number">20</span>))</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">      哈a哈a哈a哈a      </span><br><span class="line">12345678901234567890</span><br><span class="line">--------------------</span><br><span class="line">    哈a哈a哈a哈a    </span><br><span class="line">12345678901234567890</span><br></pre></td></tr></table></figure>

<p>任务成功完成！</p>
]]></content>
      <categories>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>php表单提交并自动发送邮件</title>
    <url>/formSubmit/</url>
    <content><![CDATA[<p>最近在<a href="https://html5up.net/" target="_blank" rel="noopener">html5up</a>上淘了个主页模板，模板底有一个表单，今天在修改模板的时候，朋友提起可以配置表单实现提交表单时自动发送邮件通知，于是就萌生了这个想法，结果没想到一搞就是三四个小时（主要是因为网上的某些“教程”太坑人了！），所以记录一下配置过程给后来人参考。</p>
<a id="more"></a>

<h1 id="给服务器安装php-php-fpm"><a href="#给服务器安装php-php-fpm" class="headerlink" title="给服务器安装php,php-fpm"></a>给服务器安装php,php-fpm</h1><p>作者使用的是ubuntu18.04，所以使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install php</span><br><span class="line">sudo apt-get install php-fpm</span><br></pre></td></tr></table></figure>

<h1 id="web服务器添加php支持"><a href="#web服务器添加php支持" class="headerlink" title="web服务器添加php支持"></a>web服务器添加php支持</h1><p>作者使用的是nginx，为支持php需要修改一下配置文件，网上不少教程说要改<code>nginx.conf</code>，但我发现我这里的配置文件和他们的有很大差异，后来实测修改<code>/etc/nginx/sites-available/default</code>有效。将文件与php有关部分修改为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">      <span class="comment"># Add index.php to the list if you are using PHP</span></span><br><span class="line">      index index.html index.htm index.nginx-debian.html index.php;</span><br><span class="line"></span><br><span class="line">      server_name _;</span><br><span class="line">      </span><br><span class="line"><span class="comment"># nginx不允许静态文件响应post请求，会出现405 not allowed提示，所以需要添加以下内容</span></span><br><span class="line"><span class="comment"># 需要开启8080端口，或者可以修改为目前已经开启的端口（或许）</span></span><br><span class="line">      error_page  405 =200 @405;</span><br><span class="line">      location @405 &#123;</span><br><span class="line">          proxy_method GET;</span><br><span class="line">          proxy_pass http://你的地址:8080;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      location / &#123;</span><br><span class="line">              <span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line">              <span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line">              try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment"># pass PHP scripts to FastCGI server</span></span><br><span class="line">      <span class="comment">#</span></span><br><span class="line">      location ~ \.php$ &#123;</span><br><span class="line">              include snippets/fastcgi-php.conf;</span><br><span class="line"></span><br><span class="line">              <span class="comment"># With php-fpm (or other unix sockets):</span></span><br><span class="line">              <span class="comment"># 这里需要把php7.2修改为安装php时显示的版本</span></span><br><span class="line">              fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;</span><br><span class="line">              <span class="comment"># With php-cgi (or other tcp sockets):</span></span><br><span class="line">              <span class="comment"># fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<h1 id="修改表单所在的html文件"><a href="#修改表单所在的html文件" class="headerlink" title="修改表单所在的html文件"></a>修改表单所在的html文件</h1><p>接下来打开表单所在的html文件，修改form标签，例如我的：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--其实粘贴这么多只是想说form标签需要加个action="mail.php"啦（滑稽）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"mail.php"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fields"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field half"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">id</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field half"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"message"</span>&gt;</span>Message<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"message"</span> <span class="attr">id</span>=<span class="string">"message"</span> <span class="attr">rows</span>=<span class="string">"6"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"actions"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Send Message"</span> <span class="attr">class</span>=<span class="string">"primary"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"Clear"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="配置mail-php文件"><a href="#配置mail-php文件" class="headerlink" title="配置mail.php文件"></a>配置mail.php文件</h1><p>form提交将会调用mail.php文件，接下来就需要配置它了。我浏览了许多网站，发现网上大体只有两个模板，即<a href="https://jingyan.baidu.com/article/636f38bb482efcd6b8461019.html" target="_blank" rel="noopener">这个</a>和<a href="https://www.jb51.net/article/62543.htm" target="_blank" rel="noopener">这个</a>。但亲身体验后发现都！不！能！用！第一个是单纯的配置文件问题，我把各项修改好后还是不能用。（或许是因为我多删了点东西？）第二个则使用了php的mail()函数，不过很不幸的是，正如这篇<a href="https://www.jianshu.com/p/03e02c58200a" target="_blank" rel="noopener">最后解决我问题的文章</a>中写的一样：</p>
<blockquote>
<p>PHP环境下，是提供了发送邮件的函数<code>mail()</code>的，不过该函数要求服务器支持sendmail或者必须设置一台不需要中继的邮件发送服务器，但现在要找到一台不需要身份验证的邮件发送中继几乎不可能，所以使用mail函数往往无法成功发送电子邮件。</p>
</blockquote>
<p>mail()函数确实无法成功发送邮件。这篇文章同样给出了一个解决办法，就是使用<a href="https://github.com/PHPMailer/PHPMailer" target="_blank" rel="noopener">PHPMailer</a>。</p>
<p>将其<code>git clone</code>到服务器并解压，mail.php只需按照README.md中所给的Example进行微量修改，我的大概为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// Import PHPMailer classes into the global namespace</span></span><br><span class="line"><span class="comment">// These must be at the top of your script, not inside a function</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">SMTP</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">PHPMailer</span>\<span class="title">PHPMailer</span>\<span class="title">Exception</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改这三个文件的路径为服务器路径</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'./PHPMailer/src/Exception.php'</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">'./PHPMailer/src/PHPMailer.php'</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">'./PHPMailer/src/SMTP.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里将内容对应改成form标签中各项的名字</span></span><br><span class="line">$email=$_POST[<span class="string">'email'</span>];</span><br><span class="line">$name=$_POST[<span class="string">'name'</span>];</span><br><span class="line">$message=$_POST[<span class="string">'message'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Instantiation and passing `true` enables exceptions</span></span><br><span class="line">$mail = <span class="keyword">new</span> PHPMailer(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里我使用的是qq邮箱，其它邮箱同理</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//Server settings</span></span><br><span class="line">    $mail-&gt;SMTPDebug = SMTP::DEBUG_SERVER;                      <span class="comment">// Enable verbose debug output</span></span><br><span class="line">    $mail-&gt;isSMTP();                                            <span class="comment">// Send using SMTP</span></span><br><span class="line">    $mail-&gt;Host       = <span class="string">'smtp.qq.com'</span>;                    <span class="comment">// Set the SMTP server to send through</span></span><br><span class="line">    $mail-&gt;SMTPAuth   = <span class="keyword">true</span>;                                   <span class="comment">// Enable SMTP authentication</span></span><br><span class="line">    $mail-&gt;Username   = <span class="string">'邮箱的用户名'</span>;                     <span class="comment">// SMTP username</span></span><br><span class="line">    $mail-&gt;Password   = <span class="string">'邮箱的密码'</span>;                               <span class="comment">// SMTP password</span></span><br><span class="line"><span class="comment">//    $mail-&gt;SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` also accepted</span></span><br><span class="line">    $mail-&gt;SMTPSecure = <span class="string">'ssl'</span>;</span><br><span class="line">    $mail-&gt;Port       = <span class="number">465</span>;                                    <span class="comment">// TCP port to connect to</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Recipients</span></span><br><span class="line">    $mail-&gt;setFrom(<span class="string">'邮箱的用户名'</span>, <span class="string">'随便填个昵称'</span>);</span><br><span class="line">    $mail-&gt;addAddress(<span class="string">'发送到的邮箱'</span>, <span class="string">'随便填个昵称'</span>);     <span class="comment">// Add a recipient</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//	后边的那些我不用，就注释掉了</span></span><br><span class="line"><span class="comment">//    $mail-&gt;addAddress('ellen@example.com');               // Name is optional</span></span><br><span class="line"><span class="comment">//    $mail-&gt;addReplyTo('info@example.com', 'Information');</span></span><br><span class="line"><span class="comment">//    $mail-&gt;addCC('cc@example.com');</span></span><br><span class="line"><span class="comment">//    $mail-&gt;addBCC('bcc@example.com');</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Attachments</span></span><br><span class="line"><span class="comment">//    $mail-&gt;addAttachment('/var/tmp/file.tar.gz');         // Add attachments</span></span><br><span class="line"><span class="comment">//    $mail-&gt;addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Content</span></span><br><span class="line">    $mail-&gt;isHTML(<span class="keyword">true</span>);                                  <span class="comment">// Set email format to HTML</span></span><br><span class="line">    $mail-&gt;Subject = <span class="string">"An E-mail from $email"</span>;</span><br><span class="line">    $mail-&gt;Body = <span class="string">"This e-mail is written by $name : $message"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 我在测试时，AltBody中的内容并不会在邮件中显示出来，目前暂时不清楚有什么用</span></span><br><span class="line">    $mail-&gt;AltBody = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    $mail-&gt;send();</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Message has been sent'</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Message could not be sent. Mailer Error: &#123;$mail-&gt;ErrorInfo&#125;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="提交不跳转方法"><a href="#提交不跳转方法" class="headerlink" title="提交不跳转方法"></a>提交不跳转方法</h1><p>经过以上配置之后，你的表单应该可以正常发送邮件了，唯一的不足是在点击提交之后会跳转出现一堆提示信息，影响观感，<a href="https://segmentfault.com/a/1190000000461339" target="_blank" rel="noopener">这篇文章</a>中给出了一种可行方法，即为<code>form</code>标签加入target属性并添加<code>iframe</code>标签。以我的表单为例，需要将<code>form</code>标签修改为：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"mail.php"</span> <span class="attr">target</span>=<span class="string">"id_iframe"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>并在其后添加：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"id_iframe"</span> <span class="attr">name</span>=<span class="string">"id_iframe"</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样修改虽然有效，但会在点击提交之后出现一个简陋的框体，其中显示的内容就是之前跳转后的提示信息。这没有达到我们的目的，于是想到将<code>iframe</code>标签隐藏，也就是将其的高度和宽度设置为0：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"id_iframe"</span> <span class="attr">name</span>=<span class="string">"id_iframe"</span> <span class="attr">style</span>=<span class="string">""</span> <span class="attr">width</span>=<span class="string">"0"</span> <span class="attr">height</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>可这样又会出现一个问题，点击按钮之后邮件到底有没有发送成功是未知的，因为所有的提示信息都被隐藏掉了，那该怎么办呢？我想到的是，将原来php文件中的两个用于输出提示信息的<code>echo</code>修改成<code>echo &quot;&lt;script&gt;alert(&#39;内容&#39;)&lt;/script&gt;&quot;</code>，也就是：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">'Message has been sent'</span>;</span><br><span class="line"><span class="comment">// 替换为</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('Message has been sent')&lt;/script&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Message could not be sent. Mailer Error: &#123;$mail-&gt;ErrorInfo&#125;"</span>;</span><br><span class="line"><span class="comment">// 替换为</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('Message could not be sent.')&lt;/script&gt;"</span>;</span><br></pre></td></tr></table></figure>

<p>这样的话就可以实现网页弹窗提示邮件发送结果而不跳转了。</p>
<h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><p><img src="https://img.vim-cn.com/46/d7b3a55d08f29baa98472640716e9a8ae06907.jpg" alt="填写表单" title="填写表单"></p>
<p><img src="https://img.vim-cn.com/ea/1a881a1eb0565d390f224777de31823efaaeb4.jpg" alt="点击提交" title="点击提交"></p>
<p><img src="https://img.vim-cn.com/53/10173e2b8b20b797906fa6d25ef0aa769439a8.jpg" alt="收到邮件" title="收到邮件"></p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>总体来说，以上实现方式虽然可以正常使用，但是还有很大改进空间，比如提交不跳转的实现方式。不过毕竟自己没有系统学习过web方面的知识，也只能得过且过了。等什么时候能闲下来再考虑改进吧（笑）。也欢迎大家在评论里给我提建议吖！（话说这篇文章真的有人看吗？！）</p>
]]></content>
      <categories>
        <category>网站建设</category>
      </categories>
      <tags>
        <tag>website</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro常用的垃圾清理命令</title>
    <url>/cleanUpFiles/</url>
    <content><![CDATA[<ul>
<li><p>清除系统中无用的包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -R $(pacman -Qdtq)</span><br></pre></td></tr></table></figure>
</li>
<li><p>清除已下载的安装包</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo pacman -Scc</span><br></pre></td></tr></table></figure>
</li>
<li><p>日志垃圾</p>
<ul>
<li><p>查看日志文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">du -t 100M &#x2F;var</span><br><span class="line">or</span><br><span class="line">journalctl --disk-usage</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除指定大小日志文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo journalctl --vacuum-size&#x3D;50M</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>系统优化</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>禁用笔记本自带键盘的方法</title>
    <url>/disableKeyboard/</url>
    <content><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="禁用"><a href="#禁用" class="headerlink" title="禁用"></a>禁用</h3><p><strong>用管理员权限运行cmd，在其中输入：</strong>   </p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">sc config i8042prt <span class="built_in">start</span>= disabled</span><br></pre></td></tr></table></figure>

<p><strong>之后重启即可。</strong></p>
<a id="more"></a>

<h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><p><strong>与禁用的步骤相同，把输入的命令改为：</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">sc config i8042prt <span class="built_in">start</span>= demand</span><br></pre></td></tr></table></figure>

<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p><strong><em>注意：manjaro需要使用</em></strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo pacman -S xorg-xinput</span><br></pre></td></tr></table></figure>
<p><strong><em>进行安装以使用xinput命令。</em></strong></p>
<p><strong>打开终端，输入<code>xinput --list</code>获取设备列表：</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">❯ xinput --list </span><br><span class="line">⎡ Virtual core pointer                    	id=2	[master pointer  (3)]</span><br><span class="line">⎜   ↳ Virtual core XTEST pointer              	id=4	[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ USB Optical Mouse Mouse                 	id=14	[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ Synaptics TM3253-001                    	id=11	[slave  pointer  (2)]</span><br><span class="line">⎣ Virtual core keyboard                   	id=3	[master keyboard (2)]</span><br><span class="line">    ↳ Virtual core XTEST keyboard             	id=5	[slave  keyboard (3)]</span><br><span class="line">    ↳ Power Button                            	id=6	[slave  keyboard (3)]</span><br><span class="line">    ↳ Video Bus                               	id=7	[slave  keyboard (3)]</span><br><span class="line">    ↳ Power Button                            	id=8	[slave  keyboard (3)]</span><br><span class="line">    ↳ Sleep Button                            	id=9	[slave  keyboard (3)]</span><br><span class="line">    ↳ Integrated_Webcam_HD: Integrate         	id=10	[slave  keyboard (3)]</span><br><span class="line">    ↳ Dell WMI hotkeys                        	id=12	[slave  keyboard (3)]</span><br><span class="line">    ↳ AT Translated Set 2 keyboard            	id=13	[slave  keyboard (3)]</span><br><span class="line">    ↳ DELL Wireless hotkeys                   	id=15	[slave  keyboard (3)]</span><br><span class="line">    ↳ USB Keyboard Consumer Control           	id=16	[slave  keyboard (3)]</span><br><span class="line">    ↳ USB Keyboard System Control             	id=17	[slave  keyboard (3)]</span><br><span class="line">    ↳ USB Keyboard                            	id=18	[slave  keyboard (3)]</span><br></pre></td></tr></table></figure>

<p><strong>找到<code>AT Translated Set 2 keyboard</code>对应的id（本机为13）。</strong></p>
<h3 id="禁用-1"><a href="#禁用-1" class="headerlink" title="禁用"></a>禁用</h3><p><strong>在终端中输入</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xinput <span class="built_in">set</span>-prop 13 <span class="string">"Device Enabled"</span> 0</span><br></pre></td></tr></table></figure>

<h3 id="恢复-1"><a href="#恢复-1" class="headerlink" title="恢复"></a>恢复</h3><p><strong>在终端中输入</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xinput <span class="built_in">set</span>-prop 13 <span class="string">"Device Enabled"</span> 1</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>系统优化</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
